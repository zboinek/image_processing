digraph G {

    // Attributes
    graph [ overlap = "scalexy", fontname = "Verdana", fontsize = "7", fontcolor = "#0000007f", label = "Generated by Python Call Graph v1.0.1\nhttp://pycallgraph.slowchop.com" ];
    node [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff", style = "filled", shape = "rect" ];
    edge [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff" ];

    // Groups
    subgraph "cluster___main__" { "__main__"; label = "__main__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<module>" { "<module>"; label = "<module>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_and_load" { "_find_and_load"; label = "_find_and_load"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ModuleLockManager" { "_ModuleLockManager.__init__" "_ModuleLockManager.__enter__" "_ModuleLockManager.__exit__"; label = "_ModuleLockManager"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_module_lock" { "_get_module_lock"; label = "_get_module_lock"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ModuleLock" { "_ModuleLock.__init__" "_ModuleLock.acquire" "_ModuleLock.release"; label = "_ModuleLock"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_and_load_unlocked" { "_find_and_load_unlocked"; label = "_find_and_load_unlocked"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_spec" { "_find_spec"; label = "_find_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ImportLockContext" { "_ImportLockContext.__enter__" "_ImportLockContext.__exit__"; label = "_ImportLockContext"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_find_spec" { "find_spec"; label = "find_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_spec" { "_get_spec"; label = "_get_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_importer_cache" { "_path_importer_cache"; label = "_path_importer_cache"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_hooks" { "_path_hooks"; label = "_path_hooks"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_path_hook_for_FileFinder" { "path_hook_for_FileFinder"; label = "path_hook_for_FileFinder"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_isdir" { "_path_isdir"; label = "_path_isdir"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_is_mode_type" { "_path_is_mode_type"; label = "_path_is_mode_type"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_stat" { "_path_stat"; label = "_path_stat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FileFinder" { "FileFinder.__init__" "FileFinder.find_spec" "FileFinder._fill_cache" "FileFinder._get_spec"; label = "FileFinder"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<genexpr>" { "<genexpr>"; label = "<genexpr>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__relax_case" { "_relax_case"; label = "_relax_case"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_join" { "_path_join"; label = "_path_join"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<listcomp>" { "<listcomp>"; label = "<listcomp>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__verbose_message" { "_verbose_message"; label = "_verbose_message"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_isfile" { "_path_isfile"; label = "_path_isfile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SourceFileLoader" { "SourceFileLoader.__init__" "SourceFileLoader.create_module" "SourceFileLoader.exec_module" "SourceFileLoader.get_code" "SourceFileLoader._check_name_wrapper" "SourceFileLoader.get_filename" "SourceFileLoader.path_stats" "SourceFileLoader.get_data"; label = "SourceFileLoader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_spec_from_file_location" { "spec_from_file_location"; label = "spec_from_file_location"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ModuleSpec" { "ModuleSpec.__init__" "ModuleSpec.parent" "ModuleSpec.has_location" "ModuleSpec.cached"; label = "ModuleSpec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__load_unlocked" { "_load_unlocked"; label = "_load_unlocked"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_module_from_spec" { "module_from_spec"; label = "module_from_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__new_module" { "_new_module"; label = "_new_module"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__init_module_attrs" { "_init_module_attrs"; label = "_init_module_attrs"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_cached" { "_get_cached"; label = "_get_cached"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cache_from_source" { "cache_from_source"; label = "cache_from_source"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_split" { "_path_split"; label = "_path_split"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__installed_safely" { "_installed_safely.__init__" "_installed_safely.__enter__" "_installed_safely.__exit__"; label = "_installed_safely"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__validate_bytecode_header" { "_validate_bytecode_header"; label = "_validate_bytecode_header"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__r_long" { "_r_long"; label = "_r_long"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__compile_bytecode" { "_compile_bytecode"; label = "_compile_bytecode"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__call_with_frames_removed" { "_call_with_frames_removed"; label = "_call_with_frames_removed"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pandas" { "pandas.<module>" "pandas.compat.<module>" "pandas.compat.numpy.<module>" "pandas._libs.<module>" "pandas._libs.tslibs.<module>" "pandas.compat.is_platform_32bit" "pandas._config.<module>" "pandas._config.config.<module>" "pandas._config.config.OptionError" "pandas._config.config.DictWrapper" "pandas._config.config.CallableDynamicDoc" "pandas._config.config.CallableDynamicDoc.__init__" "pandas._config.config.DictWrapper.__init__" "pandas._config.config.option_context" "pandas._config.config.is_type_factory" "pandas._config.config.is_instance_factory" "pandas._config.dates.<module>" "pandas._config.config.config_prefix" "pandas._config.config.wrap" "pandas._config.config.inner" "pandas._config.config.register_option" "pandas._config.display.<module>" "pandas._config.display.detect_console_encoding" "pandas._config.localization.<module>" "pandas.core.config_init.<module>" "pandas._config.config.is_nonnegative_int" "pandas._config.config.is_one_of_factory" "pandas._config.config.<listcomp>" "pandas.core.config_init.is_terminal" "pandas._config.config.deprecate_option" "pandas.core.config_init.register_plotting_backend_cb" "pandas.core.api.<module>" "pandas.core.dtypes.dtypes.<module>" "pandas._typing.<module>" "pandas.core.dtypes.base.<module>" "pandas.errors.<module>" "pandas.errors.PerformanceWarning" "pandas.errors.UnsupportedFunctionCall" "pandas.errors.UnsortedIndexError" "pandas.errors.ParserError" "pandas.errors.DtypeWarning" "pandas.errors.EmptyDataError" "pandas.errors.ParserWarning" "pandas.errors.MergeError" "pandas.errors.AccessorRegistrationWarning" "pandas.errors.AbstractMethodError" "pandas.core.dtypes.generic.<module>" "pandas.core.dtypes.generic.create_pandas_abc_type" "pandas.core.dtypes.generic._ABCGeneric" "pandas.core.dtypes.base.ExtensionDtype" "pandas.core.dtypes.inference.<module>" "pandas.core.dtypes.dtypes.Registry" "pandas.core.dtypes.dtypes.Registry.__init__" "pandas.core.dtypes.dtypes.PandasExtensionDtype" "pandas.core.dtypes.dtypes.CategoricalDtypeType" "pandas.core.dtypes.dtypes.CategoricalDtype" "pandas.core.dtypes.dtypes.register_extension_dtype" "pandas.core.dtypes.dtypes.Registry.register" "pandas.core.dtypes.dtypes.DatetimeTZDtype" "pandas.core.dtypes.dtypes.PeriodDtype" "pandas.core.dtypes.dtypes.IntervalDtype" "pandas.core.dtypes.missing.<module>" "pandas.core.dtypes.common.<module>" "pandas.core.dtypes.common.<setcomp>" "pandas.core.algorithms.<module>" "pandas.util.<module>" "pandas.util._decorators.<module>" "pandas.util._decorators.Substitution" "pandas.util._decorators.Appender" "pandas.core.util.hashing.<module>" "pandas.core.dtypes.cast.<module>" "pandas.util._validators.<module>" "pandas.util._testing" "pandas.core.common.<module>" "pandas.core.common.SettingWithCopyError" "pandas.core.common.SettingWithCopyWarning" "pandas.core.construction.<module>" "pandas.core.indexers.<module>" "pandas.util._decorators.Substitution.__init__" "pandas.util._decorators.Appender.__init__" "pandas.core.dtypes.generic._check" "pandas.util._decorators.Appender.__call__" "pandas.util._decorators.Substitution.__call__" "pandas.core.algorithms.SelectN" "pandas.core.algorithms.SelectNSeries" "pandas.core.algorithms.SelectNFrame" "pandas.core.algorithms._view_wrapper" "pandas.core.arrays.<module>" "pandas.core.arrays.base.<module>" "pandas.compat.numpy.function.<module>" "pandas.compat.numpy.function.CompatValidator" "pandas.compat.numpy.function.CompatValidator.__init__" "pandas.core.ops.<module>" "pandas.core.ops.array_ops.<module>" "pandas.core.ops.missing.<module>" "pandas.core.ops.roperator.<module>" "pandas.core.ops.dispatch.<module>" "pandas.core.ops.invalid.<module>" "pandas.core.ops.common.<module>" "pandas.core.ops.docstrings.<module>" "pandas.core.ops.mask_ops.<module>" "pandas.core.ops.methods.<module>" "pandas.core.missing.<module>" "pandas.compat._optional.<module>" "pandas.core.sorting.<module>" "pandas.core.sorting._KeyMapper" "pandas.core.arrays.base.ExtensionArray" "pandas.core.arrays.base.ExtensionOpsMixin" "pandas.core.arrays.base.ExtensionScalarOpsMixin" "pandas.core.arrays.boolean.<module>" "pandas.core.nanops.<module>" "pandas.compat._optional.import_optional_dependency" "pandas._config.config.CallableDynamicDoc.__call__" "pandas._config.config._get_option" "pandas._config.config._get_single_key" "pandas._config.config._select_options" "pandas._config.config._warn_if_deprecated" "pandas._config.config._get_deprecated_option" "pandas._config.config._translate_key" "pandas._config.config._get_root" "pandas.core.nanops.set_use_bottleneck" "pandas.core.nanops.disallow" "pandas.core.nanops.bottleneck_switch" "pandas.core.nanops.disallow.__init__" "pandas.core.nanops.<genexpr>" "pandas.core.dtypes.common.pandas_dtype" "pandas.core.dtypes.dtypes.Registry.find" "pandas.core.dtypes.dtypes.construct_from_string" "pandas.core.dtypes.inference.is_hashable" "pandas.core.nanops.disallow.__call__" "pandas.core.nanops.bottleneck_switch.__init__" "pandas.core.nanops.bottleneck_switch.__call__" "pandas.core.nanops._nanminmax" "pandas.core.nanops.make_nancomp" "pandas.core.arrays.masked.<module>" "pandas.core.arrays.masked.BaseMaskedArray" "pandas.core.arrays.boolean.BooleanDtype" "pandas.core.arrays.boolean.BooleanArray" "pandas.core.arrays.base._add_logical_ops" "pandas.core.arrays.boolean._create_logical_method" "pandas.compat.set_function_name" "pandas.core.arrays.base._add_comparison_ops" "pandas.core.arrays.boolean._create_comparison_method" "pandas.core.arrays.base._add_arithmetic_ops" "pandas.core.arrays.boolean._create_arithmetic_method" "pandas.core.arrays.categorical.<module>" "pandas.core.accessor.<module>" "pandas.core.accessor.DirNamesMixin" "pandas.core.accessor.PandasDelegate" "pandas.core.accessor.CachedAccessor" "pandas.core.base.<module>" "pandas.core.base.PandasObject" "pandas.core.base.NoNewAttributesMixin" "pandas.core.base.GroupByError" "pandas.core.base.DataError" "pandas.core.base.SpecificationError" "pandas.core.base.SelectionMixin" "pandas.core.base.ShallowMixin" "pandas.core.base.IndexOpsMixin" "pandas.io.formats.console.<module>" "pandas.core.arrays.categorical.Categorical" "pandas.core.dtypes.dtypes.CategoricalDtype.__init__" "pandas.core.dtypes.dtypes.CategoricalDtype._finalize" "pandas.core.dtypes.dtypes.validate_ordered" "pandas.core.arrays.categorical._cat_compare_op" "pandas.core.ops.common.unpack_zerodim_and_defer" "pandas.core.ops.common.wrapper" "pandas.core.ops.common._unpack_zerodim_and_defer" "pandas.util._decorators.deprecate_kwarg" "pandas.util._decorators._deprecate_kwarg" "pandas.core.accessor.delegate_names" "pandas.core.arrays.categorical.CategoricalAccessor" "pandas.core.accessor.add_delegate_accessors" "pandas.core.accessor._add_delegate_accessors" "pandas.core.accessor._create_delegator_method" "pandas.core.accessor._create_delegator_property" "pandas.core.arrays.datetimes.<module>" "pandas.core.arrays.datetimelike.<module>" "pandas.tseries.frequencies.<module>" "pandas.tseries.offsets.<module>" "pandas.tseries.offsets.DateOffset" "pandas.tseries.offsets.apply_wraps" "pandas.tseries.offsets.SingleConstructorOffset" "pandas.tseries.offsets._CustomMixin" "pandas.tseries.offsets.BusinessMixin" "pandas.tseries.offsets.BusinessDay" "pandas.tseries.offsets.BusinessHourMixin" "pandas.tseries.offsets.BusinessHour" "pandas.tseries.offsets.CustomBusinessDay" "pandas.tseries.offsets.CustomBusinessHour" "pandas.tseries.offsets.MonthOffset" "pandas.tseries.offsets.MonthEnd" "pandas.tseries.offsets.MonthBegin" "pandas.tseries.offsets.BusinessMonthEnd" "pandas.tseries.offsets.BusinessMonthBegin" "pandas.tseries.offsets._CustomBusinessMonth" "pandas.tseries.offsets.CustomBusinessMonthEnd" "pandas.tseries.offsets.CustomBusinessMonthBegin" "pandas.tseries.offsets.SemiMonthOffset" "pandas.tseries.offsets.SemiMonthEnd" "pandas.tseries.offsets.SemiMonthBegin" "pandas.tseries.offsets.Week" "pandas.tseries.offsets._WeekOfMonthMixin" "pandas.tseries.offsets.WeekOfMonth" "pandas.tseries.offsets.LastWeekOfMonth" "pandas.tseries.offsets.QuarterOffset" "pandas.tseries.offsets.BQuarterEnd" "pandas.tseries.offsets.BQuarterBegin" "pandas.tseries.offsets.QuarterEnd" "pandas.tseries.offsets.QuarterBegin" "pandas.tseries.offsets.YearOffset" "pandas.tseries.offsets.BYearEnd" "pandas.tseries.offsets.BYearBegin" "pandas.tseries.offsets.YearEnd" "pandas.tseries.offsets.YearBegin" "pandas.tseries.offsets.FY5253" "pandas.tseries.offsets.FY5253Quarter" "pandas.tseries.offsets.Easter" "pandas.tseries.offsets.Tick" "pandas.tseries.offsets._tick_comp" "pandas.tseries.offsets.Day" "pandas.tseries.offsets.Hour" "pandas.tseries.offsets.Minute" "pandas.tseries.offsets.Second" "pandas.tseries.offsets.Milli" "pandas.tseries.offsets.Micro" "pandas.tseries.offsets.Nano" "pandas.tseries.offsets.BusinessDay.__init__" "pandas.tseries.offsets.<dictcomp>" "pandas.tseries.offsets.Day.__init__" "pandas.tseries.offsets.Hour.__init__" "pandas.tseries.offsets.Minute.__init__" "pandas.tseries.offsets.Second.__init__" "pandas.tseries.offsets.Milli.__init__" "pandas.tseries.offsets.Micro.__init__" "pandas.tseries.offsets.Nano.__init__" "pandas.tseries.frequencies._FrequencyInferer" "pandas.tseries.frequencies._TimedeltaFrequencyInferer" "pandas.core.arrays.datetimelike.AttributesMixin" "pandas.core.arrays.datetimelike.DatelikeOps" "pandas.core.arrays.datetimelike.TimelikeOps" "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" "pandas.core.ops.invalid.make_invalid_op" "pandas.core.arrays.datetimelike._datetimelike_array_cmp" "pandas.core.arrays._ranges.<module>" "pandas.core.arrays.datetimes.DatetimeArray" "pandas.core.arrays.datetimes._field_accessor" "pandas.core.arrays.integer.<module>" "pandas.core.tools.numeric.<module>" "pandas.core.arrays.integer._IntegerDtype" "pandas.core.arrays.integer.IntegerArray" "pandas.core.arrays.integer._create_arithmetic_method" "pandas.core.arrays.integer._create_comparison_method" "pandas.core.arrays.interval.<module>" "pandas.core.indexes.base.<module>" "pandas.core.dtypes.concat.<module>" "pandas.core.indexes.frozen.<module>" "pandas.io.formats.printing.<module>" "pandas.core.indexes.frozen.FrozenList" "pandas.core.strings.<module>" "pandas.core.strings.StringMethods" "pandas.core.strings.forbid_nonstring_types" "pandas.core.strings._forbid_nonstring_types" "pandas.core.strings.copy" "pandas.core.strings.do_copy" "pandas.core.strings._pat_wrapper" "pandas.core.strings._noarg_wrapper" "pandas.core.indexes.base.InvalidIndexError" "pandas.core.indexes.base.Index" "pandas.core.accessor.CachedAccessor.__init__" "pandas.core.indexes.base._add_numeric_methods_disabled" "pandas.core.indexes.base._add_logical_methods" "pandas.core.indexes.base._make_logical_function" "pandas.core.indexes.base._add_comparison_methods" "pandas.core.indexes.base._make_comparison_op" "pandas.core.arrays.interval.IntervalArray" "pandas.core.arrays.numpy_.<module>" "pandas.core.arrays.numpy_.PandasDtype" "pandas.core.arrays.numpy_.PandasArray" "pandas.core.arrays.numpy_._create_arithmetic_method" "pandas.core.arrays.period.<module>" "pandas.core.arrays.period.PeriodArray" "pandas.core.arrays.period._field_accessor" "pandas.core.arrays.sparse.<module>" "pandas.core.arrays.sparse.accessor.<module>" "pandas.core.arrays.sparse.array.<module>" "pandas.core.arrays.sparse.dtype.<module>" "pandas.core.arrays.sparse.dtype.SparseDtype" "pandas.core.arrays.sparse.array.SparseArray" "pandas.core.arrays.sparse.array._create_arithmetic_method" "pandas.core.arrays.sparse.array._add_comparison_ops" "pandas.core.arrays.sparse.array._create_comparison_method" "pandas.core.arrays.sparse.array._add_unary_ops" "pandas.core.arrays.sparse.array._create_unary_method" "pandas.core.arrays.sparse.accessor.BaseAccessor" "pandas.core.arrays.sparse.accessor.SparseAccessor" "pandas.core.arrays.sparse.accessor.SparseFrameAccessor" "pandas.core.arrays.string_.<module>" "pandas.core.arrays.string_.StringDtype" "pandas.core.arrays.string_.StringArray" "pandas.core.arrays.string_._add_arithmetic_ops" "pandas.core.arrays.string_._create_arithmetic_method" "pandas.core.arrays.timedeltas.<module>" "pandas.core.arrays.timedeltas.TimedeltaArray" "pandas.core.arrays.timedeltas._field_accessor" "pandas.core.groupby.<module>" "pandas.core.groupby.generic.<module>" "pandas.core.frame.<module>" "pandas.core.generic.<module>" "pandas.core.indexes.api.<module>" "pandas.core.indexes.category.<module>" "pandas.core.indexes.extension.<module>" "pandas.core.indexes.extension.ExtensionIndex" "pandas.core.indexes.extension._make_wrapped_comparison_op" "pandas.core.indexes.extension.inherit_names" "pandas.core.indexes.category.CategoricalIndex" "pandas.core.indexes.extension.wrapper" "pandas.core.indexes.extension.inherit_from_data" "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled" "pandas.core.indexes.base._add_logical_methods_disabled" "pandas.core.indexes.datetimes.<module>" "pandas.core.indexes.datetimelike.<module>" "pandas.core.indexes.numeric.<module>" "pandas.core.indexes.numeric.NumericIndex" "pandas.core.indexes.numeric.IntegerIndex" "pandas.core.indexes.numeric.Int64Index" "pandas.core.indexes.base._add_numeric_methods" "pandas.core.indexes.base._add_numeric_methods_unary" "pandas.core.indexes.base._make_evaluate_unary" "pandas.core.indexes.base._add_numeric_methods_binary" "pandas.core.indexes.base._make_arithmetic_op" "pandas.core.indexes.numeric.UInt64Index" "pandas.core.indexes.numeric.Float64Index" "pandas.core.tools.timedeltas.<module>" "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" "pandas.core.indexes.extension.make_wrapped_arith_op" "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" "pandas.core.indexes.datetimelike._join_i8_wrapper" "pandas.core.indexes.datetimelike.DatetimelikeDelegateMixin" "pandas.core.tools.datetimes.<module>" "pandas.arrays.<module>" "pandas.core.indexes.datetimes.DatetimeDelegateMixin" "pandas.core.indexes.datetimes.DatetimeIndex" "pandas.core.indexes.interval.<module>" "pandas.util._exceptions.<module>" "pandas.core.indexes.multi.<module>" "pandas.core.indexes.multi.MultiIndexUIntEngine" "pandas.core.indexes.multi.MultiIndexPyIntEngine" "pandas.core.indexes.multi.MultiIndex" "pandas.core.indexes.timedeltas.<module>" "pandas.core.indexes.timedeltas.TimedeltaDelegateMixin" "pandas.core.indexes.timedeltas.TimedeltaIndex" "pandas.core.indexes.interval.SetopCheck" "pandas.core.indexes.interval.IntervalIndex" "pandas.core.indexes.interval.SetopCheck.__init__" "pandas.core.indexes.interval.SetopCheck.__call__" "pandas.core.indexes.interval._setop" "pandas.core.indexes.period.<module>" "pandas.core.indexes.period.PeriodDelegateMixin" "pandas.core.indexes.period.PeriodIndex" "pandas.core.indexes.range.<module>" "pandas.core.indexes.range.RangeIndex" "pandas.core.indexes.range._add_numeric_methods_binary" "pandas.core.indexes.range._make_evaluate_binop" "pandas.core.indexing.<module>" "pandas.core.indexing._IndexSlice" "pandas.core.indexing.IndexingError" "pandas.core.indexing.IndexingMixin" "pandas.core.indexing._NDFrameIndexer" "pandas.core.indexing._LocationIndexer" "pandas.core.indexing._LocIndexer" "pandas.core.indexing._iLocIndexer" "pandas.core.indexing._ScalarAccessIndexer" "pandas.core.indexing._AtIndexer" "pandas.core.indexing._iAtIndexer" "pandas.core.internals.<module>" "pandas.core.internals.blocks.<module>" "pandas.core.internals.blocks.Block" "pandas.core.internals.blocks.NonConsolidatableMixIn" "pandas.core.internals.blocks.ExtensionBlock" "pandas.core.internals.blocks.ObjectValuesExtensionBlock" "pandas.core.internals.blocks.NumericBlock" "pandas.core.internals.blocks.FloatOrComplexBlock" "pandas.core.internals.blocks.FloatBlock" "pandas.core.internals.blocks.ComplexBlock" "pandas.core.internals.blocks.IntBlock" "pandas.core.internals.blocks.DatetimeLikeBlockMixin" "pandas.core.internals.blocks.DatetimeBlock" "pandas.core.internals.blocks.DatetimeTZBlock" "pandas.core.internals.blocks.TimeDeltaBlock" "pandas.core.internals.blocks.BoolBlock" "pandas.core.internals.blocks.ObjectBlock" "pandas.core.internals.blocks.CategoricalBlock" "pandas.core.internals.managers.<module>" "pandas.core.internals.concat.<module>" "pandas.core.internals.concat.JoinUnit" "pandas.core.internals.managers.BlockManager" "pandas.core.internals.managers.SingleBlockManager" "pandas.io.formats.format.<module>" "pandas.io.common.<module>" "pandas.compat._import_lzma" "pandas.io.common._BytesZipFile" "pandas.io.common._MMapWrapper" "pandas.io.formats.format.CategoricalFormatter" "pandas.io.formats.format.SeriesFormatter" "pandas.io.formats.format.TextAdjustment" "pandas.io.formats.format.EastAsianTextAdjustment" "pandas.io.formats.format.TableFormatter" "pandas.io.formats.format.DataFrameFormatter" "pandas.io.formats.format.GenericArrayFormatter" "pandas.io.formats.format.FloatArrayFormatter" "pandas.io.formats.format.IntArrayFormatter" "pandas.io.formats.format.Datetime64Formatter" "pandas.io.formats.format.ExtensionArrayFormatter" "pandas.io.formats.format.Datetime64TZFormatter" "pandas.io.formats.format.Timedelta64Formatter" "pandas.io.formats.format.EngFormatter" "pandas.core.generic.NDFrame" "pandas.util._decorators.rewrite_axis_style_signature" "pandas.util._decorators.decorate" "pandas.core.internals.construction.<module>" "pandas.core.series.<module>" "pandas.core.indexes.accessors.<module>" "pandas.core.indexes.accessors.Properties" "pandas.core.indexes.accessors.DatetimeProperties" "pandas.core.indexes.accessors.TimedeltaProperties" "pandas.core.indexes.accessors.PeriodProperties" "pandas.core.indexes.accessors.CombinedDatetimelikeProperties" "pandas.plotting.<module>" "pandas.plotting._core.<module>" "pandas.plotting._core.PlotAccessor" "pandas.plotting._misc.<module>" "pandas.plotting._misc._Options" "pandas.plotting._misc._Options.__init__" "pandas.core.series.Series" "pandas.core.series._coerce_method" "pandas.core.generic._setup_axes" "pandas.core.generic.<dictcomp>" "pandas.core.generic.set_axis" "pandas.core.generic._add_numeric_operations" "pandas.core.generic._doc_parms" "pandas.core.generic.<genexpr>" "pandas.core.generic._make_logical_function" "pandas.core.generic._make_stat_function_ddof" "pandas.core.generic._make_cum_function" "pandas.core.generic._make_min_count_stat_function" "pandas.core.generic._make_stat_function" "pandas.core.generic._add_series_or_dataframe_operations" "pandas.core.window.<module>" "pandas.core.window.ewm.<module>" "pandas.core.window.common.<module>" "pandas.core.groupby.base.<module>" "pandas.core.groupby.base.GroupByMixin" "pandas.core.window.common.WindowGroupByMixin" "pandas.core.window.common._dispatch" "pandas.core.window.rolling.<module>" "pandas.core.window.indexers.<module>" "pandas.core.window.indexers.BaseIndexer" "pandas.core.window.indexers.FixedWindowIndexer" "pandas.core.window.indexers.VariableWindowIndexer" "pandas.core.window.indexers.ExpandingIndexer" "pandas.core.window.numba_.<module>" "pandas.core.window.rolling._Window" "pandas.core.window.rolling.Window" "pandas.core.window.rolling._Rolling" "pandas.core.window.rolling._Rolling_and_Expanding" "pandas.core.window.rolling.Rolling" "pandas.core.window.rolling.RollingGroupby" "pandas.core.window.ewm.EWM" "pandas.core.window.expanding.<module>" "pandas.core.window.expanding.Expanding" "pandas.core.window.expanding.ExpandingGroupby" "pandas.core.ops.methods.add_flex_arithmetic_methods" "pandas.core.ops.methods._get_method_wrappers" "pandas.core.ops.methods._create_methods" "pandas.core.ops._flex_method_SERIES" "pandas.core.ops._get_op_name" "pandas.core.ops.docstrings._make_flex_doc" "pandas.core.ops.methods.<dictcomp>" "pandas.core.ops.methods.<lambda>" "pandas.core.ops.methods.<genexpr>" "pandas.core.ops.methods._add_methods" "pandas.core.ops.methods.add_special_arithmetic_methods" "pandas.core.ops._arith_method_SERIES" "pandas.core.ops._get_opstr" "pandas.core.ops._comp_method_SERIES" "pandas.core.ops._bool_method_SERIES" "pandas.core.ops.methods._wrap_inplace_method" "pandas.core.frame.DataFrame" "pandas.util._decorators.indent" "pandas.core.ops._arith_method_FRAME" "pandas.core.ops._get_frame_op_default_axis" "pandas.core.ops.array_ops.define_na_arithmetic_op" "pandas.core.ops._flex_comp_method_FRAME" "pandas.core.ops._comp_method_FRAME" "pandas.core.groupby.groupby.<module>" "pandas.core.groupby.ops.<module>" "pandas.core.groupby.grouper.<module>" "pandas.core.groupby.categorical.<module>" "pandas.core.groupby.grouper.Grouper" "pandas.core.groupby.grouper.Grouping" "pandas.core.groupby.ops.BaseGrouper" "pandas.core.groupby.ops.BinGrouper" "pandas.core.groupby.ops.DataSplitter" "pandas.core.groupby.ops.SeriesSplitter" "pandas.core.groupby.ops.FrameSplitter" "pandas.core.groupby.groupby.GroupByPlot" "pandas.core.groupby.groupby._GroupBy" "pandas.core.groupby.groupby.GroupBy" "pandas.core.groupby.groupby._add_numeric_operations" "pandas.core.groupby.groupby.groupby_function" "pandas.core.groupby.generic.pin_whitelisted_properties" "pandas.core.groupby.generic.SeriesGroupBy" "pandas.core.groupby.generic.pinner" "pandas.core.groupby.generic.generate_property" "pandas.core.groupby.generic.DataFrameGroupBy" "pandas.tseries.api.<module>" "pandas.core.computation.api.<module>" "pandas.core.computation.eval.<module>" "pandas.core.computation.engines.<module>" "pandas.core.computation.align.<module>" "pandas.core.computation.common.<module>" "pandas.core.computation.common.NameResolutionError" "pandas.core.computation.align._filter_special_cases" "pandas.core.computation.ops.<module>" "pandas.core.computation.scope.<module>" "pandas.compat.chainmap.<module>" "pandas.compat.chainmap.DeepChainMap" "pandas.core.computation.scope.Scope" "pandas.core.computation.ops.UndefinedVariableError" "pandas.core.computation.ops.Term" "pandas.core.computation.ops.Constant" "pandas.core.computation.ops.Op" "pandas.core.computation.ops.BinOp" "pandas.core.computation.ops.Div" "pandas.core.computation.ops.UnaryOp" "pandas.core.computation.ops.MathCall" "pandas.core.computation.ops.FuncNode" "pandas.core.computation.engines.NumExprClobberingError" "pandas.core.computation.engines.AbstractEngine" "pandas.core.computation.engines.NumExprEngine" "pandas.core.computation.engines.PythonEngine" "pandas.core.computation.expr.<module>" "pandas.core.computation.parsing.<module>" "pandas.core.computation.expr._compose" "pandas.core.computation.expr._compose2" "pandas.core.computation.expr._is_type" "pandas.core.computation.expr.<genexpr>" "pandas.core.computation.expr.<lambda>" "pandas.core.computation.expr._filter_nodes" "pandas.core.computation.expr.disallow" "pandas.core.computation.expr.add_ops" "pandas.core.computation.expr.BaseExprVisitor" "pandas.core.computation.expr.f" "pandas.core.computation.expr._op_maker" "pandas.core.computation.expr.disallowed" "pandas.core.computation.expr._node_not_implemented" "pandas.core.computation.expr.PandasExprVisitor" "pandas.core.computation.expr.PythonExprVisitor" "pandas.core.computation.expr.Expr" "pandas.core.reshape.api.<module>" "pandas.core.reshape.concat.<module>" "pandas.core.reshape.concat._Concatenator" "pandas.core.reshape.melt.<module>" "pandas.core.reshape.merge.<module>" "pandas.core.reshape.merge._MergeOperation" "pandas.core.reshape.merge._OrderedMerge" "pandas.core.reshape.merge._AsOfMerge" "pandas.core.reshape.pivot.<module>" "pandas.core.reshape.util.<module>" "pandas.core.reshape.reshape.<module>" "pandas.core.reshape.reshape._Unstacker" "pandas.core.reshape.tile.<module>" "pandas.api.<module>" "pandas.api.extensions.<module>" "pandas.api.indexers.<module>" "pandas.api.types.<module>" "pandas.core.dtypes.api.<module>" "pandas.util._print_versions.<module>" "pandas.io.api.<module>" "pandas.io.clipboards.<module>" "pandas.io.excel.<module>" "pandas.io.excel._base.<module>" "pandas.io.excel._util.<module>" "pandas.io.parsers.<module>" "pandas.io.date_converters.<module>" "pandas.io.parsers._make_parser_function" "pandas.io.parsers.TextFileReader" "pandas.io.parsers.ParserBase" "pandas.io.parsers.CParserWrapper" "pandas.io.parsers.PythonParser" "pandas.io.parsers.FixedWidthReader" "pandas.io.parsers.FixedWidthFieldParser" "pandas.io.excel._base._BaseExcelReader" "pandas.io.excel._base.ExcelWriter" "pandas.io.excel._base.ExcelFile" "pandas.io.excel._odfreader.<module>" "pandas.io.excel._odfreader._ODFReader" "pandas.io.excel._openpyxl.<module>" "pandas.io.excel._openpyxl._OpenpyxlWriter" "pandas.io.excel._openpyxl._OpenpyxlReader" "pandas.io.excel._xlrd.<module>" "pandas.io.excel._xlrd._XlrdReader" "pandas.io.excel._pyxlsb.<module>" "pandas.io.excel._pyxlsb._PyxlsbReader" "pandas.io.excel._xlsxwriter.<module>" "pandas.io.excel._xlsxwriter._XlsxStyler" "pandas.io.excel._xlsxwriter._XlsxWriter" "pandas.io.excel._xlwt.<module>" "pandas.io.excel._xlwt._XlwtWriter" "pandas.io.excel._util.register_writer" "pandas.io.feather_format.<module>" "pandas.io.gbq.<module>" "pandas.io.html.<module>" "pandas.io.html._HtmlFrameParser" "pandas.io.html._BeautifulSoupHtml5LibFrameParser" "pandas.io.html._LxmlFrameParser" "pandas.io.json.<module>" "pandas.io.json._json.<module>" "pandas.io.json._normalize.<module>" "pandas.util._decorators.deprecate" "pandas.io.json._table_schema.<module>" "pandas.io.json._json.Writer" "pandas.io.json._json.SeriesWriter" "pandas.io.json._json.FrameWriter" "pandas.io.json._json.JSONTableWriter" "pandas.io.json._json.JsonReader" "pandas.io.json._json.Parser" "pandas.io.json._json.SeriesParser" "pandas.io.json._json.FrameParser" "pandas.io.orc.<module>" "pandas.io.parquet.<module>" "pandas.io.parquet.BaseImpl" "pandas.io.parquet.PyArrowImpl" "pandas.io.parquet.FastParquetImpl" "pandas.io.pickle.<module>" "pandas.compat.pickle_compat.<module>" "pandas.compat.pickle_compat._LoadSparseSeries" "pandas.compat.pickle_compat._LoadSparseFrame" "pandas.compat.pickle_compat.Unpickler" "pandas.io.pytables.<module>" "pandas.core.computation.pytables.<module>" "pandas.core.computation.pytables.PyTablesScope" "pandas.core.computation.pytables.Term" "pandas.core.computation.pytables.Constant" "pandas.core.computation.pytables.BinOp" "pandas.core.computation.pytables.FilterBinOp" "pandas.core.computation.pytables.JointFilterBinOp" "pandas.core.computation.pytables.ConditionBinOp" "pandas.core.computation.pytables.JointConditionBinOp" "pandas.core.computation.pytables.UnaryOp" "pandas.core.computation.pytables.PyTablesExprVisitor" "pandas.core.computation.pytables.PyTablesExpr" "pandas.core.computation.pytables.TermValue" "pandas.io.pytables.PossibleDataLossError" "pandas.io.pytables.ClosedFileError" "pandas.io.pytables.IncompatibilityWarning" "pandas.io.pytables.AttributeConflictWarning" "pandas.io.pytables.DuplicateWarning" "pandas.io.pytables.HDFStore" "pandas.io.pytables.TableIterator" "pandas.io.pytables.IndexCol" "pandas.io.pytables.GenericIndexCol" "pandas.io.pytables.DataCol" "pandas.io.pytables.DataIndexableCol" "pandas.io.pytables.GenericDataIndexableCol" "pandas.io.pytables.Fixed" "pandas.io.pytables.GenericFixed" "pandas.io.pytables.<dictcomp>" "pandas.io.pytables.SeriesFixed" "pandas.io.pytables.BlockManagerFixed" "pandas.io.pytables.FrameFixed" "pandas.io.pytables.Table" "pandas.io.pytables.WORMTable" "pandas.io.pytables.AppendableTable" "pandas.io.pytables.AppendableFrameTable" "pandas.io.pytables.AppendableSeriesTable" "pandas.io.pytables.AppendableMultiSeriesTable" "pandas.io.pytables.GenericTable" "pandas.io.pytables.AppendableMultiFrameTable" "pandas.io.pytables.Selection" "pandas.io.sas.<module>" "pandas.io.sas.sasreader.<module>" "pandas.io.spss.<module>" "pandas.io.sql.<module>" "pandas.io.sql.SQLAlchemyRequired" "pandas.io.sql.DatabaseError" "pandas.io.sql.SQLTable" "pandas.io.sql.PandasSQL" "pandas.io.sql.SQLDatabase" "pandas.io.sql.SQLiteTable" "pandas.io.sql.SQLiteDatabase" "pandas.io.stata.<module>" "pandas.io.stata.PossiblePrecisionLoss" "pandas.io.stata.ValueLabelTypeMismatch" "pandas.io.stata.InvalidColumnName" "pandas.io.stata.StataValueLabel" "pandas.io.stata.StataMissingValue" "pandas.io.stata.StataParser" "pandas.io.stata.StataReader" "pandas.io.stata.StataWriter" "pandas.io.stata.StataStrLWriter" "pandas.io.stata.StataWriter117" "pandas.io.stata.StataWriterUTF8" "pandas.util._tester.<module>" "pandas.testing.<module>" "pandas._testing.<module>" "pandas._testing.set_testing_mode" "pandas._testing.optional_args" "pandas._testing.RNGContext" "pandas._testing.SubclassedSeries" "pandas._testing.SubclassedDataFrame" "pandas._testing.SubclassedCategorical" "pandas._version.<module>" "pandas._version.get_versions" "pandas.Panel" "pandas.SparseDataFrame" "pandas.SparseSeries" "pandas.__numpy" "pandas.__numpy.__init__" "pandas.__Datetime" "pandas.__DatetimeSub" "pandas.__SparseArray" "pandas.__SparseArraySub" "pandas.io.parsers.parser_f" "pandas.io.parsers._read" "pandas.io.common.infer_compression" "pandas.io.common.stringify_path" "pandas.io.common._expand_user" "pandas.io.common.get_filepath_or_buffer" "pandas.io.common.is_url" "pandas.io.common.is_s3_url" "pandas.io.common.is_gcs_url" "pandas.io.parsers._validate_integer" "pandas.io.parsers._validate_names" "pandas.io.parsers.TextFileReader.__init__" "pandas.io.parsers.TextFileReader._get_options_with_defaults" "pandas.io.parsers.TextFileReader._check_file_or_buffer" "pandas.core.dtypes.inference.is_file_like" "pandas.io.parsers.TextFileReader._clean_options" "pandas.io.common.validate_header_arg" "pandas.io.parsers._is_index_col" "pandas.io.parsers._clean_na_values" "pandas.io.parsers.TextFileReader._make_engine" "pandas.io.parsers.CParserWrapper.__init__" "pandas.io.parsers._validate_parse_dates_arg" "pandas.io.parsers._make_date_converter" "pandas.io.parsers._validate_usecols_arg" "pandas.io.parsers.CParserWrapper._set_noconvert_columns" "pandas.io.parsers.CParserWrapper._has_complex_date_col" "pandas.io.parsers.TextFileReader.read" "pandas.io.parsers.CParserWrapper.read" "pandas.core.dtypes.common.is_categorical_dtype" "pandas.core.dtypes.base.is_dtype" "pandas.core.dtypes.common.is_extension_array_dtype" "pandas.core.dtypes.common.is_integer_dtype" "pandas.core.dtypes.common.classes_and_not_datetimelike" "pandas.core.dtypes.common._is_dtype_type" "pandas.core.dtypes.common.<lambda>" "pandas.core.dtypes.common.is_float_dtype" "pandas.core.dtypes.common.classes" "pandas.core.dtypes.common.is_bool_dtype" "pandas.core.dtypes.common._get_dtype" "pandas.core.dtypes.common.is_object_dtype" "pandas.io.parsers.CParserWrapper._maybe_dedup_names" "pandas.io.parsers._is_potential_multi_index" "pandas.io.parsers.<genexpr>" "pandas.io.parsers.<listcomp>" "pandas.io.parsers.<dictcomp>" "pandas.io.parsers.CParserWrapper._do_date_conversions" "pandas.io.parsers._process_date_conversion" "pandas.io.parsers.CParserWrapper._make_index" "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns" "pandas.io.parsers.TextFileReader._create_index" "pandas.core.indexes.range.__new__" "pandas.core.indexes.numeric._validate_dtype" "pandas.core.indexes.base.maybe_extract_name" "pandas.core.common.all_none" "pandas.core.common.<genexpr>" "pandas.core.dtypes.common.ensure_python_int" "pandas.core.indexes.range._simple_new" "pandas.core.indexes.base.RangeIndex.name" "pandas.core.indexes.base.RangeIndex._reset_identity" "pandas.core.frame.DataFrame.__init__" "pandas.core.internals.construction.init_dict" "pandas.core.series.Series.__init__" "pandas.core.construction.is_empty_data" "pandas.core.indexes.base.ensure_index" "pandas.core.dtypes.inference.is_iterator" "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike" "pandas.core.indexes.base.__new__" "pandas.core.dtypes.common.is_interval_dtype" "pandas.core.dtypes.dtypes.is_dtype" "pandas.core.dtypes.common.is_datetime64_any_dtype" "pandas.core.dtypes.common.is_datetime64_dtype" "pandas.core.dtypes.common.is_datetime64tz_dtype" "pandas.core.dtypes.common.is_timedelta64_dtype" "pandas.core.dtypes.common.is_period_dtype" "pandas.core.dtypes.common.is_signed_integer_dtype" "pandas.core.dtypes.common.is_unsigned_integer_dtype" "pandas.core.common.asarray_tuplesafe" "pandas.core.indexes.base._maybe_cast_data_without_dtype" "pandas.core.indexes.base._maybe_cast_with_dtype" "pandas.core.indexes.base._simple_new" "pandas.core.indexes.base.Index._reset_identity" "pandas.core.generic.Series._validate_dtype" "pandas.core.dtypes.inference.is_dict_like" "pandas.core.dtypes.inference.<genexpr>" "pandas.core.series.Series._init_dict" "pandas.core.construction.create_series_with_explicit_dtype" "pandas.core.indexes.base.<genexpr>" "pandas.core.common.maybe_iterable_to_list" "pandas.core.indexes.base.Index.__len__" "pandas.core.construction.sanitize_array" "pandas.core.construction.extract_array" "pandas.core.construction._try_cast" "pandas.core.dtypes.cast.maybe_cast_to_datetime" "pandas.core.internals.managers.SingleBlockManager.__init__" "pandas.core.internals.blocks.make_block" "pandas.core.internals.blocks.get_block_type" "pandas.core.dtypes.common.is_sparse" "pandas.core.dtypes.common.is_categorical" "pandas.core.internals.blocks.ObjectBlock.__init__" "pandas.core.internals.blocks.ObjectBlock._check_ndim" "pandas.core.internals.blocks.ObjectBlock.mgr_locs" "pandas.core.generic.Series.__init__" "pandas.core.generic.Series.__setattr__" "pandas.core.series.Series.name" "pandas.core.generic.Series.__getattr__" "pandas.core.series.Series._set_axis" "pandas.core.indexes.base.Index.is_all_dates" "pandas.core.indexes.base.Index.values" "pandas.core.series.Series._set_subtyp" "pandas.core.series.Series.reindex" "pandas.core.generic.Series.reindex" "pandas.core.generic.Series._construct_axes_from_arguments" "pandas.core.missing.clean_reindex_fill_method" "pandas.core.missing.clean_fill_method" "pandas.core.generic.Series._consolidate_inplace" "pandas.core.generic.Series._protect_consolidate" "pandas.core.generic.Series.f" "pandas.core.internals.managers.SingleBlockManager.consolidate" "pandas.core.internals.managers.SingleBlockManager.is_consolidated" "pandas.core.generic.Series.<genexpr>" "pandas.core.generic.Series._get_axis" "pandas.core.generic._get_axis_name" "pandas.core.indexes.base.Index.identical" "pandas.core.indexes.base.Index.equals" "pandas.core.indexes.base.Index.is_" "pandas.core.indexes.base.Index.dtype" "pandas.core.indexes.base.Index._internal_get_values" "pandas.core.dtypes.missing.array_equivalent" "pandas.core.dtypes.common.is_string_dtype" "pandas.core.dtypes.common._is_dtype" "pandas.core.dtypes.common.condition" "pandas.core.dtypes.common.is_excluded_dtype" "pandas.core.dtypes.common.<genexpr>" "pandas.core.indexes.base.Index.<genexpr>" "pandas.core.indexes.base.Index.name" "pandas.core.series.Series.isna" "pandas.core.generic.Series.isna" "pandas.core.dtypes.missing.isna" "pandas.core.dtypes.missing._isna_new" "pandas.core.dtypes.missing._isna_ndarraylike" "pandas.core.series.Series.dtype" "pandas.core.internals.managers.SingleBlockManager.dtype" "pandas.core.internals.managers.SingleBlockManager._block" "pandas.core.internals.blocks.ObjectBlock.dtype" "pandas.core.series.Series.values" "pandas.core.internals.managers.SingleBlockManager.external_values" "pandas.core.internals.blocks.ObjectBlock.external_values" "pandas.core.dtypes.common.is_string_like_dtype" "pandas.core.series.Series._constructor" "pandas.core.dtypes.cast.maybe_castable" "pandas.core.internals.blocks.BoolBlock.__init__" "pandas.core.internals.blocks.BoolBlock._check_ndim" "pandas.core.internals.blocks.BoolBlock.mgr_locs" "pandas.core.generic.Series.__finalize__" "pandas.core.generic.Series.attrs" "pandas.core.generic.Series.logical_func" "pandas.compat.numpy.function.CompatValidator.__call__" "pandas.core.series.Series._reduce" "pandas.core.series.Series._values" "pandas.core.internals.managers.SingleBlockManager.internal_values" "pandas.core.internals.blocks.BoolBlock.internal_values" "pandas.core.generic._get_axis_number" "pandas.core.nanops.nanany" "pandas.core.nanops._get_values" "pandas.core.nanops._maybe_get_mask" "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype" "pandas.core.nanops._na_ok_dtype" "pandas.core.nanops._get_fill_value" "pandas.core.internals.construction.arrays_to_mgr" "pandas.core.internals.construction._homogenize" "pandas.core.base.Series.__iter__" "pandas.core.internals.blocks.ObjectBlock.internal_values" "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" "pandas.core.dtypes.cast.construct_1d_ndarray_preserving_na" "pandas.core.indexes.range.RangeIndex.__len__" "pandas.core.internals.managers.create_block_manager_from_arrays" "pandas.core.internals.managers.form_blocks" "pandas.core.indexes.base.Index.__getitem__" "pandas.core.common.cast_scalar_indexer" "pandas.core.internals.managers._multi_blockify" "pandas.core.internals.managers.<lambda>" "pandas.core.internals.managers._stack_arrays" "pandas.core.internals.managers._shape_compat" "pandas.core.internals.managers._asarray_compat" "pandas.core.internals.blocks.IntBlock.__init__" "pandas.core.internals.blocks.IntBlock._check_ndim" "pandas.core.internals.blocks.IntBlock.mgr_locs" "pandas.core.internals.managers._simple_blockify" "pandas.core.internals.managers.BlockManager.__init__" "pandas.core.internals.managers.<listcomp>" "pandas.core.internals.managers.BlockManager.ndim" "pandas.core.internals.managers.BlockManager._verify_integrity" "pandas.core.internals.managers.BlockManager.shape" "pandas.core.internals.managers.<genexpr>" "pandas.core.internals.blocks.IntBlock.shape" "pandas.core.internals.blocks.ObjectBlock.shape" "pandas.core.internals.managers.BlockManager.items" "pandas.core.internals.managers.BlockManager._consolidate_check" "pandas.core.internals.blocks.IntBlock.ftype" "pandas.core.internals.blocks.IntBlock.dtype" "pandas.core.internals.blocks.ObjectBlock.ftype" "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" "pandas.core.internals.managers.BlockManager._consolidate_inplace" "pandas.core.internals.managers.BlockManager.is_consolidated" "pandas.core.generic.DataFrame.__init__" "pandas.io.parsers.TextFileReader.close" "pandas.io.parsers.CParserWrapper.close" "pandas.core.indexing.DataFrame.loc" "pandas.core.frame.DataFrame.__getitem__" "pandas.core.common.apply_if_callable" "pandas.core.indexes.base.Index.is_unique" "pandas.core.indexes.base.Index._engine" "pandas.core.base.Index._ndarray_values" "pandas.core.indexes.base.<lambda>" "pandas.core.indexes.base.Index.__contains__" "pandas.core.indexes.base.Index.nlevels" "pandas.core.generic.DataFrame._get_item_cache" "pandas.core.internals.managers.BlockManager.get" "pandas.core.indexes.base.Index.get_loc" "pandas.core.internals.managers.BlockManager.iget" "pandas.core.internals.blocks.ObjectBlock.iget" "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" "pandas.core.frame.DataFrame._box_item_values" "pandas.core.frame.DataFrame._box_col_values" "pandas.core.indexes.numeric.RangeIndex.is_all_dates" "pandas.core.generic.Series._set_as_cached" "pandas.core.ops.common.Series.new_method" "pandas.core.ops.Series.wrapper" "pandas.core.ops.get_op_result_name" "pandas.core.series.Series.array" "pandas.core.internals.blocks.ObjectBlock.array_values" "pandas.core.arrays.numpy_.PandasArray.__init__" "pandas.core.arrays.numpy_.PandasDtype.__init__" "pandas.core.arrays.numpy_.PandasArray.to_numpy" "pandas.core.ops.array_ops.comparison_op" "pandas.core.ops.dispatch.should_extension_dispatch" "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY" "pandas.core.ops._construct_result" "pandas.core.indexing._LocIndexer.__getitem__" "pandas.core.indexing._LocIndexer._getitem_axis" "pandas.core.generic.Series._info_axis" "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name" "pandas.core.indexes.base.RangeIndex.is_object" "pandas.core.indexes.range.RangeIndex.dtype" "pandas.core.indexes.base.RangeIndex.is_categorical" "pandas.core.indexes.numeric.RangeIndex.inferred_type" "pandas.core.generic.DataFrame._get_axis" "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key" "pandas.core.common.is_bool_indexer" "pandas.core.internals.blocks.BoolBlock.dtype" "pandas.core.indexing._LocIndexer._getbool_axis" "pandas.core.indexing.check_bool_indexer" "pandas.core.indexes.range.RangeIndex.equals" "pandas.core.indexers.check_array_indexer" "pandas.core.dtypes.inference.is_array_like" "pandas.core.series.Series.__array__" "pandas.core.internals.blocks.BoolBlock.array_values" "pandas.core.arrays.numpy_.PandasArray.__array__" "pandas.core.generic.DataFrame._take_with_is_copy" "pandas.core.generic.DataFrame.take" "pandas.core.generic.DataFrame._consolidate_inplace" "pandas.core.generic.DataFrame._protect_consolidate" "pandas.core.generic.DataFrame.f" "pandas.core.internals.managers.BlockManager.consolidate" "pandas.core.generic.DataFrame.__setattr__" "pandas.core.generic._get_block_manager_axis" "pandas.core.internals.managers.BlockManager.take" "pandas.core.indexers.maybe_convert_indices" "pandas.core.indexes.base.RangeIndex.take" "pandas.core.indexes.base.RangeIndex.values" "pandas.core.indexes.range.RangeIndex._data" "pandas.core.indexes.range.RangeIndex.start" "pandas.core.indexes.range.RangeIndex.stop" "pandas.core.indexes.range.RangeIndex.step" "pandas.core.indexes.range.RangeIndex._shallow_copy" "pandas.core.indexes.range.RangeIndex._int64index" "pandas.core.indexes.base.Int64Index._reset_identity" "pandas.core.indexes.numeric.Int64Index._shallow_copy" "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer" "pandas.core.indexes.base.Int64Index._get_attributes_dict" "pandas.core.indexes.base.Int64Index.<dictcomp>" "pandas.core.indexes.base.Int64Index.name" "pandas.core.indexes.numeric.__new__" "pandas.core.dtypes.common.is_dtype_equal" "pandas.core.internals.managers.BlockManager.reindex_indexer" "pandas.core.internals.blocks.IntBlock.fill_value" "pandas.core.internals.blocks.IntBlock.take_nd" "pandas.core.algorithms.take_nd" "pandas.core.dtypes.cast.maybe_promote" "pandas.core.dtypes.cast._ensure_dtype_type" "pandas.core.algorithms._get_take_nd_function" "pandas.core.internals.blocks.IntBlock.make_block_same_class" "pandas.core.internals.blocks.ObjectBlock.fill_value" "pandas.core.internals.blocks.ObjectBlock.take_nd" "pandas.core.indexes.base.Int64Index.__len__" "pandas.core.frame.DataFrame._constructor" "pandas.core.generic.DataFrame._init_mgr" "pandas.core.generic.DataFrame.__finalize__" "pandas.core.generic.DataFrame.attrs" "pandas.core.indexes.base.Int64Index.equals" "pandas.core.indexes.base.Int64Index.is_" "pandas.core.indexes.base.Int64Index.dtype" "pandas.core.indexes.base.Int64Index._internal_get_values" "pandas.core.indexes.base.Int64Index.values" "pandas.core.indexes.base.RangeIndex._internal_get_values" "pandas.core.generic.DataFrame._set_is_copy" "pandas.core.ops._align_method_SERIES" "pandas.core.ops._maybe_match_name" "pandas.core.ops.array_ops.logical_op" "pandas.core.ops.array_ops.fill_bool" "pandas.core.ops.array_ops.na_logical_op" "pandas.core.generic.DataFrame.copy" "pandas.core.internals.managers.BlockManager.copy" "pandas.core.internals.managers.copy_func" "pandas.core.indexes.base.Index.view" "pandas.core.indexes.base.Index._shallow_copy" "pandas.core.indexes.base.Index._get_attributes_dict" "pandas.core.indexes.base.Index.<dictcomp>" "pandas.core.indexes.base.Int64Index.view" "pandas.core.indexes.base.Int64Index._shallow_copy" "pandas.core.internals.managers.BlockManager.apply" "pandas.core.internals.managers.<dictcomp>" "pandas.core.internals.blocks.IntBlock.copy" "pandas.core.internals.blocks._extend_blocks" "pandas.core.internals.blocks.ObjectBlock.copy" "pandas.core.indexes.numeric.Int64Index.is_all_dates" "pandas.core.accessor.CachedAccessor.__get__" "pandas.core.strings.StringMethods.__init__" "pandas.core.strings._validate" "pandas.core.base.StringMethods.__setattr__" "pandas.core.base.StringMethods._freeze" "pandas.core.strings.StringMethods.wrapper" "pandas.core.strings.StringMethods.split" "pandas.core.strings.str_split" "pandas.core.strings._na_map" "pandas.core.strings._map_object" "pandas.core.series.Series.__len__" "pandas.core.internals.managers.SingleBlockManager.__len__" "pandas.core.internals.managers.SingleBlockManager.items" "pandas.core.strings.<lambda>" "pandas.core.strings.StringMethods._wrap_result" "pandas.core.series.Series.__getitem__" "pandas.core.indexes.base.Int64Index.get_value" "pandas.core.series.Series._internal_get_values" "pandas.core.internals.managers.SingleBlockManager.get_values" "pandas.core.internals.blocks.ObjectBlock.to_dense" "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer" "pandas.core.indexes.base.Int64Index._maybe_cast_indexer" "pandas.core.indexes.base.Int64Index._convert_scalar_indexer" "pandas.core.indexes.base.Int64Index._engine" "pandas.core.base.Int64Index._ndarray_values" "pandas.core.indexes.base.Int64Index.get_loc" "pandas.core.frame.DataFrame.__setitem__" "pandas.core.indexing.convert_to_index_sliceable" "pandas.core.frame.DataFrame._set_item" "pandas.core.frame.DataFrame._ensure_valid_index" "pandas.core.frame.DataFrame._sanitize_column" "pandas.core.dtypes.inference.is_sequence" "pandas.core.dtypes.cast.infer_dtype_from_scalar" "pandas.core.dtypes.cast.cast_scalar_to_array" "pandas.core.generic.DataFrame._set_item" "pandas.core.internals.managers.BlockManager.set" "pandas.core.internals.blocks.ObjectBlock.should_store" "pandas.core.internals.managers.value_getitem" "pandas.core.internals.blocks.ObjectBlock.set" "pandas.core.generic.DataFrame._clear_item_cache" "pandas.core.frame.DataFrame.__len__" "pandas.core.generic.DataFrame._check_setitem_copy" "pandas.core.reshape.concat.concat" "pandas.core.reshape.concat._Concatenator.__init__" "pandas.core.common.not_none" "pandas.core.generic.DataFrame._consolidate" "pandas.util._validators.validate_bool_kwarg" "pandas.core.generic.DataFrame.ndim" "pandas.core.reshape.concat.<listcomp>" "pandas.core.frame.DataFrame.shape" "pandas.core.reshape.concat._Concatenator._get_new_axes" "pandas.core.reshape.concat._Concatenator._get_result_dim" "pandas.core.reshape.concat._Concatenator.<listcomp>" "pandas.core.reshape.concat._Concatenator._get_comb_axis" "pandas.core.indexes.api.get_objs_combined_axis" "pandas.core.indexes.api.<listcomp>" "pandas.core.indexes.api._get_combined_index" "pandas.core.indexes.api._get_distinct_objs" "pandas.core.indexes.api.union_indexes" "pandas.core.indexes.api._sanitize_and_check" "pandas.core.indexes.api.<setcomp>" "pandas.core.indexes.api.get_consensus_names" "pandas.core.indexes.base.Index._get_names" "pandas.core.common.any_not_none" "pandas.core.reshape.concat._Concatenator._get_concat_axis" "pandas.core.reshape.concat._concat_indexes" "pandas.core.indexes.base.Int64Index.append" "pandas.core.indexes.base.<setcomp>" "pandas.core.indexes.base.Int64Index._concat" "pandas.core.dtypes.concat.get_dtype_kinds" "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" "pandas.core.indexes.numeric.<listcomp>" "pandas.core.indexes.base.Int64Index._values" "pandas.core.indexes.base.Int64Index.rename" "pandas.core.indexes.base.Int64Index.set_names" "pandas.core.indexes.base.Int64Index._set_names" "pandas.core.reshape.concat._Concatenator._maybe_check_integrity" "pandas.core.reshape.concat._Concatenator.get_result" "pandas.core.internals.managers.concatenate_block_managers" "pandas.core.internals.concat.get_mgr_concatenation_plan" "pandas.core.internals.managers.BlockManager._is_single_block" "pandas.core.internals.concat.JoinUnit.__init__" "pandas.core.internals.concat.combine_concat_plans" "pandas.core.internals.concat._next_or_none" "pandas.core.internals.concat.is_uniform_join_units" "pandas.core.internals.concat.<genexpr>" "pandas.core.internals.concat.JoinUnit.is_na" "pandas.core.internals.blocks.IntBlock.concat_same_type" "pandas.core.internals.blocks.<listcomp>" "pandas.core.internals.blocks.ObjectBlock.concat_same_type" "pandas.core.generic._from_axes"; label = "pandas"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_numpy" { "numpy.<module>" "numpy._globals.<module>" "numpy._globals.ModuleDeprecationWarning" "numpy._globals.VisibleDeprecationWarning" "numpy._globals._NoValueType" "numpy._globals.__new__" "numpy.__config__.<module>" "numpy.version.<module>" "numpy._distributor_init.<module>" "numpy.core.<module>" "numpy.core.multiarray.<module>" "numpy.core.overrides.<module>" "numpy.compat.<module>" "numpy.compat._inspect.<module>" "numpy.compat.py3k.<module>" "numpy.compat.py3k.contextlib_nullcontext" "numpy.core.overrides.array_function_from_dispatcher" "numpy.core.overrides.decorator" "numpy.core.overrides.array_function_dispatch" "numpy.core.umath.<module>" "numpy.core.numerictypes.<module>" "numpy.core._string_helpers.<module>" "numpy.core._string_helpers.<listcomp>" "numpy.core._type_aliases.<module>" "numpy.core._dtype.<module>" "numpy.core._type_aliases.TypeNADict" "numpy.core._string_helpers.english_lower" "numpy.core._type_aliases.<setcomp>" "numpy.core._type_aliases._add_types" "numpy.core._type_aliases.<genexpr>" "numpy.core._type_aliases._add_aliases" "numpy.core._type_aliases.bitname" "numpy.core._type_aliases._bits_of" "numpy.core._dtype._kind_name" "numpy.core._string_helpers.english_capitalize" "numpy.core._string_helpers.english_upper" "numpy.core._type_aliases._add_integer_aliases" "numpy.core._type_aliases._set_up_aliases" "numpy.core._type_aliases._set_array_types" "numpy.core._type_aliases._add_array_type" "numpy.core.overrides.set_module" "numpy.core.numerictypes._typedict" "numpy.core.numerictypes._construct_lookups" "numpy.core.numerictypes._register_types" "numpy.core.numeric.<module>" "numpy.core.shape_base.<module>" "numpy.core._asarray.<module>" "numpy.core.fromnumeric.<module>" "numpy.core._methods.<module>" "numpy.core._exceptions.<module>" "numpy.core._exceptions.UFuncTypeError" "numpy.core._exceptions._UFuncBinaryResolutionError" "numpy.core._exceptions._display_as_base" "numpy.core._exceptions._UFuncNoLoopError" "numpy.core._exceptions._UFuncCastingError" "numpy.core._exceptions._UFuncInputCastingError" "numpy.core._exceptions._UFuncOutputCastingError" "numpy.core._exceptions.TooHardError" "numpy.core._exceptions.AxisError" "numpy.core._exceptions._ArrayMemoryError" "numpy.core.overrides.verify_matching_signatures" "numpy.compat._inspect.getargspec" "numpy.compat._inspect.ismethod" "numpy.compat._inspect.isfunction" "numpy.compat._inspect.getargs" "numpy.compat._inspect.iscode" "numpy.core._ufunc_config.<module>" "numpy.core._ufunc_config.<dictcomp>" "numpy.core._ufunc_config._unspecified" "numpy.core._ufunc_config.errstate" "numpy.core._ufunc_config._setdef" "numpy.core.numeric.ComplexWarning" "numpy.core.arrayprint.<module>" "numpy.core.arrayprint._recursive_guard" "numpy.core.arrayprint.decorating_function" "numpy.core.arrayprint.FloatingFormat" "numpy.core.arrayprint.IntegerFormat" "numpy.core.arrayprint.BoolFormat" "numpy.core.arrayprint.ComplexFloatingFormat" "numpy.core.arrayprint._TimelikeFormat" "numpy.core.arrayprint.DatetimeFormat" "numpy.core.arrayprint.TimedeltaFormat" "numpy.core.arrayprint.SubArrayFormat" "numpy.core.arrayprint.StructuredVoidFormat" "numpy.core.arrayprint.set_string_function" "numpy.core.numeric.extend_all" "numpy.core.defchararray.<module>" "numpy.core.defchararray.chararray" "numpy.core.records.<module>" "numpy.core.records._OrderedCounter" "numpy.core.records.format_parser" "numpy.core.records.record" "numpy.core.records.recarray" "numpy.core.memmap.<module>" "numpy.core.memmap.memmap" "numpy.core.function_base.<module>" "numpy.core.machar.<module>" "numpy.core.machar.MachAr" "numpy.core.getlimits.<module>" "numpy.core.getlimits.MachArLike" "numpy.core.getlimits.finfo" "numpy.core.getlimits.iinfo" "numpy.core.einsumfunc.<module>" "numpy.core._add_newdocs.<module>" "numpy.core.function_base.add_newdoc" "numpy.core.function_base._add_docstring" "numpy.core.function_base._needs_add_docstring" "numpy.core._add_newdocs.numeric_type_aliases" "numpy.core._add_newdocs.type_aliases_gen" "numpy.core._add_newdocs.add_newdoc_for_scalar_type" "numpy.core._add_newdocs.<genexpr>" "numpy.core._dtype_ctypes.<module>" "numpy.core._internal.<module>" "numpy.core._internal.dummy_ctype" "numpy.core._internal._missing_ctypes" "numpy.core._internal.c_void_p" "numpy.core._internal._ctypes" "numpy.core._internal._Stream" "numpy.core._internal.recursive" "numpy._pytesttester.<module>" "numpy._pytesttester.PytestTester" "numpy._pytesttester.PytestTester.__init__" "numpy.lib.<module>" "numpy.lib.mixins.<module>" "numpy.lib.mixins.NDArrayOperatorsMixin" "numpy.lib.mixins._binary_method" "numpy.lib.mixins._numeric_methods" "numpy.lib.mixins._reflected_binary_method" "numpy.lib.mixins._inplace_binary_method" "numpy.lib.mixins._unary_method" "numpy.lib.scimath.<module>" "numpy.lib.type_check.<module>" "numpy.lib.ufunclike.<module>" "numpy.lib.ufunclike._deprecate_out_named_y" "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y" "numpy.lib.ufunclike._fix_out_named_y" "numpy.lib.index_tricks.<module>" "numpy.matrixlib.<module>" "numpy.matrixlib.defmatrix.<module>" "numpy.linalg.<module>" "numpy.linalg.linalg.<module>" "numpy.lib.twodim_base.<module>" "numpy.core.getlimits.iinfo.__init__" "numpy.linalg.linalg.LinAlgError" "numpy.linalg.linalg._determine_error_states" "numpy.core._ufunc_config.errstate.__init__" "numpy.core._ufunc_config.errstate.__enter__" "numpy.core._ufunc_config.seterr" "numpy.core._ufunc_config.geterr" "numpy.core._ufunc_config.errstate.__exit__" "numpy.matrixlib.defmatrix.matrix" "numpy.lib.function_base.<module>" "numpy.lib.histograms.<module>" "numpy.lib.function_base.vectorize" "numpy.lib.stride_tricks.<module>" "numpy.lib.stride_tricks.DummyArray" "numpy.lib.index_tricks.nd_grid" "numpy.lib.index_tricks.MGridClass" "numpy.lib.index_tricks.MGridClass.__init__" "numpy.lib.index_tricks.OGridClass" "numpy.lib.index_tricks.OGridClass.__init__" "numpy.lib.index_tricks.AxisConcatenator" "numpy.lib.index_tricks.RClass" "numpy.lib.index_tricks.RClass.__init__" "numpy.lib.index_tricks.CClass" "numpy.lib.index_tricks.CClass.__init__" "numpy.lib.index_tricks.ndenumerate" "numpy.lib.index_tricks.ndindex" "numpy.lib.index_tricks.IndexExpression" "numpy.lib.index_tricks.IndexExpression.__init__" "numpy.lib.nanfunctions.<module>" "numpy.lib.shape_base.<module>" "numpy.lib.polynomial.<module>" "numpy.lib.polynomial.RankWarning" "numpy.lib.polynomial.poly1d" "numpy.lib.utils.<module>" "numpy.lib.utils._Deprecate" "numpy.lib.arraysetops.<module>" "numpy.lib.npyio.<module>" "numpy.lib.format.<module>" "numpy.lib._datasource.<module>" "numpy.lib._datasource._FileOpeners" "numpy.lib._datasource._FileOpeners.__init__" "numpy.lib._datasource.DataSource" "numpy.lib._datasource.Repository" "numpy.lib._iotools.<module>" "numpy.lib._iotools.LineSplitter" "numpy.lib._iotools.NameValidator" "numpy.lib._iotools.ConverterError" "numpy.lib._iotools.ConverterLockError" "numpy.lib._iotools.ConversionWarning" "numpy.lib._iotools.StringConverter" "numpy.lib.npyio.BagObj" "numpy.lib.npyio.NpzFile" "numpy.lib.financial.<module>" "numpy.lib.arrayterator.<module>" "numpy.lib.arrayterator.Arrayterator" "numpy.lib.arraypad.<module>" "numpy.lib._version.<module>" "numpy.lib._version.NumpyVersion" "numpy.fft.<module>" "numpy.fft._pocketfft.<module>" "numpy.fft.helper.<module>" "numpy.polynomial.<module>" "numpy.polynomial.polynomial.<module>" "numpy.polynomial.polyutils.<module>" "numpy.polynomial.polyutils.RankWarning" "numpy.polynomial.polyutils.PolyError" "numpy.polynomial.polyutils.PolyDomainError" "numpy.polynomial.polyutils.PolyBase" "numpy.polynomial._polybase.<module>" "numpy.polynomial._polybase.ABCPolyBase" "numpy.polynomial.polynomial.Polynomial" "numpy.polynomial.chebyshev.<module>" "numpy.polynomial.chebyshev.Chebyshev" "numpy.polynomial.legendre.<module>" "numpy.polynomial.legendre.Legendre" "numpy.polynomial.hermite.<module>" "numpy.polynomial.hermite.Hermite" "numpy.polynomial.hermite_e.<module>" "numpy.polynomial.hermite_e.HermiteE" "numpy.polynomial.laguerre.<module>" "numpy.polynomial.laguerre.Laguerre" "numpy.random.<module>" "numpy.random._pickle.<module>" "numpy.core.getlimits.iinfo.max" "numpy.core.multiarray.concatenate" "numpy.ctypeslib.<module>" "numpy.core._internal._getintp_ctype" "numpy.lib.utils.deprecate" "numpy.lib.utils._Deprecate.__init__" "numpy.lib.utils._Deprecate.__call__" "numpy.lib.utils._set_function_name" "numpy.lib.utils._get_indent" "numpy.ctypeslib._ndptr" "numpy.ctypeslib._concrete_ndptr" "numpy.ctypeslib._get_scalar_type_map" "numpy.ctypeslib.<dictcomp>" "numpy.core._internal.npy_ctypes_check" "numpy.core._dtype_ctypes.dtype_from_ctypes_type" "numpy.core._dtype_ctypes._from_ctypes_scalar" "numpy.ma.<module>" "numpy.ma.core.<module>" "numpy.ma.core.MaskedArrayFutureWarning" "numpy.ma.core.MAError" "numpy.ma.core.MaskError" "numpy.ma.core.<listcomp>" "numpy.ma.core._DomainCheckInterval" "numpy.ma.core._DomainTan" "numpy.ma.core._DomainSafeDivide" "numpy.ma.core._DomainGreater" "numpy.ma.core._DomainGreaterEqual" "numpy.ma.core._MaskedUFunc" "numpy.ma.core._MaskedUnaryOperation" "numpy.ma.core._MaskedBinaryOperation" "numpy.ma.core._DomainedBinaryOperation" "numpy.ma.core._MaskedUnaryOperation.__init__" "numpy.core._internal._ufunc_doc_signature_formatter" "numpy.ma.core._DomainGreaterEqual.__init__" "numpy.ma.core._DomainGreater.__init__" "numpy.ma.core._DomainTan.__init__" "numpy.ma.core._DomainCheckInterval.__init__" "numpy.ma.core._MaskedBinaryOperation.__init__" "numpy.core._internal.<genexpr>" "numpy.ma.core._DomainSafeDivide.__init__" "numpy.ma.core._DomainedBinaryOperation.__init__" "numpy.ma.core._MaskedPrintOption" "numpy.ma.core._MaskedPrintOption.__init__" "numpy.ma.core.MaskedIterator" "numpy.ma.core.MaskedArray" "numpy.ma.core._arraymethod" "numpy.ma.core.mvoid" "numpy.ma.core.MaskedConstant" "numpy.ma.core.__new__" "numpy.ma.core.__has_singleton" "numpy.ma.core.MaskedArray.__array_finalize__" "numpy.ma.core.MaskedArray._update_from" "numpy.ma.core.getmask" "numpy.ma.core.MaskedArray.dtype" "numpy.ma.core.make_mask_descr" "numpy.ma.core._replace_dtype_fields" "numpy.ma.core._replace_dtype_fields_recursive" "numpy.ma.core.MaskedArray.shape" "numpy.ma.core.MaskedArray.view" "numpy.ma.core.MaskedConstant.__array_finalize__" "numpy.ma.core.MaskedConstant._update_from" "numpy.ma.core.MaskedConstant.__setattr__" "numpy.ma.core.MaskedConstant.shape" "numpy.ma.core.MaskedConstant.dtype" "numpy.ma.core._extrema_operation" "numpy.ma.core._frommethod" "numpy.ma.core._frommethod.__init__" "numpy.ma.core._frommethod.getdoc" "numpy.ma.core.get_object_signature" "numpy.compat._inspect.formatargspec" "numpy.compat._inspect.strseq" "numpy.compat._inspect.<lambda>" "numpy._globals._NoValueType.__repr__" "numpy.ma.core._extrema_operation.__init__" "numpy.ma.core.doc_note" "numpy.ma.core._convert2ma" "numpy.ma.core._convert2ma.__init__" "numpy.ma.core._convert2ma.getdoc" "numpy.ma.extras.<module>" "numpy.ma.extras._fromnxfunction" "numpy.ma.extras._fromnxfunction_single" "numpy.ma.extras._fromnxfunction_seq" "numpy.ma.extras._fromnxfunction_args" "numpy.ma.extras._fromnxfunction_allargs" "numpy.ma.extras._fromnxfunction_allargs.__init__" "numpy.ma.extras._fromnxfunction_allargs.getdoc" "numpy.ma.extras._fromnxfunction_seq.__init__" "numpy.ma.extras._fromnxfunction_seq.getdoc" "numpy.ma.extras._fromnxfunction_single.__init__" "numpy.ma.extras._fromnxfunction_single.getdoc" "numpy.ma.extras.MAxisConcatenator" "numpy.ma.extras.mr_class" "numpy.ma.extras.mr_class.__init__" "numpy.lib.index_tricks.mr_class.__init__" "numpy.core.getlimits._register_known_types" "numpy.core.getlimits.MachArLike.__init__" "numpy.core.getlimits.<lambda>" "numpy.core.getlimits._fr1" "numpy.core.getlimits._fr0" "numpy.core.getlimits._register_type" "numpy.core.arrayprint._array_str_implementation" "numpy.core.arrayprint.float128.wrapper" "numpy.core.arrayprint._guarded_repr_or_str" "numpy.testing.<module>" "numpy.testing._private.<module>" "numpy.testing._private.utils.<module>" "numpy.testing._private.utils.KnownFailureException" "numpy.testing._private.utils._Dummy" "numpy.testing._private.utils.IgnoreException" "numpy.testing._private.utils.clear_and_catch_warnings" "numpy.testing._private.utils.suppress_warnings" "numpy.testing._private.decorators.<module>" "numpy.testing._private.decorators.skipif" "numpy.testing._private.nosetester.<module>" "numpy.testing._private.nosetester.NoseTester" "numpy._sanity_check" "numpy.core.numeric.ones" "numpy.core.multiarray.copyto" "numpy.<genexpr>" "numpy.core.getlimits.iinfo.min" "numpy.core._dtype._name_get" "numpy.core._dtype._name_includes_bit_suffix" "numpy.core.numerictypes.issubdtype" "numpy.core.numerictypes.issubclass_" "numpy.core.numeric.identity" "numpy.lib.twodim_base.eye" "numpy.lib.function_base.iterable" "numpy.core.function_base._linspace_dispatcher" "numpy.core.function_base.linspace" "numpy.core._asarray.asanyarray" "numpy.core.multiarray.result_type" "numpy.core.fromnumeric._ndim_dispatcher" "numpy.core.fromnumeric.ndim" "numpy.core.numeric.isscalar" "numpy.core.fromnumeric._any_dispatcher" "numpy.core.fromnumeric.any" "numpy.core.fromnumeric._wrapreduction" "numpy.core.fromnumeric.<dictcomp>" "numpy.core._methods._any" "numpy.core.multiarray.can_cast" "numpy.core._asarray.asarray" "numpy.lib.function_base.vectorize.__init__" "numpy.core._asarray.require" "numpy.core._asarray.<setcomp>" "numpy.core._dtype.__str__" "numpy.core.fromnumeric._all_dispatcher" "numpy.core.fromnumeric.all" "numpy.core.numeric.full" "numpy.core.shape_base._atleast_2d_dispatcher" "numpy.core.shape_base.atleast_2d" "numpy.core._methods._all"; label = "numpy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cb" { "cb"; label = "cb"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__handle_fromlist" { "_handle_fromlist"; label = "_handle_fromlist"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_posixpath" { "posixpath.dirname" "posixpath._get_sep" "posixpath.join" "posixpath.normcase" "posixpath.expanduser" "posixpath.isabs" "posixpath.abspath" "posixpath.normpath"; label = "posixpath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__lock_unlock_module" { "_lock_unlock_module"; label = "_lock_unlock_module"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_collections" { "collections.abc._Environ.__contains__" "collections.abc._Environ.get" "collections.namedtuple" "collections.<genexpr>" "collections.abc.__subclasshook__" "collections.abc._check_methods" "collections.abc.update" "collections.abc.RcParams.__contains__"; label = "collections"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_os" { "os._Environ.__getitem__" "os.encode" "os._Environ.__setitem__" "os.__subclasshook__" "os._Environ.__delitem__" "os.decode" "os.fsencode" "os.fsdecode"; label = "os"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ExtensionFileLoader" { "ExtensionFileLoader.__init__" "ExtensionFileLoader.create_module" "ExtensionFileLoader.exec_module"; label = "ExtensionFileLoader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pathlib" { "pathlib.<module>" "pathlib._Flavour" "pathlib._WindowsFlavour" "pathlib.<genexpr>" "pathlib.<setcomp>" "pathlib._PosixFlavour" "pathlib._WindowsFlavour.__init__" "pathlib._PosixFlavour.__init__" "pathlib._Accessor" "pathlib._NormalAccessor" "pathlib._wrap_strfunc" "pathlib._wrap_binary_strfunc" "pathlib._Selector" "pathlib._TerminatingSelector" "pathlib._PreciseSelector" "pathlib._WildcardSelector" "pathlib._RecursiveWildcardSelector" "pathlib._PathParents" "pathlib.PurePath" "pathlib.PurePosixPath" "pathlib.PureWindowsPath" "pathlib.Path" "pathlib.PosixPath" "pathlib.WindowsPath" "pathlib.home" "pathlib.__new__" "pathlib._from_parts" "pathlib._parse_args" "pathlib._PosixFlavour.parse_parts" "pathlib.PosixPath._init" "pathlib._PosixFlavour.gethomedir" "pathlib._PosixFlavour.splitroot" "pathlib.PosixPath.__truediv__" "pathlib.PosixPath._make_child" "pathlib._PosixFlavour.join_parsed_parts" "pathlib._from_parsed_parts" "pathlib.PosixPath.__str__" "pathlib._format_parsed_parts" "pathlib.PosixPath.mkdir" "pathlib.wrapped" "pathlib.PosixPath.is_dir" "pathlib.PosixPath.stat" "pathlib.PosixPath.with_name" "pathlib.PosixPath.name" "pathlib.PosixPath.glob" "pathlib._PosixFlavour.casefold" "pathlib._make_selector" "pathlib._is_wildcard_pattern" "pathlib._WildcardSelector.__init__" "pathlib._WildcardSelector.select_from" "pathlib._WildcardSelector._select_from" "pathlib.PosixPath._make_child_relpath" "pathlib._TerminatingSelector._select_from" "pathlib.PosixPath.__fspath__" "pathlib.PosixPath.stem"; label = "pathlib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ntpath" { "ntpath.<module>"; label = "ntpath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_functools" { "functools.wraps" "functools.update_wrapper" "functools.lru_cache" "functools.decorating_function"; label = "functools"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_abc" { "abc.__new__" "abc.<setcomp>" "abc.register" "abc.__subclasscheck__" "abc.abstractmethod" "abc.__instancecheck__"; label = "abc"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__weakrefset" { "_weakrefset.WeakSet.__init__" "_weakrefset.WeakSet.__contains__" "_weakrefset.WeakSet.add" "_weakrefset.WeakSet.__iter__" "_weakrefset._IterationGuard.__init__" "_weakrefset._IterationGuard.__enter__" "_weakrefset._IterationGuard.__exit__" "_weakrefset.WeakSet._commit_removals"; label = "_weakrefset"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ArgSpec" { "ArgSpec"; label = "ArgSpec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_textwrap" { "textwrap.dedent" "textwrap.indent" "textwrap.prefixed_lines" "textwrap.predicate" "textwrap.fill" "textwrap.TextWrapper.__init__" "textwrap.TextWrapper.fill" "textwrap.TextWrapper.wrap" "textwrap.TextWrapper._split_chunks" "textwrap.TextWrapper._munge_whitespace" "textwrap.TextWrapper._split" "textwrap.<listcomp>" "textwrap.TextWrapper._wrap_chunks"; label = "textwrap"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_re" { "re.sub" "re._compile" "re.compile" "re.split" "re.match" "re.escape" "re._subx" "re._compile_repl" "re.search" "re.filter"; label = "re"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_sre_compile" { "sre_compile.isstring" "sre_compile.compile" "sre_compile._code" "sre_compile._compile_info" "sre_compile._get_literal_prefix" "sre_compile._get_charset_prefix" "sre_compile._compile" "sre_compile._simple" "sre_compile._compile_charset" "sre_compile._optimize_charset" "sre_compile._mk_bitmap" "sre_compile.<listcomp>" "sre_compile._generate_overlap_table" "sre_compile.fixup" "sre_compile._bytes_to_codes"; label = "sre_compile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_sre_parse" { "sre_parse.parse" "sre_parse.Tokenizer.__init__" "sre_parse.Tokenizer.__next" "sre_parse.Pattern.__init__" "sre_parse._parse_sub" "sre_parse.Tokenizer.tell" "sre_parse._parse" "sre_parse.SubPattern.__init__" "sre_parse.Tokenizer.get" "sre_parse.Tokenizer.match" "sre_parse._parse_flags" "sre_parse.SubPattern.__len__" "sre_parse.SubPattern.append" "sre_parse.fix_flags" "sre_parse.SubPattern.getwidth" "sre_parse.Pattern.groups" "sre_parse.Pattern.opengroup" "sre_parse.SubPattern.__getitem__" "sre_parse.SubPattern.__setitem__" "sre_parse.Pattern.closegroup" "sre_parse._escape" "sre_parse._class_escape" "sre_parse.Tokenizer.getuntil" "sre_parse.parse_template" "sre_parse.addgroup" "sre_parse.<listcomp>" "sre_parse.Tokenizer.getwhile" "sre_parse.Pattern.checkgroup" "sre_parse.Pattern.checklookbehindgroup" "sre_parse.SubPattern.__delitem__" "sre_parse.expand_template"; label = "sre_parse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_enum" { "enum.RegexFlag.__and__" "enum.__call__" "enum.__new__" "enum._convert" "enum.<listcomp>" "enum.<lambda>" "enum._create_" "enum._get_mixins_" "enum.__prepare__" "enum._EnumDict.__init__" "enum._EnumDict.__setitem__" "enum._is_sunder" "enum._is_dunder" "enum._is_descriptor" "enum._find_new_" "enum.__getattr__" "enum.<dictcomp>" "enum.__setattr__" "enum.<setcomp>" "enum.<genexpr>" "enum.__members__" "enum.RegexFlag.__or__" "enum._missing_" "enum._create_pseudo_member_" "enum._decompose" "enum.RegexFlag.name" "enum._power_of_two" "enum._high_bit" "enum.RegexFlag.value" "enum._generate_next_value_"; label = "enum"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster___new__" { "__new__"; label = "__new__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_contextlib" { "contextlib.contextmanager" "contextlib.errstate.__call__" "contextlib.errstate.inner" "contextlib.errstate._recreate_cm" "contextlib.helper" "contextlib._GeneratorContextManager.__init__" "contextlib._GeneratorContextManager.__enter__" "contextlib._GeneratorContextManager.__exit__"; label = "contextlib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_platform" { "platform.<module>" "platform.python_implementation" "platform._sys_version"; label = "platform"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_subprocess" { "subprocess.<module>" "subprocess.SubprocessError" "subprocess.CalledProcessError" "subprocess.TimeoutExpired" "subprocess.CompletedProcess" "subprocess.Popen" "subprocess.Popen.__init__" "subprocess._cleanup" "subprocess.Popen._get_handles" "subprocess.Popen._get_devnull" "subprocess.Popen._execute_child" "subprocess.Popen.__enter__" "subprocess.Popen.__exit__" "subprocess.Popen.wait" "subprocess.Popen._try_wait" "subprocess.Popen._handle_exitstatus" "subprocess.Popen.__del__" "subprocess.Popen._internal_poll"; label = "subprocess"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_signal" { "signal.<module>" "signal.<lambda>"; label = "signal"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_uname_result" { "uname_result"; label = "uname_result"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ctypes" { "ctypes.<module>" "ctypes.py_object" "ctypes._check_size" "ctypes.c_short" "ctypes.c_ushort" "ctypes.c_long" "ctypes.c_ulong" "ctypes.c_int" "ctypes.c_uint" "ctypes.c_float" "ctypes.c_double" "ctypes.c_longdouble" "ctypes.c_ubyte" "ctypes.c_byte" "ctypes.c_char" "ctypes.c_char_p" "ctypes.c_void_p" "ctypes.c_bool" "ctypes.c_wchar_p" "ctypes.c_wchar" "ctypes.CDLL" "ctypes.PyDLL" "ctypes.LibraryLoader" "ctypes.LibraryLoader.__init__" "ctypes.PyDLL.__init__" "ctypes._FuncPtr" "ctypes.CFUNCTYPE" "ctypes.CFunctionType" "ctypes.PYFUNCTYPE" "ctypes._endian.<module>" "ctypes._endian._swapped_meta" "ctypes._endian.BigEndianStructure" "ctypes._reset_cache" "ctypes.util.<module>" "ctypes.util.find_library" "ctypes.util._findSoname_ldconfig" "ctypes.CDLL.__init__" "ctypes.CDLL.__getattr__" "ctypes.CDLL.__getitem__"; label = "ctypes"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_copyreg" { "copyreg.pickle" "copyreg.constructor" "copyreg._slotnames" "copyreg.__newobj__"; label = "copyreg"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_warnings" { "warnings.simplefilter" "warnings._add_filter" "warnings.filterwarnings" "warnings.catch_warnings.__init__" "warnings.catch_warnings.__enter__" "warnings.catch_warnings.__exit__"; label = "warnings"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_types" { "types.DynamicClassAttribute.__get__"; label = "types"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_interface" { "interface"; label = "interface"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_secrets" { "secrets.<module>"; label = "secrets"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_hmac" { "hmac.<module>" "hmac.<genexpr>" "hmac.HMAC"; label = "hmac"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_random" { "random.SystemRandom.__init__" "random.SystemRandom.seed" "random.SystemRandom.getrandbits" "random.Random.__init__" "random.Random.seed" "random.Random.choice" "random.Random._randbelow"; label = "random"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_concatenate" { "concatenate"; label = "concatenate"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_unittest" { "unittest.<module>" "unittest.result.<module>" "unittest.util.<module>" "unittest.result.TestResult" "unittest.result.failfast" "unittest.case.<module>" "unittest.case.SkipTest" "unittest.case._ShouldStop" "unittest.case._UnexpectedSuccess" "unittest.case._Outcome" "unittest.case._BaseTestCaseContext" "unittest.case._AssertRaisesBaseContext" "unittest.case._AssertRaisesContext" "unittest.case._AssertWarnsContext" "unittest.case._CapturingHandler" "unittest.case._AssertLogsContext" "unittest.case.TestCase" "unittest.case._deprecate" "unittest.case.FunctionTestCase" "unittest.case._SubTest" "unittest.suite.<module>" "unittest.suite.BaseTestSuite" "unittest.suite.TestSuite" "unittest.suite._ErrorHolder" "unittest.suite._DebugResult" "unittest.loader.<module>" "unittest.loader._FailedTest" "unittest.loader.TestLoader" "unittest.loader.TestLoader.__init__" "unittest.main.<module>" "unittest.runner.<module>" "unittest.signals.<module>" "unittest.signals._InterruptHandler" "unittest.runner._WritelnDecorator" "unittest.runner.TextTestResult" "unittest.runner.TextTestRunner" "unittest.main.TestProgram" "unittest.case._Dummy.__init__" "unittest.case._Dummy.addTypeEqualityFunc"; label = "unittest"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Mismatch" { "Mismatch"; label = "Mismatch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_difflib" { "difflib.<module>" "difflib.SequenceMatcher" "difflib.Differ" "difflib.HtmlDiff"; label = "difflib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Match" { "Match"; label = "Match"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_logging" { "logging.<module>" "logging.LogRecord" "logging.PercentStyle" "logging.StrFormatStyle" "logging.StringTemplateStyle" "logging.Formatter" "logging.Formatter.__init__" "logging.PercentStyle.__init__" "logging.BufferingFormatter" "logging.Filter" "logging.Filterer" "logging.Handler" "logging.StreamHandler" "logging.FileHandler" "logging._StderrHandler" "logging._StderrHandler.__init__" "logging._checkLevel" "logging._addHandlerRef" "logging._acquireLock" "logging._releaseLock" "logging._StderrHandler.createLock" "logging.PlaceHolder" "logging.Manager" "logging.Logger" "logging.RootLogger" "logging.LoggerAdapter" "logging.RootLogger.__init__" "logging.Manager.__init__" "logging.NullHandler" "logging.getLogger" "logging.Manager.getLogger" "logging.Logger.__init__" "logging.Manager._fixupParents" "logging.PlaceHolder.__init__" "logging.Manager._fixupChildren" "logging.Logger.debug" "logging.Logger.isEnabledFor" "logging.Logger.getEffectiveLevel" "logging.PlaceHolder.append"; label = "logging"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_threading" { "threading.RLock" "threading.Condition.__init__" "threading.Thread.__init__" "threading._newname" "threading.current_thread" "threading._MainThread.daemon" "threading.Event.__init__" "threading.Thread.daemon" "threading.Event.is_set" "threading.Thread.start" "threading.Event.wait" "threading.Condition.__enter__" "threading.Condition.wait" "threading.Condition._is_owned" "threading.Condition._release_save" "threading.Condition._acquire_restore" "threading.Condition.__exit__" "threading.Condition.notify"; label = "threading"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_weakref" { "weakref.__init__" "weakref.update" "weakref.WeakKeyDictionary.__init__" "weakref.WeakValueDictionary.__setitem__" "weakref.__new__" "weakref.KeyedRef.__init__"; label = "weakref"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_spec_from_loader" { "spec_from_loader"; label = "spec_from_loader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_type" { "type._requires_builtin_wrapper" "type.create_module" "type.exec_module"; label = "type"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_is_package" { "is_package"; label = "is_package"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pprint" { "pprint.<module>" "pprint._safe_key" "pprint.PrettyPrinter"; label = "pprint"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__LoggingWatcher" { "_LoggingWatcher"; label = "_LoggingWatcher"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_copyto" { "copyto"; label = "copyto"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pytz" { "pytz.<module>" "pytz.exceptions.<module>" "pytz.exceptions.Error" "pytz.exceptions.UnknownTimeZoneError" "pytz.exceptions.InvalidTimeError" "pytz.exceptions.AmbiguousTimeError" "pytz.exceptions.NonExistentTimeError" "pytz.lazy.<module>" "pytz.lazy.LazyDict" "pytz.lazy.LazyList" "pytz.lazy.<listcomp>" "pytz.lazy.LazySet" "pytz.tzinfo.<module>" "pytz.tzinfo.memorized_timedelta" "pytz.tzinfo.BaseTzInfo" "pytz.tzinfo.StaticTzInfo" "pytz.tzinfo.DstTzInfo" "pytz.tzfile.<module>" "pytz.tzfile._byte_string" "pytz.UTC" "pytz._CountryTimezoneDict" "pytz._CountryNameDict" "pytz._FixedOffset" "pytz.lazy.__new__" "pytz.lazy.lazy"; label = "pytz"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_dateutil" { "dateutil.<module>" "dateutil._version.<module>" "dateutil.tz.<module>" "dateutil.tz.tz.<module>" "dateutil.tz._common.<module>" "dateutil.tz._common._tzinfo" "dateutil.tz._common._validate_fromutc_inputs" "dateutil.tz._common.tzrangebase" "dateutil.tz._common.tzname_in_python2" "dateutil.tz._factories.<module>" "dateutil.tz._factories._TzSingleton" "dateutil.tz._factories._TzFactory" "dateutil.tz._factories._TzOffsetFactory" "dateutil.tz._factories._TzStrFactory" "dateutil.tz.win.<module>" "dateutil.tz.tz.tzutc" "dateutil.tz._factories.__init__" "dateutil.tz._factories.__call__" "dateutil.tz.tz.tzoffset" "dateutil.tz.tz.tzlocal" "dateutil.tz.tz._ttinfo" "dateutil.tz.tz._tzfile" "dateutil.tz.tz.tzfile" "dateutil.tz.tz.tzrange" "dateutil.tz.tz.tzstr" "dateutil.tz.tz._tzicalvtzcomp" "dateutil.tz.tz._tzicalvtz" "dateutil.tz.tz.tzical" "dateutil.tz.tz.__get_gettz" "dateutil.tz.tz.GettzFunc" "dateutil.tz.tz.GettzFunc.__init__" "dateutil.tz.tz._nullcontext" "dateutil.tz.DeprecatedTzFormatWarning" "dateutil.relativedelta.<module>" "dateutil._common.<module>" "dateutil._common.weekday" "dateutil.relativedelta.<genexpr>" "dateutil._common.weekday.__init__" "dateutil.relativedelta.relativedelta" "dateutil.parser.<module>" "dateutil.parser._parser.<module>" "dateutil.parser._parser._timelex" "dateutil.parser._parser._resultbase" "dateutil.parser._parser.parserinfo" "dateutil.parser._parser._ymd" "dateutil.parser._parser.parser" "dateutil.parser._parser._result" "dateutil.parser._parser.parser.__init__" "dateutil.parser._parser.parserinfo.__init__" "dateutil.parser._parser.parserinfo._convert" "dateutil.parser._parser._tzparser" "dateutil.parser._parser._attr" "dateutil.parser._parser.ParserError" "dateutil.parser._parser.UnknownTimezoneWarning" "dateutil.parser.isoparser.<module>" "dateutil.parser.isoparser.isoparser" "dateutil.parser.isoparser._takes_ascii" "dateutil.parser.isoparser.isoparser.__init__" "dateutil.parser.__deprecate_private_class" "dateutil.parser.private_class" "dateutil.parser.__deprecated_private_func" "dateutil.easter.<module>" "dateutil.rrule.<module>" "dateutil.rrule.weekday" "dateutil.rrule.<genexpr>" "dateutil.rrule.weekday.__init__" "dateutil.rrule.rrulebase" "dateutil.rrule.rrule" "dateutil.rrule._iterinfo" "dateutil.rrule.rruleset" "dateutil.rrule._genitem" "dateutil.rrule._invalidates_cache" "dateutil.rrule._rrulestr"; label = "dateutil"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_distutils" { "distutils.version.<module>" "distutils.version.Version" "distutils.version.StrictVersion" "distutils.version.LooseVersion" "distutils.version.LooseVersion.__init__" "distutils.version.LooseVersion.parse" "distutils.version.<listcomp>" "distutils.version.LooseVersion.__lt__" "distutils.version.LooseVersion._cmp" "distutils.version.LooseVersion.__str__" "distutils.version.LooseVersion.__ge__"; label = "distutils"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_six" { "six.<module>" "six._LazyDescr" "six.MovedModule" "six._LazyModule" "six.MovedAttribute" "six._SixMetaPathImporter" "six._SixMetaPathImporter.__init__" "six._MovedItems" "six.MovedAttribute.__init__" "six.MovedModule.__init__" "six._SixMetaPathImporter._add_module" "six._MovedItems.__init__" "six.Module_six_moves_urllib_parse" "six.Module_six_moves_urllib_parse.__init__" "six.Module_six_moves_urllib_error" "six.Module_six_moves_urllib_error.__init__" "six.Module_six_moves_urllib_request" "six.Module_six_moves_urllib_request.__init__" "six.Module_six_moves_urllib_response" "six.Module_six_moves_urllib_response.__init__" "six.Module_six_moves_urllib_robotparser" "six.Module_six_moves_urllib_robotparser.__init__" "six.Module_six_moves_urllib" "six._SixMetaPathImporter._get_module" "six._add_doc" "six.MovedModule.__get__" "six.MovedModule._resolve" "six._import_module" "six._SixMetaPathImporter.find_module" "six._SixMetaPathImporter.is_package" "six._SixMetaPathImporter.__get_module" "six._SixMetaPathImporter.load_module" "six.add_metaclass" "six.wrapper" "six.MovedAttribute.__get__" "six.MovedAttribute._resolve"; label = "six"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster___future__" { "__future__.<module>" "__future__._Feature" "__future__._Feature.__init__"; label = "__future__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_spec_legacy" { "_find_spec_legacy"; label = "_find_spec_legacy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__load_backward_compatible" { "_load_backward_compatible"; label = "_load_backward_compatible"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_typing" { "typing.<module>" "typing.TypingMeta" "typing._TypingBase" "typing.__new__" "typing.TypingMeta.__init__" "typing._FinalTypingBase" "typing._ForwardRef" "typing._TypeAlias" "typing._Any" "typing._Any.__init__" "typing._NoReturn" "typing._NoReturn.__init__" "typing.TypeVar" "typing.TypeVar.__init__" "typing.<genexpr>" "typing._type_check" "typing._Union" "typing._tp_cache" "typing._Union.__init__" "typing._Optional" "typing._Optional.__init__" "typing.GenericMeta" "typing.Generic" "typing._type_vars" "typing._get_type_vars" "typing.GenericMeta.__setattr__" "typing.GenericMeta._abc_negative_cache" "typing.GenericMeta._abc_negative_cache_version" "typing._next_in_mro" "typing.GenericMeta.__init__" "typing._TypingEmpty" "typing._TypingEllipsis" "typing.TupleMeta" "typing.Tuple" "typing.TupleMeta.__setattr__" "typing.TupleMeta._abc_negative_cache" "typing.TupleMeta._abc_negative_cache_version" "typing._make_subclasshook" "typing.TupleMeta.__init__" "typing.CallableMeta" "typing.Callable" "typing.CallableMeta.__setattr__" "typing.CallableMeta._abc_negative_cache" "typing.CallableMeta._abc_negative_cache_version" "typing.CallableMeta.__init__" "typing._ClassVar" "typing._ClassVar.__init__" "typing._ProtocolMeta" "typing._Protocol" "typing._ProtocolMeta.__setattr__" "typing._ProtocolMeta._abc_negative_cache" "typing._ProtocolMeta._abc_negative_cache_version" "typing._ProtocolMeta.__init__" "typing.inner" "typing.GenericMeta.__hash__" "typing.GenericMeta.__getitem__" "typing._no_slots_copy" "typing.GenericMeta._subs_tree" "typing._subs_tree" "typing._replace_arg" "typing.Awaitable" "typing.GenericMeta._get_type_vars" "typing.TypeVar._get_type_vars" "typing.GenericMeta.__eq__" "typing.TupleMeta.__eq__" "typing.CallableMeta.__eq__" "typing._ProtocolMeta.__eq__" "typing._check_generic" "typing.Coroutine" "typing.AsyncIterable" "typing.AsyncIterator" "typing.Iterable" "typing.Iterator" "typing.SupportsInt" "typing._ProtocolMeta._get_type_vars" "typing.SupportsFloat" "typing.SupportsComplex" "typing.SupportsBytes" "typing._ProtocolMeta.__hash__" "typing._ProtocolMeta.__getitem__" "typing._ProtocolMeta._subs_tree" "typing.SupportsAbs" "typing.SupportsRound" "typing.Reversible" "typing.Container" "typing.Collection" "typing.AbstractSet" "typing.MutableSet" "typing.Mapping" "typing.MutableMapping" "typing.Sequence" "typing.MutableSequence" "typing.ByteString" "typing.List" "typing.Deque" "typing.Set" "typing.FrozenSet" "typing.MappingView" "typing.KeysView" "typing.TupleMeta.__hash__" "typing.TupleMeta.__getitem__" "typing.TupleMeta._subs_tree" "typing.TupleMeta._get_type_vars" "typing.ItemsView" "typing.ValuesView" "typing.ContextManager" "typing.Dict" "typing.DefaultDict" "typing.Counter" "typing.ChainMap" "typing.Generator" "typing.AsyncGenerator" "typing.Type" "typing.NamedTupleMeta" "typing.NamedTuple" "typing.IO" "typing.BinaryIO" "typing._Union.__hash__" "typing._Union.__getitem__" "typing._remove_dups_flatten" "typing._Union._subs_tree" "typing.TextIO" "typing._Optional.__getitem__" "typing.io" "typing._TypeAlias.__init__" "typing.re" "typing._Any._get_type_vars" "typing._ForwardRef.__init__" "typing._ForwardRef.__hash__" "typing._ForwardRef._get_type_vars" "typing.GenericMeta.__subclasscheck__" "typing.__extrahook__" "typing.CallableMeta.__getitem__" "typing.CallableMeta.__hash__" "typing.CallableMeta.__getitem_inner__" "typing.CallableMeta._subs_tree" "typing.CallableMeta._get_type_vars" "typing._Union._get_type_vars" "typing.cast" "typing.CallableMeta.__subclasscheck__" "typing.TupleMeta.__subclasscheck__" "typing.overload"; label = "typing"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_AsyncContextManager" { "AsyncContextManager"; label = "AsyncContextManager"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DeprecatedOption" { "DeprecatedOption"; label = "DeprecatedOption"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RegisteredOption" { "RegisteredOption"; label = "RegisteredOption"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_locale" { "locale.getlocale" "locale._parse_localename" "locale.normalize" "locale.getpreferredencoding"; label = "locale"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_calendar" { "calendar._localized_day.__getitem__" "calendar._localized_month.__getitem__" "calendar.<lambda>"; label = "calendar"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Components" { "Components"; label = "Components"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_fractions" { "fractions.<module>" "fractions.Fraction" "fractions._operator_fallbacks"; label = "fractions"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_importlib" { "importlib.import_module"; label = "importlib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__gcd_import" { "_gcd_import"; label = "_gcd_import"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__sanity_check" { "_sanity_check"; label = "_sanity_check"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_json" { "json.<module>" "json.decoder.<module>" "json.scanner.<module>" "json.decoder.JSONDecodeError" "json.decoder.JSONDecoder" "json.encoder.<module>" "json.encoder.JSONEncoder" "json.encoder.JSONEncoder.__init__" "json.decoder.JSONDecoder.__init__" "json.loads" "json.decoder.JSONDecoder.decode" "json.decoder.JSONDecoder.raw_decode" "json.load"; label = "json"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_zipfile" { "zipfile.<module>" "zipfile.BadZipFile" "zipfile.LargeZipFile" "zipfile.ZipInfo" "zipfile._ZipDecrypter" "zipfile.LZMACompressor" "zipfile.LZMADecompressor" "zipfile._SharedFile" "zipfile._Tellable" "zipfile.ZipExtFile" "zipfile._ZipWriteFile" "zipfile.ZipFile" "zipfile.PyZipFile"; label = "zipfile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_inspect" { "inspect.Parameter.__init__" "inspect.Signature.__init__" "inspect.Parameter.kind" "inspect.Parameter.name" "inspect.Parameter.default" "inspect.cleandoc" "inspect.signature" "inspect.from_callable" "inspect._signature_from_callable" "inspect.unwrap" "inspect._is_wrapper" "inspect.isfunction" "inspect._signature_from_function" "inspect.<genexpr>" "inspect.Signature.parameters" "inspect.Parameter.replace" "inspect.Signature.replace" "inspect.<lambda>" "inspect.getdoc" "inspect._finddoc" "inspect.isclass" "inspect.ismethod" "inspect._findclass" "inspect._signature_is_functionlike" "inspect._signature_is_builtin" "inspect.isbuiltin" "inspect.ismethoddescriptor" "inspect._signature_get_user_defined_method" "inspect._signature_bound_method" "inspect.Signature.__str__" "inspect.Parameter.__str__" "inspect.Signature.return_annotation" "inspect.getmodule" "inspect.ismodule"; label = "inspect"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_OutputKey" { "OutputKey"; label = "OutputKey"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_NamedAgg" { "NamedAgg"; label = "NamedAgg"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_csv" { "csv.<module>" "csv.Dialect" "csv.excel" "csv.excel_tab" "csv.unix_dialect" "csv.DictReader" "csv.DictWriter" "csv.Sniffer"; label = "csv"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_copy" { "copy.copy" "copy._reconstruct"; label = "copy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_matplotlib" { "matplotlib.<module>" "matplotlib.cbook.<module>" "matplotlib.cbook.deprecation.<module>" "matplotlib.cbook.deprecation.MatplotlibDeprecationWarning" "matplotlib.cbook.deprecation._deprecated_parameter_class" "matplotlib.cbook._StrongRef" "matplotlib.cbook.CallbackRegistry" "matplotlib.cbook.silent_list" "matplotlib.cbook.IgnoredKeywordWarning" "matplotlib.cbook.deprecation.deprecated" "matplotlib.cbook.deprecation.deprecate" "matplotlib.cbook.deprecation._generate_deprecation_warning" "matplotlib.cbook.deprecation.finalize" "matplotlib.cbook.maxdict" "matplotlib.cbook.Stack" "matplotlib.cbook.Grouper" "matplotlib.cbook.<dictcomp>" "matplotlib.cbook._OrderedSet" "matplotlib.cbook._classproperty" "matplotlib.rcsetup.<module>" "matplotlib.fontconfig_pattern.<module>" "matplotlib.fontconfig_pattern.FontconfigPatternParser" "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" "matplotlib.colors.<module>" "matplotlib.docstring.<module>" "matplotlib.docstring.Substitution" "matplotlib.docstring.Appender" "matplotlib.docstring.Substitution.__init__" "matplotlib._color_data.<module>" "matplotlib._color_data.<genexpr>" "matplotlib._color_data.<dictcomp>" "matplotlib.colors._ColorMapping" "matplotlib.colors.<dictcomp>" "matplotlib.colors._ColorMapping.__init__" "matplotlib.colors.ColorConverter" "matplotlib.docstring.copy" "matplotlib.docstring.do_copy" "matplotlib.colors.Colormap" "matplotlib.colors.LinearSegmentedColormap" "matplotlib.colors.ListedColormap" "matplotlib.colors.Normalize" "matplotlib.colors.TwoSlopeNorm" "matplotlib.colors.DivergingNorm" "matplotlib.colors.LogNorm" "matplotlib.colors.SymLogNorm" "matplotlib.colors.PowerNorm" "matplotlib.colors.BoundaryNorm" "matplotlib.colors.NoNorm" "matplotlib.colors.LightSource" "matplotlib.rcsetup.ValidateInStrings" "matplotlib.rcsetup._listify_validator" "matplotlib.rcsetup._make_type_validator" "matplotlib.rcsetup.ValidateInStrings.__init__" "matplotlib.rcsetup.<dictcomp>" "matplotlib.rcsetup.func" "matplotlib.rcsetup.ValidateInterval" "matplotlib.rcsetup._make_nseq_validator" "matplotlib._version.<module>" "matplotlib._version.get_versions" "matplotlib._check_versions" "matplotlib.ExecutableNotFoundError" "matplotlib._logged_cached" "matplotlib.RcParams" "matplotlib.<dictcomp>" "matplotlib.rc_params" "matplotlib.matplotlib_fname" "matplotlib.gen_candidates" "matplotlib.wrapper" "matplotlib.get_configdir" "matplotlib._get_xdg_config_dir" "matplotlib._get_config_or_cache_dir" "matplotlib._get_data_path" "matplotlib.rc_params_from_file" "matplotlib._rc_params_in_file" "matplotlib._open_file_or_url" "matplotlib.is_url" "matplotlib.RcParams.__init__" "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" "matplotlib.<listcomp>" "matplotlib.RcParams.__setitem__" "matplotlib.RcParams.__getitem__" "matplotlib.rcsetup.validate_backend" "matplotlib.rcsetup.validate_bool" "matplotlib.rcsetup.validator" "matplotlib.rcsetup.validate_webagg_address" "matplotlib.rcsetup.ValidateInStrings.__call__" "matplotlib.cbook.deprecation.warn_deprecated" "matplotlib.cbook._warn_external" "matplotlib.rcsetup.validate_any" "matplotlib.rcsetup._validate_linestyle" "matplotlib.rcsetup.validate_color" "matplotlib.colors.is_color_like" "matplotlib.colors._is_nth_color" "matplotlib.rcsetup.validate_color_or_auto" "matplotlib.rcsetup.<listcomp>" "matplotlib.colors.to_rgba" "matplotlib.colors._to_rgba_no_colorcycle" "matplotlib.colors.<genexpr>" "matplotlib.rcsetup.validate_hist_bins" "matplotlib.rcsetup.validate_whiskers" "matplotlib.rcsetup.f" "matplotlib.rcsetup.validate_fontweight" "matplotlib.rcsetup._validate_tex_preamble" "matplotlib.rcsetup.validate_hinting" "matplotlib.rcsetup.validate_font_properties" "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse" "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" "matplotlib.fontconfig_pattern.FontconfigPatternParser._families" "matplotlib.fontconfig_pattern.<listcomp>" "matplotlib.fontconfig_pattern.FontconfigPatternParser._name" "matplotlib.fontconfig_pattern.FontconfigPatternParser._property" "matplotlib.rcsetup.validate_mathtext_default" "matplotlib.rcsetup.validate_aspect" "matplotlib.rcsetup.validate_axisbelow" "matplotlib.rcsetup.validate_fontsize" "matplotlib.rcsetup.validate_cycler" "matplotlib.rcsetup.validate_color_for_prop_cycle" "matplotlib.rcsetup._validate_greaterequal0_lessequal1" "matplotlib.rcsetup.validate_fontsize_None" "matplotlib.rcsetup.validate_color_or_inherit" "matplotlib.rcsetup._validate_greaterequal0_lessthan1" "matplotlib.rcsetup.validate_dpi" "matplotlib.rcsetup._update_savefig_format" "matplotlib.rcsetup.validate_bbox" "matplotlib.rcsetup.validate_ps_distiller" "matplotlib.rcsetup.validate_fonttype" "matplotlib.rcsetup.validate_sketch" "matplotlib.RcParams.__iter__" "matplotlib.get_data_path" "matplotlib.RcParams.copy" "matplotlib.RcParams.<dictcomp>" "matplotlib.rc_context" "matplotlib.cbook.deprecation._rename_parameter" "matplotlib.cbook.deprecation._delete_parameter" "matplotlib.cbook.deprecation.<listcomp>" "matplotlib.is_interactive" "matplotlib.pyplot.<module>" "matplotlib.colorbar.<module>" "matplotlib.artist.<module>" "matplotlib.path.<module>" "matplotlib.path.Path" "matplotlib.cbook.deprecation._deprecated_property" "matplotlib.transforms.<module>" "matplotlib.transforms.TransformNode" "matplotlib.transforms.BboxBase" "matplotlib.transforms.Bbox" "matplotlib.transforms.TransformedBbox" "matplotlib.transforms.LockableBbox" "matplotlib.transforms.Transform" "matplotlib.transforms.TransformWrapper" "matplotlib.transforms.__init_subclass__" "matplotlib.transforms.<genexpr>" "matplotlib.transforms.AffineBase" "matplotlib.transforms.Affine2DBase" "matplotlib.transforms.Affine2D" "matplotlib.transforms.IdentityTransform" "matplotlib.transforms._BlendedMixin" "matplotlib.transforms.BlendedGenericTransform" "matplotlib.transforms.BlendedAffine2D" "matplotlib.transforms.CompositeGenericTransform" "matplotlib.transforms.CompositeAffine2D" "matplotlib.transforms.BboxTransform" "matplotlib.transforms.BboxTransformTo" "matplotlib.transforms.BboxTransformToMaxOnly" "matplotlib.transforms.BboxTransformFrom" "matplotlib.transforms.ScaledTranslation" "matplotlib.transforms.TransformedPath" "matplotlib.transforms.TransformedPatchPath" "matplotlib.artist.Artist" "matplotlib.artist.ArtistInspector" "matplotlib.artist.kwdoc" "matplotlib.artist.ArtistInspector.__init__" "matplotlib.artist.ArtistInspector.get_aliases" "matplotlib.artist.ArtistInspector.<listcomp>" "matplotlib.artist.ArtistInspector.is_alias" "matplotlib.artist.ArtistInspector.pprint_setters" "matplotlib.artist.ArtistInspector._get_setters_and_targets" "matplotlib.artist.ArtistInspector.get_valid_values" "matplotlib.artist.ArtistInspector.aliased_name" "matplotlib.artist.<genexpr>" "matplotlib.docstring.Substitution.update" "matplotlib.collections.<module>" "matplotlib.cm.<module>" "matplotlib._cm.<module>" "matplotlib._cm.cubehelix" "matplotlib._cm.<dictcomp>" "matplotlib._cm_listed.<module>" "matplotlib._cm_listed.<dictcomp>" "matplotlib.colors.ListedColormap.__init__" "matplotlib.cm._gen_cmap_d" "matplotlib.colors.from_list" "matplotlib.colors.LinearSegmentedColormap.__init__" "matplotlib.colors.ListedColormap.reversed" "matplotlib.colors.LinearSegmentedColormap.reversed" "matplotlib.colors.LinearSegmentedColormap.<dictcomp>" "matplotlib.colors.<listcomp>" "matplotlib.cm.ScalarMappable" "matplotlib.lines.<module>" "matplotlib.markers.<module>" "matplotlib.path.Path.__init__" "matplotlib.cbook._to_unmasked_float_array" "matplotlib.path.Path._update_values" "matplotlib.markers.MarkerStyle" "matplotlib.cbook._define_aliases" "matplotlib.lines.Line2D" "matplotlib.artist.allow_rasterization" "matplotlib.docstring.dedent_interpd" "matplotlib.docstring.Substitution.__call__" "matplotlib.cbook.make_alias" "matplotlib.lines.VertexSelector" "matplotlib.collections.Collection" "matplotlib.transforms.IdentityTransform.__init__" "matplotlib.collections._CollectionWithSizes" "matplotlib.collections.PathCollection" "matplotlib.collections.PolyCollection" "matplotlib.collections.BrokenBarHCollection" "matplotlib.collections.RegularPolyCollection" "matplotlib.collections.StarPolygonCollection" "matplotlib.collections.AsteriskPolygonCollection" "matplotlib.collections.LineCollection" "matplotlib.collections.EventCollection" "matplotlib.collections.CircleCollection" "matplotlib.collections.EllipseCollection" "matplotlib.collections.PatchCollection" "matplotlib.collections.TriMesh" "matplotlib.collections.QuadMesh" "matplotlib.contour.<module>" "matplotlib.ticker.<module>" "matplotlib.ticker._DummyAxis" "matplotlib.ticker.TickHelper" "matplotlib.ticker.Formatter" "matplotlib.ticker.IndexFormatter" "matplotlib.ticker.NullFormatter" "matplotlib.ticker.FixedFormatter" "matplotlib.ticker.FuncFormatter" "matplotlib.ticker.FormatStrFormatter" "matplotlib.ticker.StrMethodFormatter" "matplotlib.ticker.OldScalarFormatter" "matplotlib.ticker.ScalarFormatter" "matplotlib.ticker.LogFormatter" "matplotlib.ticker.LogFormatterExponent" "matplotlib.ticker.LogFormatterMathtext" "matplotlib.ticker.LogFormatterSciNotation" "matplotlib.ticker.LogitFormatter" "matplotlib.ticker.EngFormatter" "matplotlib.ticker.PercentFormatter" "matplotlib.ticker.Locator" "matplotlib.ticker.IndexLocator" "matplotlib.ticker.FixedLocator" "matplotlib.ticker.NullLocator" "matplotlib.ticker.LinearLocator" "matplotlib.ticker.MultipleLocator" "matplotlib.ticker._Edge_integer" "matplotlib.ticker.MaxNLocator" "matplotlib.ticker.LogLocator" "matplotlib.ticker.SymmetricalLogLocator" "matplotlib.ticker.LogitLocator" "matplotlib.ticker.AutoLocator" "matplotlib.ticker.AutoMinorLocator" "matplotlib.ticker.OldAutoLocator" "matplotlib.font_manager.<module>" "matplotlib.afm.<module>" "matplotlib._mathtext_data.<module>" "matplotlib._mathtext_data.<dictcomp>" "matplotlib.afm.AFM" "matplotlib.font_manager.FontEntry" "matplotlib.font_manager.FontProperties" "matplotlib.font_manager._JSONEncoder" "matplotlib.font_manager.JSONEncoder" "matplotlib.font_manager.FontManager" "matplotlib.get_cachedir" "matplotlib._get_xdg_cache_dir" "matplotlib.font_manager.json_load" "matplotlib.font_manager._json_decode" "matplotlib.text.<module>" "matplotlib.patches.<module>" "matplotlib.bezier.<module>" "matplotlib.bezier.NonIntersectingPathException" "matplotlib.bezier.BezierSegment" "matplotlib.patches.Patch" "matplotlib.patches.Shadow" "matplotlib.patches.Rectangle" "matplotlib.patches.RegularPolygon" "matplotlib.patches.PathPatch" "matplotlib.patches.Polygon" "matplotlib.patches.Wedge" "matplotlib.patches.Arrow" "matplotlib.patches.FancyArrow" "matplotlib.patches.CirclePolygon" "matplotlib.patches.Ellipse" "matplotlib.patches.Circle" "matplotlib.patches.Arc" "matplotlib.patches._Style" "matplotlib.patches.BoxStyle" "matplotlib.patches._Base" "matplotlib.patches._register_style" "matplotlib.patches.Square" "matplotlib.patches.LArrow" "matplotlib.patches.RArrow" "matplotlib.patches.DArrow" "matplotlib.patches.Round" "matplotlib.patches.Round4" "matplotlib.patches.Sawtooth" "matplotlib.patches.Roundtooth" "matplotlib.patches._pprint_styles" "matplotlib.patches.<listcomp>" "matplotlib.patches.<genexpr>" "matplotlib.patches._simpleprint_styles" "matplotlib.patches.FancyBboxPatch" "matplotlib.patches.ConnectionStyle" "matplotlib.patches.SimpleEvent" "matplotlib.patches.Arc3" "matplotlib.patches.Angle3" "matplotlib.patches.Angle" "matplotlib.patches.Bar" "matplotlib.patches.ArrowStyle" "matplotlib.patches._Curve" "matplotlib.patches.Curve" "matplotlib.patches.CurveA" "matplotlib.patches.CurveB" "matplotlib.patches.CurveAB" "matplotlib.patches.CurveFilledA" "matplotlib.patches.CurveFilledB" "matplotlib.patches.CurveFilledAB" "matplotlib.patches._Bracket" "matplotlib.patches.BracketAB" "matplotlib.patches.BracketA" "matplotlib.patches.BracketB" "matplotlib.patches.BarAB" "matplotlib.patches.Simple" "matplotlib.patches.Fancy" "matplotlib.patches.FancyArrowPatch" "matplotlib.patches.ConnectionPatch" "matplotlib.textpath.<module>" "matplotlib._text_layout.<module>" "matplotlib.dviread.<module>" "matplotlib.dviread.Dvi" "matplotlib.dviread._dispatch" "matplotlib.dviread.decorate" "matplotlib.dviread.<listcomp>" "matplotlib.dviread.DviFont" "matplotlib.dviread.Vf" "matplotlib.dviread.Tfm" "matplotlib.dviread.PsfontsMap" "matplotlib.dviread.Encoding" "matplotlib.mathtext.<module>" "matplotlib.mathtext.MathtextBackend" "matplotlib.mathtext.MathtextBackendAgg" "matplotlib.mathtext.MathtextBackendBitmap" "matplotlib.mathtext.MathtextBackendPs" "matplotlib.mathtext.MathtextBackendPdf" "matplotlib.mathtext.MathtextBackendSvg" "matplotlib.mathtext.MathtextBackendPath" "matplotlib.mathtext.MathtextBackendCairo" "matplotlib.mathtext.Fonts" "matplotlib.mathtext.TruetypeFonts" "matplotlib.mathtext.BakomaFonts" "matplotlib.mathtext.UnicodeFonts" "matplotlib.mathtext.DejaVuFonts" "matplotlib.mathtext.DejaVuSerifFonts" "matplotlib.mathtext.DejaVuSansFonts" "matplotlib.mathtext.StixFonts" "matplotlib.mathtext.StixSansFonts" "matplotlib.mathtext.StandardPsFonts" "matplotlib.cbook._get_data_path" "matplotlib.mathtext.FontConstantsBase" "matplotlib.mathtext.ComputerModernFontConstants" "matplotlib.mathtext.STIXFontConstants" "matplotlib.mathtext.STIXSansFontConstants" "matplotlib.mathtext.DejaVuSerifFontConstants" "matplotlib.mathtext.DejaVuSansFontConstants" "matplotlib.mathtext.MathTextWarning" "matplotlib.mathtext.Node" "matplotlib.mathtext.Box" "matplotlib.mathtext.Vbox" "matplotlib.mathtext.Hbox" "matplotlib.mathtext.Char" "matplotlib.mathtext.Accent" "matplotlib.mathtext.List" "matplotlib.mathtext.Hlist" "matplotlib.mathtext.Vlist" "matplotlib.mathtext.Rule" "matplotlib.mathtext.Hrule" "matplotlib.mathtext.Vrule" "matplotlib.mathtext.Glue" "matplotlib.mathtext.GlueSpec" "matplotlib.mathtext.GlueSpec.__init__" "matplotlib.mathtext.Fil" "matplotlib.mathtext.Fill" "matplotlib.mathtext.Filll" "matplotlib.mathtext.NegFil" "matplotlib.mathtext.NegFill" "matplotlib.mathtext.NegFilll" "matplotlib.mathtext.SsGlue" "matplotlib.mathtext.HCentered" "matplotlib.mathtext.VCentered" "matplotlib.mathtext.Kern" "matplotlib.mathtext.SubSuperCluster" "matplotlib.mathtext.AutoHeightChar" "matplotlib.mathtext.AutoWidthChar" "matplotlib.mathtext.Ship" "matplotlib.mathtext.Parser" "matplotlib.mathtext.State" "matplotlib.mathtext.<lambda>" "matplotlib.mathtext.<listcomp>" "matplotlib.mathtext.<genexpr>" "matplotlib.mathtext.MathTextParser" "matplotlib.textpath.TextToPath" "matplotlib.textpath.TextToPath.__init__" "matplotlib.mathtext.MathTextParser.__init__" "matplotlib.textpath.TextPath" "matplotlib.text.Text" "matplotlib.cbook.maxdict.__init__" "matplotlib.text.TextWithDash" "matplotlib.text.OffsetFrom" "matplotlib.text._AnnotationBase" "matplotlib.text.Annotation" "matplotlib.texmanager.<module>" "matplotlib.texmanager.TexManager" "matplotlib.texmanager.<genexpr>" "matplotlib.blocking_input.<module>" "matplotlib.blocking_input.BlockingInput" "matplotlib.blocking_input.BlockingMouseInput" "matplotlib.blocking_input.BlockingContourLabeler" "matplotlib.blocking_input.BlockingKeyMouseInput" "matplotlib.contour.ClabelText" "matplotlib.contour.ContourLabeler" "matplotlib.contour.ContourSet" "matplotlib.contour.QuadContourSet" "matplotlib.gridspec.<module>" "matplotlib._pylab_helpers.<module>" "matplotlib._pylab_helpers.Gcf" "matplotlib.tight_layout.<module>" "matplotlib._layoutbox.<module>" "matplotlib._layoutbox.LayoutBox" "matplotlib.gridspec.GridSpecBase" "matplotlib.gridspec.GridSpec" "matplotlib.gridspec.GridSpecFromSubplotSpec" "matplotlib.gridspec.SubplotSpec" "matplotlib._constrained_layout.<module>" "matplotlib.colorbar._ColorbarAutoLocator" "matplotlib.colorbar._ColorbarAutoMinorLocator" "matplotlib.colorbar._ColorbarLogLocator" "matplotlib.colorbar._ColorbarMappableDummy" "matplotlib.colorbar.ColorbarBase" "matplotlib.colorbar.Colorbar" "matplotlib.colorbar.ColorbarPatch" "matplotlib.image.<module>" "matplotlib.backend_bases.<module>" "matplotlib.backend_tools.<module>" "matplotlib.backend_tools.Cursors" "matplotlib.backend_tools.ToolBase" "matplotlib.backend_tools.ToolToggleBase" "matplotlib.backend_tools.SetCursorBase" "matplotlib.backend_tools.ToolCursorPosition" "matplotlib.backend_tools.RubberbandBase" "matplotlib.backend_tools.ToolQuit" "matplotlib.backend_tools.ToolQuitAll" "matplotlib.backend_tools.ToolEnableAllNavigation" "matplotlib.backend_tools.ToolEnableNavigation" "matplotlib.backend_tools._ToolGridBase" "matplotlib.backend_tools.ToolGrid" "matplotlib.backend_tools.ToolMinorGrid" "matplotlib.backend_tools.ToolFullScreen" "matplotlib.backend_tools.AxisScaleBase" "matplotlib.backend_tools.ToolYScale" "matplotlib.backend_tools.ToolXScale" "matplotlib.backend_tools.ToolViewsPositions" "matplotlib.backend_tools.ViewsPositionsBase" "matplotlib.backend_tools.ToolHome" "matplotlib.backend_tools.ToolBack" "matplotlib.backend_tools.ToolForward" "matplotlib.backend_tools.ConfigureSubplotsBase" "matplotlib.backend_tools.SaveFigureBase" "matplotlib.backend_tools.ZoomPanBase" "matplotlib.backend_tools.ToolZoom" "matplotlib.backend_tools.ToolPan" "matplotlib.backend_tools.ToolHelpBase" "matplotlib.backend_tools.ToolCopyToClipboardBase" "matplotlib.tight_bbox.<module>" "matplotlib.widgets.<module>" "matplotlib.widgets.LockDraw" "matplotlib.widgets.Widget" "matplotlib.widgets.AxesWidget" "matplotlib.widgets.Button" "matplotlib.widgets.Slider" "matplotlib.widgets.CheckButtons" "matplotlib.widgets.TextBox" "matplotlib.widgets.RadioButtons" "matplotlib.widgets.SubplotTool" "matplotlib.widgets.Cursor" "matplotlib.widgets.MultiCursor" "matplotlib.widgets._SelectorWidget" "matplotlib.widgets.SpanSelector" "matplotlib.widgets.ToolHandles" "matplotlib.widgets.RectangleSelector" "matplotlib.widgets.EllipseSelector" "matplotlib.widgets.LassoSelector" "matplotlib.widgets.PolygonSelector" "matplotlib.widgets.Lasso" "matplotlib.backend_bases.RendererBase" "matplotlib.backend_bases.GraphicsContextBase" "matplotlib.backend_bases.TimerBase" "matplotlib.backend_bases.Event" "matplotlib.backend_bases.DrawEvent" "matplotlib.backend_bases.ResizeEvent" "matplotlib.backend_bases.CloseEvent" "matplotlib.backend_bases.LocationEvent" "matplotlib.backend_bases.MouseButton" "matplotlib.backend_bases.MouseEvent" "matplotlib.backend_bases.PickEvent" "matplotlib.backend_bases.KeyEvent" "matplotlib.backend_bases.FigureCanvasBase" "matplotlib.backend_bases.register_backend" "matplotlib.cbook._classproperty.__init__" "matplotlib.backend_bases.NonGuiException" "matplotlib.backend_bases.FigureManagerBase" "matplotlib.backend_bases.NavigationToolbar2" "matplotlib.backend_bases.ToolContainerBase" "matplotlib.backend_bases.StatusbarBase" "matplotlib.backend_bases._Backend" "matplotlib.cbook.deprecation._make_keyword_only" "matplotlib.backend_bases.ShowBase" "matplotlib.image._ImageBase" "matplotlib.image.AxesImage" "matplotlib.image.NonUniformImage" "matplotlib.image.PcolorImage" "matplotlib.image.FigureImage" "matplotlib.image.BboxImage" "matplotlib.style.<module>" "matplotlib.style.core.<module>" "matplotlib.style.core.load_base_library" "matplotlib.style.core.read_style_directory" "matplotlib.rcsetup.cycler" "matplotlib.rcsetup.<genexpr>" "matplotlib.style.core.reload_library" "matplotlib.style.core.update_user_library" "matplotlib.style.core.iter_user_libraries" "matplotlib.figure.<module>" "matplotlib.backends.<module>" "matplotlib.projections.<module>" "matplotlib.axes.<module>" "matplotlib.axes._subplots.<module>" "matplotlib.axes._axes.<module>" "matplotlib.category.<module>" "matplotlib.units.<module>" "matplotlib.units.ConversionError" "matplotlib.units.AxisInfo" "matplotlib.units.ConversionInterface" "matplotlib.units.DecimalConverter" "matplotlib.units.Registry" "matplotlib.category.StrCategoryConverter" "matplotlib.category.StrCategoryLocator" "matplotlib.category.StrCategoryFormatter" "matplotlib.category.UnitData" "matplotlib.dates.<module>" "matplotlib.dates.strpdate2num" "matplotlib.dates.bytespdate2num" "matplotlib.dates.DateFormatter" "matplotlib.dates.IndexDateFormatter" "matplotlib.dates.ConciseDateFormatter" "matplotlib.dates.AutoDateFormatter" "matplotlib.dates.rrulewrapper" "matplotlib.dates.DateLocator" "matplotlib.dates.RRuleLocator" "matplotlib.dates.AutoDateLocator" "matplotlib.dates.YearLocator" "matplotlib.dates.MonthLocator" "matplotlib.dates.WeekdayLocator" "matplotlib.dates.DayLocator" "matplotlib.dates.HourLocator" "matplotlib.dates.MinuteLocator" "matplotlib.dates.SecondLocator" "matplotlib.dates.MicrosecondLocator" "matplotlib.dates.DateConverter" "matplotlib.dates.ConciseDateConverter" "matplotlib.legend.<module>" "matplotlib.offsetbox.<module>" "matplotlib.offsetbox.OffsetBox" "matplotlib.offsetbox.PackerBase" "matplotlib.offsetbox.VPacker" "matplotlib.offsetbox.HPacker" "matplotlib.offsetbox.PaddedBox" "matplotlib.offsetbox.DrawingArea" "matplotlib.offsetbox.TextArea" "matplotlib.offsetbox.AuxTransformBox" "matplotlib.offsetbox.AnchoredOffsetbox" "matplotlib.offsetbox.AnchoredText" "matplotlib.offsetbox.OffsetImage" "matplotlib.offsetbox.AnnotationBbox" "matplotlib.offsetbox.DraggableBase" "matplotlib.offsetbox.DraggableOffsetBox" "matplotlib.offsetbox.DraggableAnnotation" "matplotlib.container.<module>" "matplotlib.container.Container" "matplotlib.container.BarContainer" "matplotlib.container.ErrorbarContainer" "matplotlib.container.StemContainer" "matplotlib.legend_handler.<module>" "matplotlib.legend_handler.HandlerBase" "matplotlib.legend_handler.HandlerNpoints" "matplotlib.legend_handler.HandlerNpointsYoffsets" "matplotlib.legend_handler.HandlerLine2D" "matplotlib.legend_handler.HandlerPatch" "matplotlib.legend_handler.HandlerLineCollection" "matplotlib.legend_handler.HandlerRegularPolyCollection" "matplotlib.legend_handler.HandlerPathCollection" "matplotlib.legend_handler.HandlerCircleCollection" "matplotlib.legend_handler.HandlerErrorbar" "matplotlib.legend_handler.HandlerStem" "matplotlib.legend_handler.HandlerTuple" "matplotlib.legend_handler.HandlerPolyCollection" "matplotlib.legend.DraggableLegend" "matplotlib.legend.Legend" "matplotlib.legend_handler.HandlerStem.__init__" "matplotlib.legend_handler.HandlerErrorbar.__init__" "matplotlib.legend_handler.HandlerLine2D.__init__" "matplotlib.legend_handler.HandlerPatch.__init__" "matplotlib.legend_handler.HandlerLineCollection.__init__" "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__" "matplotlib.legend_handler.HandlerCircleCollection.__init__" "matplotlib.legend_handler.HandlerTuple.__init__" "matplotlib.legend_handler.HandlerPathCollection.__init__" "matplotlib.legend_handler.HandlerPolyCollection.__init__" "matplotlib.mlab.<module>" "matplotlib.mlab.GaussianKDE" "matplotlib.quiver.<module>" "matplotlib.quiver.QuiverKey" "matplotlib.quiver.Quiver" "matplotlib.quiver.Barbs" "matplotlib.stackplot.<module>" "matplotlib.streamplot.<module>" "matplotlib.streamplot.StreamplotSet" "matplotlib.streamplot.DomainMap" "matplotlib.streamplot.Grid" "matplotlib.streamplot.StreamMask" "matplotlib.streamplot.InvalidIndexError" "matplotlib.streamplot.TerminateTrajectory" "matplotlib.streamplot.OutOfBounds" "matplotlib.table.<module>" "matplotlib.table.Cell" "matplotlib.table.CustomCell" "matplotlib.table.Table" "matplotlib.tri.<module>" "matplotlib.tri.triangulation.<module>" "matplotlib.tri.triangulation.Triangulation" "matplotlib.tri.tricontour.<module>" "matplotlib.tri.tricontour.TriContourSet" "matplotlib.tri.tritools.<module>" "matplotlib.tri.tritools.TriAnalyzer" "matplotlib.tri.trifinder.<module>" "matplotlib.tri.trifinder.TriFinder" "matplotlib.tri.trifinder.TrapezoidMapTriFinder" "matplotlib.tri.triinterpolate.<module>" "matplotlib.tri.triinterpolate.TriInterpolator" "matplotlib.tri.triinterpolate.LinearTriInterpolator" "matplotlib.tri.triinterpolate.CubicTriInterpolator" "matplotlib.tri.triinterpolate._ReducedHCT_Element" "matplotlib.tri.triinterpolate._DOF_estimator" "matplotlib.tri.triinterpolate._DOF_estimator_user" "matplotlib.tri.triinterpolate._DOF_estimator_geom" "matplotlib.tri.triinterpolate._DOF_estimator_min_E" "matplotlib.tri.triinterpolate._Sparse_Matrix_coo" "matplotlib.tri.trirefine.<module>" "matplotlib.tri.trirefine.TriRefiner" "matplotlib.tri.trirefine.UniformTriRefiner" "matplotlib.tri.tripcolor.<module>" "matplotlib.tri.triplot.<module>" "matplotlib.axes._base.<module>" "matplotlib.axis.<module>" "matplotlib.scale.<module>" "matplotlib.scale.ScaleBase" "matplotlib.scale.LinearScale" "matplotlib.scale.FuncTransform" "matplotlib.scale.FuncScale" "matplotlib.scale.LogTransformBase" "matplotlib.scale.InvertedLogTransformBase" "matplotlib.scale.Log10Transform" "matplotlib.scale.InvertedLog10Transform" "matplotlib.scale.Log2Transform" "matplotlib.scale.InvertedLog2Transform" "matplotlib.scale.NaturalLogTransform" "matplotlib.scale.InvertedNaturalLogTransform" "matplotlib.scale.LogTransform" "matplotlib.scale.InvertedLogTransform" "matplotlib.scale.LogScale" "matplotlib.scale.FuncScaleLog" "matplotlib.scale.SymmetricalLogTransform" "matplotlib.scale.InvertedSymmetricalLogTransform" "matplotlib.scale.SymmetricalLogScale" "matplotlib.scale.LogitTransform" "matplotlib.scale.LogisticTransform" "matplotlib.scale.LogitScale" "matplotlib.scale.get_scale_names" "matplotlib.scale.<listcomp>" "matplotlib.scale._get_scale_docs" "matplotlib.artist.ArtistInspector.get_setters" "matplotlib.artist.<listcomp>" "matplotlib.axis.<listcomp>" "matplotlib.axis.Tick" "matplotlib.axis.XTick" "matplotlib.axis.YTick" "matplotlib.axis.Ticker" "matplotlib.axis._LazyTickList" "matplotlib.axis.Axis" "matplotlib.axis._LazyTickList.__init__" "matplotlib.axis.XAxis" "matplotlib.axis._make_getset_interval" "matplotlib.axis.YAxis" "matplotlib.spines.<module>" "matplotlib.spines.Spine" "matplotlib.axes._base._process_plot_var_args" "matplotlib.axes._base._AxesBase" "matplotlib.cbook.Grouper.__init__" "matplotlib.axes._secondary_axes.<module>" "matplotlib.axes._secondary_axes.SecondaryAxis" "matplotlib.axes._axes.Axes" "matplotlib._preprocess_data" "matplotlib._add_data_doc" "matplotlib.axes._subplots.SubplotBase" "matplotlib.axes._subplots.subplot_class_factory" "matplotlib.axes._subplots.<genexpr>" "matplotlib.projections.geo.<module>" "matplotlib.projections.geo.GeoAxes" "matplotlib.projections.geo.ThetaFormatter" "matplotlib.projections.geo._GeoTransform" "matplotlib.projections.geo.AitoffAxes" "matplotlib.projections.geo.AitoffTransform" "matplotlib.projections.geo.InvertedAitoffTransform" "matplotlib.projections.geo.HammerAxes" "matplotlib.projections.geo.HammerTransform" "matplotlib.projections.geo.InvertedHammerTransform" "matplotlib.projections.geo.MollweideAxes" "matplotlib.projections.geo.MollweideTransform" "matplotlib.projections.geo.InvertedMollweideTransform" "matplotlib.projections.geo.LambertAxes" "matplotlib.projections.geo.LambertTransform" "matplotlib.projections.geo.InvertedLambertTransform" "matplotlib.projections.polar.<module>" "matplotlib.projections.polar.PolarTransform" "matplotlib.projections.polar.PolarAffine" "matplotlib.projections.polar.InvertedPolarTransform" "matplotlib.projections.polar.ThetaFormatter" "matplotlib.projections.polar._AxisWrapper" "matplotlib.projections.polar.ThetaLocator" "matplotlib.projections.polar.ThetaTick" "matplotlib.projections.polar.ThetaAxis" "matplotlib.projections.polar.RadialLocator" "matplotlib.projections.polar._ThetaShift" "matplotlib.projections.polar.RadialTick" "matplotlib.projections.polar.RadialAxis" "matplotlib.projections.polar._WedgeBbox" "matplotlib.projections.polar.PolarAxes" "matplotlib.projections.ProjectionRegistry" "matplotlib.projections.ProjectionRegistry.__init__" "matplotlib.projections.ProjectionRegistry.register" "matplotlib.projections.ProjectionRegistry.get_projection_names" "matplotlib.figure._AxesStack" "matplotlib.figure.AxesStack" "matplotlib.figure.SubplotParams" "matplotlib.figure.Figure" "matplotlib.pyplot.switch_backend" "matplotlib.pyplot.close" "matplotlib._pylab_helpers.destroy_all" "matplotlib.backends.backend_macosx.<module>" "matplotlib.backends.backend_qt5agg.<module>" "matplotlib.backends.backend_agg.<module>" "matplotlib.backends.backend_agg.RendererAgg" "matplotlib.backends.backend_agg.FigureCanvasAgg" "matplotlib.backends.backend_agg._BackendAgg" "matplotlib.backend_bases.export" "matplotlib.backend_bases.Show" "matplotlib.backends.backend_qt5.<module>" "matplotlib.backends.qt_editor.figureoptions.<module>" "matplotlib.backends.qt_compat.<module>" "matplotlib.backends.qt_compat._setup_pyqt5" "matplotlib.backends.qt_compat._setup_pyqt4" "matplotlib.backends.qt_compat._setup_pyqt4_internal" "matplotlib.backends.backend_qt4agg.<module>" "matplotlib.backends.backend_gtk3agg.<module>" "matplotlib.backends.backend_cairo.<module>" "matplotlib.backends.backend_tkagg.<module>" "matplotlib.backends._backend_tk.<module>" "matplotlib.backends.backend_wxagg.<module>" "matplotlib.pyplot.install_repl_displayhook" "matplotlib.pyplot._NotIPython" "matplotlib.pyplot._setup_pyplot_info_docstrings" "matplotlib.pyplot.get_plot_commands" "matplotlib.pyplot.colormaps" "matplotlib.pyplot.<genexpr>" "matplotlib.pyplot.<listcomp>"; label = "matplotlib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_glob" { "glob.<module>"; label = "glob"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_shlex" { "shlex.<module>" "shlex.shlex"; label = "shlex"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pyparsing" { "pyparsing.<module>" "pyparsing.<listcomp>" "pyparsing.<genexpr>" "pyparsing.ParseBaseException" "pyparsing.ParseException" "pyparsing.ParseFatalException" "pyparsing.ParseSyntaxException" "pyparsing.RecursiveGrammarException" "pyparsing._ParseResultsWithOffset" "pyparsing.ParseResults" "pyparsing.ParserElement" "pyparsing._UnboundedCache" "pyparsing._FifoCache" "pyparsing._PendingSkip" "pyparsing.Token" "pyparsing.Empty" "pyparsing.NoMatch" "pyparsing.Literal" "pyparsing._SingleCharLiteral" "pyparsing.Keyword" "pyparsing.CaselessLiteral" "pyparsing.CaselessKeyword" "pyparsing.CloseMatch" "pyparsing.Word" "pyparsing._WordRegex" "pyparsing.Char" "pyparsing.Regex" "pyparsing.QuotedString" "pyparsing.CharsNotIn" "pyparsing.White" "pyparsing._PositionToken" "pyparsing.GoToColumn" "pyparsing.LineStart" "pyparsing.LineEnd" "pyparsing.StringStart" "pyparsing.StringEnd" "pyparsing.WordStart" "pyparsing.WordEnd" "pyparsing.ParseExpression" "pyparsing.And" "pyparsing._ErrorStop" "pyparsing.Or" "pyparsing.MatchFirst" "pyparsing.Each" "pyparsing.ParseElementEnhance" "pyparsing.FollowedBy" "pyparsing.PrecededBy" "pyparsing.NotAny" "pyparsing._MultipleMatch" "pyparsing.OneOrMore" "pyparsing.ZeroOrMore" "pyparsing._NullToken" "pyparsing.Optional" "pyparsing.SkipTo" "pyparsing.Forward" "pyparsing.TokenConverter" "pyparsing.Combine" "pyparsing.Group" "pyparsing.Dict" "pyparsing.Suppress" "pyparsing.OnlyOnce" "pyparsing.Empty.__init__" "pyparsing.Empty.setName" "pyparsing.LineStart.__init__" "pyparsing.LineStart.setName" "pyparsing.LineEnd.__init__" "pyparsing.LineEnd.setWhitespaceChars" "pyparsing.LineEnd.setName" "pyparsing.StringStart.__init__" "pyparsing.StringStart.setName" "pyparsing.StringEnd.__init__" "pyparsing.StringEnd.setName" "pyparsing.Word.__init__" "pyparsing.Word.__str__" "pyparsing.charsAsStr" "pyparsing.Word.setParseAction" "pyparsing._trim_arity" "pyparsing.extract_stack" "pyparsing.Regex.__init__" "pyparsing.Regex.__str__" "pyparsing.Regex.setParseAction" "pyparsing.Word.__or__" "pyparsing.MatchFirst.__init__" "pyparsing.MatchFirst.__or__" "pyparsing.CharsNotIn.__init__" "pyparsing.CharsNotIn.__str__" "pyparsing.Suppress.__init__" "pyparsing.Literal.__init__" "pyparsing.Suppress.setWhitespaceChars" "pyparsing.MatchFirst.__add__" "pyparsing.And.__init__" "pyparsing.MatchFirst.__eq__" "pyparsing.Suppress.__eq__" "pyparsing.And.setWhitespaceChars" "pyparsing.And.__add__" "pyparsing.And.__eq__" "pyparsing.Group.__init__" "pyparsing.Group.setWhitespaceChars" "pyparsing.Optional.__init__" "pyparsing.Optional.setWhitespaceChars" "pyparsing.Optional.setResultsName" "pyparsing.Optional._setResultsName" "pyparsing.Optional.copy" "pyparsing._SingleCharLiteral.__add__" "pyparsing._SingleCharLiteral.__eq__" "pyparsing.Optional.__eq__" "pyparsing.Group.__or__" "pyparsing.OneOrMore.__init__" "pyparsing.OneOrMore.setWhitespaceChars" "pyparsing.OneOrMore.stopOn" "pyparsing.Group.setResultsName" "pyparsing.Group._setResultsName" "pyparsing.Group.copy" "pyparsing.Group.__eq__" "pyparsing.tokenMap" "pyparsing.Regex.__add__" "pyparsing.Regex.__eq__" "pyparsing.Combine.__init__" "pyparsing.Combine.setWhitespaceChars" "pyparsing.Combine.leaveWhitespace" "pyparsing.And.copy" "pyparsing.Regex.copy" "pyparsing._SingleCharLiteral.copy" "pyparsing.And.leaveWhitespace" "pyparsing.Regex.leaveWhitespace" "pyparsing._SingleCharLiteral.leaveWhitespace" "pyparsing.Combine.setName" "pyparsing.And.__or__" "pyparsing.MatchFirst.copy" "pyparsing.MatchFirst.leaveWhitespace" "pyparsing.Combine.copy" "pyparsing.Combine.__eq__" "pyparsing.srange" "pyparsing.And.parseString" "pyparsing.resetCache" "pyparsing.And.streamline" "pyparsing._SingleCharLiteral.streamline" "pyparsing.Optional.streamline" "pyparsing.And.__str__" "pyparsing._SingleCharLiteral.__str__" "pyparsing.Optional.__str__" "pyparsing.Group.streamline" "pyparsing.OneOrMore.streamline" "pyparsing.MatchFirst.streamline" "pyparsing.Word.streamline" "pyparsing.Regex.streamline" "pyparsing.MatchFirst.__str__" "pyparsing.CharsNotIn.streamline" "pyparsing.Suppress.streamline" "pyparsing.Suppress.__str__" "pyparsing.Group.__str__" "pyparsing.OneOrMore.__str__" "pyparsing.And._parseNoCache" "pyparsing.And.preParse" "pyparsing.And.parseImpl" "pyparsing._SingleCharLiteral._parseNoCache" "pyparsing._SingleCharLiteral.parseImpl" "pyparsing._SingleCharLiteral.postParse" "pyparsing.__new__" "pyparsing.ParseResults.__init__" "pyparsing.Optional._parseNoCache" "pyparsing.Optional.preParse" "pyparsing.Optional.parseImpl" "pyparsing.ParseException.__init__" "pyparsing.Optional.postParse" "pyparsing.ParseResults.__bool__" "pyparsing.ParseResults.haskeys" "pyparsing.Group._parseNoCache" "pyparsing.Group.parseImpl" "pyparsing.OneOrMore._parseNoCache" "pyparsing.OneOrMore.parseImpl" "pyparsing.MatchFirst._parseNoCache" "pyparsing.MatchFirst.parseImpl" "pyparsing.Group.preParse" "pyparsing.Word._parseNoCache" "pyparsing.Word.preParse" "pyparsing.Word.parseImpl" "pyparsing.Regex._parseNoCache" "pyparsing.Regex.preParse" "pyparsing.Regex.parseImpl" "pyparsing.Regex.postParse" "pyparsing.wrapper" "pyparsing.<lambda>" "pyparsing.ParseResults.__getitem__" "pyparsing.MatchFirst.postParse" "pyparsing.Suppress._parseNoCache" "pyparsing.Suppress.preParse" "pyparsing.Suppress.parseImpl" "pyparsing.Suppress.postParse" "pyparsing.ParseResults.__iadd__" "pyparsing.And.postParse" "pyparsing.Group.postParse" "pyparsing.CharsNotIn._parseNoCache" "pyparsing.CharsNotIn.preParse" "pyparsing.CharsNotIn.parseImpl" "pyparsing.OneOrMore.postParse" "pyparsing._ParseResultsWithOffset.__init__" "pyparsing.ParseResults.__setitem__" "pyparsing._ParseResultsWithOffset.__getitem__" "pyparsing._SingleCharLiteral.preParse" "pyparsing.ParseResults.__getattr__" "pyparsing.ParseResults.__iter__" "pyparsing._escapeRegexRangeChars" "pyparsing._WordRegex.setName" "pyparsing.makeHTMLTags" "pyparsing._makeTags" "pyparsing.Combine.setParseAction" "pyparsing.Combine.__or__" "pyparsing._WordRegex.__call__" "pyparsing._WordRegex._setResultsName" "pyparsing._WordRegex.copy" "pyparsing.Suppress.__add__" "pyparsing._WordRegex.__eq__" "pyparsing._WordRegex.setParseAction" "pyparsing._WordRegex.__add__" "pyparsing.ZeroOrMore.__init__" "pyparsing.ZeroOrMore.setWhitespaceChars" "pyparsing.ZeroOrMore.stopOn" "pyparsing.Dict.__init__" "pyparsing.Dict.setWhitespaceChars" "pyparsing.Dict.__eq__" "pyparsing.Optional.__call__" "pyparsing.Optional.setParseAction" "pyparsing.Literal.__add__" "pyparsing.Literal.__eq__" "pyparsing.And.setName" "pyparsing.And.addParseAction" "pyparsing.Combine.__call__" "pyparsing.Combine._setResultsName" "pyparsing.SkipTo.__init__" "pyparsing.SkipTo.setWhitespaceChars" "pyparsing.Combine.__str__" "pyparsing.Regex.setName" "pyparsing.Literal.copy" "pyparsing.Literal.leaveWhitespace" "pyparsing._SingleCharLiteral.__invert__" "pyparsing.NotAny.__init__" "pyparsing.NotAny.setWhitespaceChars" "pyparsing.Word.__add__" "pyparsing.Word.__eq__" "pyparsing.NotAny.__eq__" "pyparsing.LineEnd.__invert__" "pyparsing.LineEnd.__str__" "pyparsing.OneOrMore.copy" "pyparsing.OneOrMore.leaveWhitespace" "pyparsing._WordRegex.leaveWhitespace" "pyparsing.Optional.leaveWhitespace" "pyparsing.Word.copy" "pyparsing.NotAny.copy" "pyparsing.Word.leaveWhitespace" "pyparsing.NotAny.leaveWhitespace" "pyparsing.LineEnd.copy" "pyparsing.LineEnd.leaveWhitespace" "pyparsing.Combine.streamline" "pyparsing._WordRegex.streamline" "pyparsing.NotAny.streamline" "pyparsing.NotAny.__str__" "pyparsing.LineEnd.streamline" "pyparsing._WordRegex.__str__" "pyparsing.delimitedList" "pyparsing.Optional.__add__" "pyparsing.ZeroOrMore.__eq__" "pyparsing.pyparsing_common" "pyparsing.Regex.__call__" "pyparsing.Optional.suppress" "pyparsing.MatchFirst.setName" "pyparsing.MatchFirst.addParseAction" "pyparsing.Regex.__or__" "pyparsing.Regex.__radd__" "pyparsing.And.__mul__" "pyparsing.And.makeOptionalList" "pyparsing.And.addCondition" "pyparsing.conditionAsParseAction" "pyparsing.And.suppress" "pyparsing.Combine.suppress" "pyparsing.Suppress.__or__" "pyparsing.NotAny.__add__" "pyparsing.White.__init__" "pyparsing.White.<genexpr>" "pyparsing.White.setWhitespaceChars" "pyparsing.White.copy" "pyparsing.White.leaveWhitespace" "pyparsing.White.streamline" "pyparsing.White.__str__" "pyparsing._lazyclassproperty" "pyparsing.unicode_set" "pyparsing._lazyclassproperty.__init__" "pyparsing.pyparsing_unicode" "pyparsing.Latin1" "pyparsing.LatinA" "pyparsing.LatinB" "pyparsing.Greek" "pyparsing.Cyrillic" "pyparsing.Chinese" "pyparsing.Japanese" "pyparsing.Kanji" "pyparsing.Hiragana" "pyparsing.Katakana" "pyparsing.Korean" "pyparsing.CJK" "pyparsing.Thai" "pyparsing.Arabic" "pyparsing.Hebrew" "pyparsing.Devanagari" "pyparsing.pyparsing_test" "pyparsing.reset_pyparsing_context" "pyparsing.TestParseResultsAsserts" "pyparsing.And.setParseAction" "pyparsing.MatchFirst.setParseAction" "pyparsing.StringEnd.__eq__" "pyparsing.ZeroOrMore.streamline" "pyparsing.ZeroOrMore.__str__" "pyparsing.StringEnd.streamline" "pyparsing.StringEnd.__str__" "pyparsing.ZeroOrMore._parseNoCache" "pyparsing.ZeroOrMore.preParse" "pyparsing.ZeroOrMore.parseImpl" "pyparsing.ZeroOrMore.postParse" "pyparsing.StringEnd._parseNoCache" "pyparsing.StringEnd.preParse" "pyparsing.StringEnd.parseImpl" "pyparsing.StringEnd.postParse" "pyparsing.ParseResults.__len__" "pyparsing.enablePackrat" "pyparsing._FifoCache.__init__" "pyparsing._FifoCache.clear" "pyparsing.And._parseCache" "pyparsing._FifoCache.get" "pyparsing.And.__hash__" "pyparsing.Optional._parseCache" "pyparsing.Optional.__hash__" "pyparsing.Regex._parseCache" "pyparsing.Regex.__hash__" "pyparsing.ParseResults.copy" "pyparsing._FifoCache.set" "pyparsing.ZeroOrMore._parseCache" "pyparsing.ZeroOrMore.__hash__" "pyparsing._SingleCharLiteral._parseCache" "pyparsing._SingleCharLiteral.__hash__" "pyparsing.StringEnd._parseCache" "pyparsing.StringEnd.__hash__" "pyparsing.MatchFirst._parseCache" "pyparsing.MatchFirst.__hash__" "pyparsing.Suppress._parseCache" "pyparsing.Suppress.__hash__"; label = "pyparsing"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_traceback" { "traceback.extract_stack" "traceback.extract" "traceback.walk_stack" "traceback.FrameSummary.__init__" "traceback.FrameSummary.line" "traceback.FrameSummary.__getitem__"; label = "traceback"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_linecache" { "linecache.lazycache" "linecache.checkcache" "linecache.getline" "linecache.getlines" "linecache.updatecache"; label = "linecache"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_tokenize" { "tokenize.open" "tokenize.detect_encoding" "tokenize.read_or_stop" "tokenize.find_cookie" "tokenize._get_normal_name"; label = "tokenize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_encodings" { "encodings.search_function" "encodings.normalize_encoding" "encodings.utf_8.getregentry" "encodings.ascii.IncrementalDecoder.decode"; label = "encodings"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_codecs" { "codecs.__new__" "codecs.IncrementalDecoder.__init__" "codecs.IncrementalDecoder.decode"; label = "codecs"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cycler" { "cycler.<module>" "cycler.Cycler" "cycler.cycler" "cycler._cycler" "cycler._from_iter" "cycler.Cycler.__init__" "cycler._process_keys" "cycler.<genexpr>" "cycler.Cycler.keys" "cycler.Cycler.change_key" "cycler.Cycler.by_key" "cycler.Cycler.__iter__"; label = "cycler"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ExecInfo" { "_ExecInfo"; label = "_ExecInfo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_genericpath" { "genericpath.exists" "genericpath.isdir"; label = "genericpath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__bootlocale" { "_bootlocale.getpreferredencoding"; label = "_bootlocale"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__XYPair" { "_XYPair"; label = "_XYPair"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_linspace" { "linspace"; label = "linspace"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_result_type" { "result_type"; label = "result_type"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ndim" { "ndim"; label = "ndim"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_any" { "any"; label = "any"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_can_cast" { "can_cast"; label = "can_cast"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_CharMetrics" { "CharMetrics"; label = "CharMetrics"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_CompositePart" { "CompositePart"; label = "CompositePart"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Page" { "Page"; label = "Page"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Text" { "Text"; label = "Text"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Box" { "Box"; label = "Box"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Font" { "Font"; label = "Font"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__PSResult" { "_PSResult"; label = "_PSResult"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__PDFResult" { "_PDFResult"; label = "_PDFResult"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_PIL" { "PIL.<module>" "PIL._version.<module>" "PIL._Deprecated_Version" "PIL.UnidentifiedImageError" "PIL.Image.<module>" "PIL.ImageMode.<module>" "PIL.ImageMode.ModeDescriptor" "PIL.TiffTags.<module>" "PIL.TiffTags.TagInfo" "PIL.TiffTags._populate" "PIL.TiffTags.__new__" "PIL._binary.<module>" "PIL._util.<module>" "PIL._util.deferred_error" "PIL.Image.DecompressionBombWarning" "PIL.Image.DecompressionBombError" "PIL.Image._E" "PIL.Image.Image" "PIL.Image.ImagePointHandler" "PIL.Image.ImageTransformHandler" "PIL.Image._apply_env_variables" "PIL.Image.Exif"; label = "PIL"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_fnmatch" { "fnmatch.translate"; label = "fnmatch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_uuid" { "uuid.<module>" "uuid.UUID" "uuid.UUID.__init__"; label = "uuid"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__NamespacePath" { "_NamespacePath.__iter__" "_NamespacePath._recalculate" "_NamespacePath._get_parent_path" "_NamespacePath._find_parent_path_names"; label = "_NamespacePath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_mpl_toolkits" { "mpl_toolkits.mplot3d.<module>" "mpl_toolkits.mplot3d.axes3d.<module>" "mpl_toolkits.mplot3d.art3d.<module>" "mpl_toolkits.mplot3d.proj3d.<module>" "mpl_toolkits.mplot3d.art3d.Text3D" "mpl_toolkits.mplot3d.art3d.Line3D" "mpl_toolkits.mplot3d.art3d.Line3DCollection" "mpl_toolkits.mplot3d.art3d.Patch3D" "mpl_toolkits.mplot3d.art3d.PathPatch3D" "mpl_toolkits.mplot3d.art3d.Patch3DCollection" "mpl_toolkits.mplot3d.art3d.Path3DCollection" "mpl_toolkits.mplot3d.art3d.Poly3DCollection" "mpl_toolkits.mplot3d.axis3d.<module>" "mpl_toolkits.mplot3d.axis3d.Axis" "mpl_toolkits.mplot3d.axis3d.XAxis" "mpl_toolkits.mplot3d.axis3d.YAxis" "mpl_toolkits.mplot3d.axis3d.ZAxis" "mpl_toolkits.mplot3d.axes3d.Axes3D"; label = "mpl_toolkits"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_xml" { "xml.etree.ElementTree.<module>" "xml.etree.ElementPath.<module>" "xml.etree.ElementPath._SelectorContext" "xml.etree.ElementTree.ParseError" "xml.etree.ElementTree.Element" "xml.etree.ElementTree.QName" "xml.etree.ElementTree.ElementTree" "xml.etree.ElementTree._ListDataStream" "xml.etree.ElementTree.XMLPullParser" "xml.etree.ElementTree.TreeBuilder" "xml.etree.ElementTree.XMLParser"; label = "xml"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__TagInfo" { "_TagInfo"; label = "_TagInfo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_urllib" { "urllib.parse.urlparse" "urllib.parse._coerce_args" "urllib.parse.urlsplit" "urllib.parse._checknetloc" "urllib.parse._noop"; label = "urllib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_all" { "all"; label = "all"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_atleast_2d" { "atleast_2d"; label = "atleast_2d"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_multiprocessing" { "multiprocessing.<module>" "multiprocessing.context.<module>" "multiprocessing.process.<module>" "multiprocessing.process.BaseProcess" "multiprocessing.process.AuthenticationString" "multiprocessing.process._MainProcess" "multiprocessing.process._MainProcess.__init__" "multiprocessing.reduction.<module>" "multiprocessing.reduction.ForkingPickler" "multiprocessing.reduction._C" "multiprocessing.reduction.register" "multiprocessing.reduction.AbstractReducer" "multiprocessing.context.ProcessError" "multiprocessing.context.BufferTooShort" "multiprocessing.context.TimeoutError" "multiprocessing.context.AuthenticationError" "multiprocessing.context.BaseContext" "multiprocessing.context.Process" "multiprocessing.context.DefaultContext" "multiprocessing.context.<genexpr>" "multiprocessing.context.ForkProcess" "multiprocessing.context.SpawnProcess" "multiprocessing.context.ForkServerProcess" "multiprocessing.context.ForkContext" "multiprocessing.context.SpawnContext" "multiprocessing.context.ForkServerContext" "multiprocessing.context.DefaultContext.__init__" "multiprocessing.<genexpr>" "multiprocessing.context.DefaultContext.reducer" "multiprocessing.context.DefaultContext.Pool" "multiprocessing.pool.<module>" "multiprocessing.util.<module>" "multiprocessing.util.Finalize" "multiprocessing.util.ForkAwareThreadLock" "multiprocessing.util.ForkAwareLocal" "multiprocessing.pool.RemoteTraceback" "multiprocessing.pool.ExceptionWithTraceback" "multiprocessing.pool.MaybeEncodingError" "multiprocessing.pool.Pool" "multiprocessing.pool.ApplyResult" "multiprocessing.pool.MapResult" "multiprocessing.pool.IMapIterator" "multiprocessing.pool.IMapUnorderedIterator" "multiprocessing.pool.ThreadPool" "multiprocessing.context.DefaultContext.get_context" "multiprocessing.pool.Pool.__init__" "multiprocessing.pool.Pool._setup_queues" "multiprocessing.context.ForkContext.SimpleQueue" "multiprocessing.queues.<module>" "multiprocessing.connection.<module>" "multiprocessing.connection._ConnectionBase" "multiprocessing.connection.Connection" "multiprocessing.connection.Listener" "multiprocessing.connection.SocketListener" "multiprocessing.connection.ConnectionWrapper" "multiprocessing.connection.XmlListener" "multiprocessing.queues.Queue" "multiprocessing.queues.JoinableQueue" "multiprocessing.queues.SimpleQueue" "multiprocessing.context.ForkContext.get_context" "multiprocessing.queues.SimpleQueue.__init__" "multiprocessing.connection.Pipe" "multiprocessing.connection.Connection.__init__" "multiprocessing.context.ForkContext.Lock" "multiprocessing.synchronize.<module>" "multiprocessing.synchronize.SemLock" "multiprocessing.synchronize.Semaphore" "multiprocessing.synchronize.BoundedSemaphore" "multiprocessing.synchronize.Lock" "multiprocessing.synchronize.RLock" "multiprocessing.synchronize.Condition" "multiprocessing.synchronize.Event" "multiprocessing.synchronize.Barrier" "multiprocessing.synchronize.Lock.__init__" "multiprocessing.context.ForkContext.get_start_method" "multiprocessing.synchronize._make_name" "multiprocessing.process.current_process" "multiprocessing.util.debug" "multiprocessing.synchronize.Lock._make_methods" "multiprocessing.util.register_after_fork" "multiprocessing.pool.Pool._repopulate_pool" "multiprocessing.pool.Pool.Process" "multiprocessing.process.ForkProcess.__init__" "multiprocessing.process.<genexpr>" "multiprocessing.process.ForkProcess.name" "multiprocessing.process.ForkProcess.daemon" "multiprocessing.process.ForkProcess.start" "multiprocessing.process._cleanup" "multiprocessing.context._Popen" "multiprocessing.popen_fork.<module>" "multiprocessing.popen_fork.Popen" "multiprocessing.popen_fork.Popen.__init__" "multiprocessing.util._flush_std_streams" "multiprocessing.popen_fork.Popen._launch" "multiprocessing.util.Finalize.__init__" "multiprocessing.popen_fork.Popen.poll" "multiprocessing.pool.Pool.map" "multiprocessing.pool.Pool._map_async" "multiprocessing.pool.MapResult.__init__" "multiprocessing.pool.MapResult.get" "multiprocessing.pool.MapResult.wait" "multiprocessing.pool.MapResult.ready" "multiprocessing.pool.Pool.close"; label = "multiprocessing"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_tempfile" { "tempfile._RandomNameSequence.__next__" "tempfile._RandomNameSequence.rng" "tempfile.<listcomp>"; label = "tempfile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_queue" { "queue.Queue.__init__" "queue.Queue._init" "queue.Queue.put" "queue.Queue._put"; label = "queue"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }

    // Nodes
    "__main__" [color = "#e5e5e5ff", label = "__main__\ncalls: 1\ntime: 0.000000s"];
    "<module>" [color = "#e549e0ff", label = "<module>\ncalls: 363\ntime: 54.028890s"];
    "_find_and_load" [color = "#a17fe5ff", label = "_find_and_load\ncalls: 569\ntime: 34.625635s"];
    "_ModuleLockManager.__init__" [color = "#e1e5e5ff", label = "_ModuleLockManager.__init__\ncalls: 569\ntime: 0.002940s"];
    "_ModuleLockManager.__enter__" [color = "#e1e5e5ff", label = "_ModuleLockManager.__enter__\ncalls: 569\ntime: 0.054480s"];
    "_get_module_lock" [color = "#dce4e5ff", label = "_get_module_lock\ncalls: 1262\ntime: 0.036653s"];
    "_ModuleLock.__init__" [color = "#e1e5e5ff", label = "_ModuleLock.__init__\ncalls: 572\ntime: 0.005900s"];
    "_ModuleLock.acquire" [color = "#dce4e5ff", label = "_ModuleLock.acquire\ncalls: 1262\ntime: 0.019903s"];
    "_find_and_load_unlocked" [color = "#a17fe5ff", label = "_find_and_load_unlocked\ncalls: 562\ntime: 34.500038s"];
    "_find_spec" [color = "#dfe5e5ff", label = "_find_spec\ncalls: 560\ntime: 0.656546s"];
    "_ImportLockContext.__enter__" [color = "#d9e3e5ff", label = "_ImportLockContext.__enter__\ncalls: 1707\ntime: 0.006278s"];
    "find_spec" [color = "#d8e3e5ff", label = "find_spec\ncalls: 1676\ntime: 0.549620s"];
    "_ImportLockContext.__exit__" [color = "#d9e3e5ff", label = "_ImportLockContext.__exit__\ncalls: 1707\ntime: 0.006746s"];
    "_get_spec" [color = "#e0e5e5ff", label = "_get_spec\ncalls: 559\ntime: 0.531682s"];
    "_path_importer_cache" [color = "#dee4e5ff", label = "_path_importer_cache\ncalls: 978\ntime: 0.027583s"];
    "_path_hooks" [color = "#e5e5e5ff", label = "_path_hooks\ncalls: 62\ntime: 0.018207s"];
    "path_hook_for_FileFinder" [color = "#e5e5e5ff", label = "path_hook_for_FileFinder\ncalls: 62\ntime: 0.015761s"];
    "_path_isdir" [color = "#e5e5e5ff", label = "_path_isdir\ncalls: 63\ntime: 0.003384s"];
    "_path_is_mode_type" [color = "#dfe5e5ff", label = "_path_is_mode_type\ncalls: 788\ntime: 0.041288s"];
    "_path_stat" [color = "#d6e2e5ff", label = "_path_stat\ncalls: 2145\ntime: 0.036246s"];
    "FileFinder.__init__" [color = "#e5e5e5ff", label = "FileFinder.__init__\ncalls: 62\ntime: 0.009698s"];
    "<genexpr>" [color = "#d3e1e5ff", label = "<genexpr>\ncalls: 2558\ntime: 0.009428s"];
    "FileFinder.find_spec" [color = "#dde4e5ff", label = "FileFinder.find_spec\ncalls: 904\ntime: 0.449167s"];
    "FileFinder._fill_cache" [color = "#e5e5e5ff", label = "FileFinder._fill_cache\ncalls: 62\ntime: 0.003016s"];
    "_relax_case" [color = "#dfe4e5ff", label = "_relax_case\ncalls: 904\ntime: 0.003047s"];
    "_path_join" [color = "#c3d6e5ff", label = "_path_join\ncalls: 4769\ntime: 0.127602s"];
    "<listcomp>" [color = "#c3d6e5ff", label = "<listcomp>\ncalls: 4769\ntime: 0.045713s"];
    "_verbose_message" [color = "#c1d4e5ff", label = "_verbose_message\ncalls: 5079\ntime: 0.021312s"];
    "_path_isfile" [color = "#e0e5e5ff", label = "_path_isfile\ncalls: 725\ntime: 0.050890s"];
    "FileFinder._get_spec" [color = "#e1e5e5ff", label = "FileFinder._get_spec\ncalls: 522\ntime: 0.046843s"];
    "SourceFileLoader.__init__" [color = "#e2e5e5ff", label = "SourceFileLoader.__init__\ncalls: 453\ntime: 0.002343s"];
    "spec_from_file_location" [color = "#e1e5e5ff", label = "spec_from_file_location\ncalls: 522\ntime: 0.025322s"];
    "ModuleSpec.__init__" [color = "#e1e5e5ff", label = "ModuleSpec.__init__\ncalls: 563\ntime: 0.006805s"];
    "_load_unlocked" [color = "#9e85e5ff", label = "_load_unlocked\ncalls: 525\ntime: 32.730782s"];
    "module_from_spec" [color = "#e1e5e5ff", label = "module_from_spec\ncalls: 524\ntime: 0.193126s"];
    "SourceFileLoader.create_module" [color = "#e2e5e5ff", label = "SourceFileLoader.create_module\ncalls: 453\ntime: 0.001579s"];
    "_new_module" [color = "#e2e5e5ff", label = "_new_module\ncalls: 453\ntime: 0.002114s"];
    "_init_module_attrs" [color = "#e1e5e5ff", label = "_init_module_attrs\ncalls: 524\ntime: 0.115189s"];
    "ModuleSpec.parent" [color = "#dee4e5ff", label = "ModuleSpec.parent\ncalls: 946\ntime: 0.005213s"];
    "ModuleSpec.has_location" [color = "#e1e5e5ff", label = "ModuleSpec.has_location\ncalls: 524\ntime: 0.001880s"];
    "ModuleSpec.cached" [color = "#dee4e5ff", label = "ModuleSpec.cached\ncalls: 975\ntime: 0.065983s"];
    "_get_cached" [color = "#e1e5e5ff", label = "_get_cached\ncalls: 522\ntime: 0.053127s"];
    "cache_from_source" [color = "#dee4e5ff", label = "cache_from_source\ncalls: 906\ntime: 0.083209s"];
    "_path_split" [color = "#dfe4e5ff", label = "_path_split\ncalls: 906\ntime: 0.007642s"];
    "_installed_safely.__init__" [color = "#e1e5e5ff", label = "_installed_safely.__init__\ncalls: 524\ntime: 0.002617s"];
    "_installed_safely.__enter__" [color = "#e1e5e5ff", label = "_installed_safely.__enter__\ncalls: 524\ntime: 0.002790s"];
    "SourceFileLoader.exec_module" [color = "#9b8ae5ff", label = "SourceFileLoader.exec_module\ncalls: 453\ntime: 30.941733s"];
    "SourceFileLoader.get_code" [color = "#e0e5e5ff", label = "SourceFileLoader.get_code\ncalls: 453\ntime: 0.461202s"];
    "SourceFileLoader._check_name_wrapper" [color = "#e2e5e5ff", label = "SourceFileLoader._check_name_wrapper\ncalls: 453\ntime: 0.010570s"];
    "SourceFileLoader.get_filename" [color = "#e2e5e5ff", label = "SourceFileLoader.get_filename\ncalls: 453\ntime: 0.001594s"];
    "SourceFileLoader.path_stats" [color = "#e2e5e5ff", label = "SourceFileLoader.path_stats\ncalls: 453\ntime: 0.011179s"];
    "SourceFileLoader.get_data" [color = "#e1e5e5ff", label = "SourceFileLoader.get_data\ncalls: 453\ntime: 0.125539s"];
    "_validate_bytecode_header" [color = "#e2e5e5ff", label = "_validate_bytecode_header\ncalls: 453\ntime: 0.052923s"];
    "_r_long" [color = "#dfe4e5ff", label = "_r_long\ncalls: 906\ntime: 0.005216s"];
    "_compile_bytecode" [color = "#e1e5e5ff", label = "_compile_bytecode\ncalls: 453\ntime: 0.140019s"];
    "_call_with_frames_removed" [color = "#ac72e5ff", label = "_call_with_frames_removed\ncalls: 725\ntime: 38.722631s"];
    "pandas.<module>" [color = "#dce4e5ff", label = "pandas.<module>\ncalls: 1\ntime: 3.286765s"];
    "numpy.<module>" [color = "#e2e5e5ff", label = "numpy.<module>\ncalls: 1\ntime: 1.200714s"];
    "numpy._globals.<module>" [color = "#e5e5e5ff", label = "numpy._globals.<module>\ncalls: 1\ntime: 0.000265s"];
    "numpy._globals.ModuleDeprecationWarning" [color = "#e5e5e5ff", label = "numpy._globals.ModuleDeprecationWarning\ncalls: 1\ntime: 0.000005s"];
    "numpy._globals.VisibleDeprecationWarning" [color = "#e5e5e5ff", label = "numpy._globals.VisibleDeprecationWarning\ncalls: 1\ntime: 0.000005s"];
    "numpy._globals._NoValueType" [color = "#e5e5e5ff", label = "numpy._globals._NoValueType\ncalls: 1\ntime: 0.000011s"];
    "numpy._globals.__new__" [color = "#e5e5e5ff", label = "numpy._globals.__new__\ncalls: 1\ntime: 0.000008s"];
    "_installed_safely.__exit__" [color = "#e1e5e5ff", label = "_installed_safely.__exit__\ncalls: 524\ntime: 0.044804s"];
    "_ModuleLockManager.__exit__" [color = "#e1e5e5ff", label = "_ModuleLockManager.__exit__\ncalls: 569\ntime: 0.017679s"];
    "_ModuleLock.release" [color = "#dce4e5ff", label = "_ModuleLock.release\ncalls: 1262\ntime: 0.015117s"];
    "cb" [color = "#e1e5e5ff", label = "cb\ncalls: 572\ntime: 0.005202s"];
    "_handle_fromlist" [color = "#c0d3e5ff", label = "_handle_fromlist\ncalls: 2973\ntime: 5.680944s"];
    "numpy.__config__.<module>" [color = "#e5e5e5ff", label = "numpy.__config__.<module>\ncalls: 1\ntime: 0.000190s"];
    "posixpath.dirname" [color = "#e5e5e5ff", label = "posixpath.dirname\ncalls: 4\ntime: 0.000166s"];
    "posixpath._get_sep" [color = "#e4e5e5ff", label = "posixpath._get_sep\ncalls: 209\ntime: 0.000926s"];
    "posixpath.join" [color = "#e4e5e5ff", label = "posixpath.join\ncalls: 106\ntime: 0.003697s"];
    "numpy.version.<module>" [color = "#e5e5e5ff", label = "numpy.version.<module>\ncalls: 1\ntime: 0.000010s"];
    "_lock_unlock_module" [color = "#e0e5e5ff", label = "_lock_unlock_module\ncalls: 693\ntime: 0.057166s"];
    "numpy._distributor_init.<module>" [color = "#e5e5e5ff", label = "numpy._distributor_init.<module>\ncalls: 1\ntime: 0.000005s"];
    "numpy.core.<module>" [color = "#e3e5e5ff", label = "numpy.core.<module>\ncalls: 1\ntime: 0.635071s"];
    "collections.abc._Environ.__contains__" [color = "#e5e5e5ff", label = "collections.abc._Environ.__contains__\ncalls: 6\ntime: 0.000400s"];
    "os._Environ.__getitem__" [color = "#e5e5e5ff", label = "os._Environ.__getitem__\ncalls: 25\ntime: 0.001001s"];
    "os.encode" [color = "#e5e5e5ff", label = "os.encode\ncalls: 31\ntime: 0.000182s"];
    "os._Environ.__setitem__" [color = "#e5e5e5ff", label = "os._Environ.__setitem__\ncalls: 2\ntime: 0.000096s"];
    "numpy.core.multiarray.<module>" [color = "#e5e5e5ff", label = "numpy.core.multiarray.<module>\ncalls: 1\ntime: 0.157077s"];
    "numpy.core.overrides.<module>" [color = "#e5e5e5ff", label = "numpy.core.overrides.<module>\ncalls: 1\ntime: 0.139441s"];
    "ExtensionFileLoader.__init__" [color = "#e5e5e5ff", label = "ExtensionFileLoader.__init__\ncalls: 69\ntime: 0.000345s"];
    "ExtensionFileLoader.create_module" [color = "#e4e5e5ff", label = "ExtensionFileLoader.create_module\ncalls: 69\ntime: 0.048295s"];
    "ExtensionFileLoader.exec_module" [color = "#e0e5e5ff", label = "ExtensionFileLoader.exec_module\ncalls: 69\ntime: 1.502040s"];
    "numpy.compat.<module>" [color = "#e5e5e5ff", label = "numpy.compat.<module>\ncalls: 1\ntime: 0.114562s"];
    "numpy.compat._inspect.<module>" [color = "#e5e5e5ff", label = "numpy.compat._inspect.<module>\ncalls: 1\ntime: 0.000069s"];
    "numpy.compat.py3k.<module>" [color = "#e5e5e5ff", label = "numpy.compat.py3k.<module>\ncalls: 1\ntime: 0.102011s"];
    "pathlib.<module>" [color = "#e5e5e5ff", label = "pathlib.<module>\ncalls: 1\ntime: 0.085171s"];
    "ntpath.<module>" [color = "#e5e5e5ff", label = "ntpath.<module>\ncalls: 1\ntime: 0.048527s"];
    "pathlib._Flavour" [color = "#e5e5e5ff", label = "pathlib._Flavour\ncalls: 1\ntime: 0.000021s"];
    "pathlib._WindowsFlavour" [color = "#e5e5e5ff", label = "pathlib._WindowsFlavour\ncalls: 1\ntime: 0.012558s"];
    "pathlib.<genexpr>" [color = "#e5e5e5ff", label = "pathlib.<genexpr>\ncalls: 54\ntime: 0.000458s"];
    "pathlib.<setcomp>" [color = "#e5e5e5ff", label = "pathlib.<setcomp>\ncalls: 2\ntime: 0.000078s"];
    "pathlib._PosixFlavour" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour\ncalls: 1\ntime: 0.000047s"];
    "pathlib._WindowsFlavour.__init__" [color = "#e5e5e5ff", label = "pathlib._WindowsFlavour.__init__\ncalls: 1\ntime: 0.000011s"];
    "pathlib._PosixFlavour.__init__" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.__init__\ncalls: 1\ntime: 0.000009s"];
    "pathlib._Accessor" [color = "#e5e5e5ff", label = "pathlib._Accessor\ncalls: 1\ntime: 0.000011s"];
    "pathlib._NormalAccessor" [color = "#e5e5e5ff", label = "pathlib._NormalAccessor\ncalls: 1\ntime: 0.003238s"];
    "pathlib._wrap_strfunc" [color = "#e5e5e5ff", label = "pathlib._wrap_strfunc\ncalls: 10\ntime: 0.002259s"];
    "functools.wraps" [color = "#dfe4e5ff", label = "functools.wraps\ncalls: 912\ntime: 0.005141s"];
    "functools.update_wrapper" [color = "#dee4e5ff", label = "functools.update_wrapper\ncalls: 936\ntime: 0.036515s"];
    "pathlib._wrap_binary_strfunc" [color = "#e5e5e5ff", label = "pathlib._wrap_binary_strfunc\ncalls: 2\ntime: 0.000381s"];
    "functools.lru_cache" [color = "#e5e5e5ff", label = "functools.lru_cache\ncalls: 24\ntime: 0.000195s"];
    "functools.decorating_function" [color = "#e5e5e5ff", label = "functools.decorating_function\ncalls: 24\ntime: 0.001546s"];
    "pathlib._Selector" [color = "#e5e5e5ff", label = "pathlib._Selector\ncalls: 1\ntime: 0.000016s"];
    "pathlib._TerminatingSelector" [color = "#e5e5e5ff", label = "pathlib._TerminatingSelector\ncalls: 1\ntime: 0.000011s"];
    "pathlib._PreciseSelector" [color = "#e5e5e5ff", label = "pathlib._PreciseSelector\ncalls: 1\ntime: 0.000014s"];
    "pathlib._WildcardSelector" [color = "#e5e5e5ff", label = "pathlib._WildcardSelector\ncalls: 1\ntime: 0.000014s"];
    "pathlib._RecursiveWildcardSelector" [color = "#e5e5e5ff", label = "pathlib._RecursiveWildcardSelector\ncalls: 1\ntime: 0.000016s"];
    "pathlib._PathParents" [color = "#e5e5e5ff", label = "pathlib._PathParents\ncalls: 1\ntime: 0.000024s"];
    "abc.__new__" [color = "#e3e5e5ff", label = "abc.__new__\ncalls: 256\ntime: 0.092788s"];
    "abc.<setcomp>" [color = "#e3e5e5ff", label = "abc.<setcomp>\ncalls: 256\ntime: 0.015747s"];
    "_weakrefset.WeakSet.__init__" [color = "#dfe5e5ff", label = "_weakrefset.WeakSet.__init__\ncalls: 854\ntime: 0.010165s"];
    "pathlib.PurePath" [color = "#e5e5e5ff", label = "pathlib.PurePath\ncalls: 1\ntime: 0.000155s"];
    "abc.register" [color = "#e5e5e5ff", label = "abc.register\ncalls: 15\ntime: 0.009584s"];
    "abc.__subclasscheck__" [color = "#e1e5e5ff", label = "abc.__subclasscheck__\ncalls: 394\ntime: 0.262429s"];
    "_weakrefset.WeakSet.__contains__" [color = "#dce4e5ff", label = "_weakrefset.WeakSet.__contains__\ncalls: 1260\ntime: 0.008487s"];
    "os.__subclasshook__" [color = "#e5e5e5ff", label = "os.__subclasshook__\ncalls: 1\ntime: 0.000010s"];
    "_weakrefset.WeakSet.add" [color = "#e3e5e5ff", label = "_weakrefset.WeakSet.add\ncalls: 270\ntime: 0.001896s"];
    "pathlib.PurePosixPath" [color = "#e5e5e5ff", label = "pathlib.PurePosixPath\ncalls: 1\ntime: 0.000016s"];
    "pathlib.PureWindowsPath" [color = "#e5e5e5ff", label = "pathlib.PureWindowsPath\ncalls: 1\ntime: 0.000016s"];
    "pathlib.Path" [color = "#e5e5e5ff", label = "pathlib.Path\ncalls: 1\ntime: 0.000144s"];
    "pathlib.PosixPath" [color = "#e5e5e5ff", label = "pathlib.PosixPath\ncalls: 1\ntime: 0.000014s"];
    "pathlib.WindowsPath" [color = "#e5e5e5ff", label = "pathlib.WindowsPath\ncalls: 1\ntime: 0.000019s"];
    "numpy.compat.py3k.contextlib_nullcontext" [color = "#e5e5e5ff", label = "numpy.compat.py3k.contextlib_nullcontext\ncalls: 1\ntime: 0.000009s"];
    "collections.abc._Environ.get" [color = "#e5e5e5ff", label = "collections.abc._Environ.get\ncalls: 11\ntime: 0.000620s"];
    "collections.namedtuple" [color = "#e5e5e5ff", label = "collections.namedtuple\ncalls: 22\ntime: 0.055471s"];
    "collections.<genexpr>" [color = "#e3e5e5ff", label = "collections.<genexpr>\ncalls: 222\ntime: 0.001268s"];
    "ArgSpec" [color = "#e5e5e5ff", label = "ArgSpec\ncalls: 1\ntime: 0.000026s"];
    "textwrap.dedent" [color = "#e1e5e5ff", label = "textwrap.dedent\ncalls: 500\ntime: 0.184172s"];
    "re.sub" [color = "#e3e5e5ff", label = "re.sub\ncalls: 336\ntime: 0.027407s"];
    "re._compile" [color = "#d0dfe5ff", label = "re._compile\ncalls: 2438\ntime: 1.277237s"];
    "sre_compile.isstring" [color = "#e2e5e5ff", label = "sre_compile.isstring\ncalls: 372\ntime: 0.001424s"];
    "sre_compile.compile" [color = "#e0e5e5ff", label = "sre_compile.compile\ncalls: 186\ntime: 1.210569s"];
    "sre_parse.parse" [color = "#e2e5e5ff", label = "sre_parse.parse\ncalls: 186\ntime: 0.760064s"];
    "sre_parse.Tokenizer.__init__" [color = "#e4e5e5ff", label = "sre_parse.Tokenizer.__init__\ncalls: 189\ntime: 0.006751s"];
    "sre_parse.Tokenizer.__next" [color = "#bed1e5ff", label = "sre_parse.Tokenizer.__next\ncalls: 5435\ntime: 0.056391s"];
    "sre_parse.Pattern.__init__" [color = "#e4e5e5ff", label = "sre_parse.Pattern.__init__\ncalls: 186\ntime: 0.001374s"];
    "sre_parse._parse_sub" [color = "#dfe5e5ff", label = "sre_parse._parse_sub\ncalls: 428\ntime: 1.049557s"];
    "sre_parse.Tokenizer.tell" [color = "#dbe4e5ff", label = "sre_parse.Tokenizer.tell\ncalls: 1385\ntime: 0.005224s"];
    "sre_parse._parse" [color = "#dfe4e5ff", label = "sre_parse._parse\ncalls: 485\ntime: 1.002726s"];
    "sre_parse.SubPattern.__init__" [color = "#dee4e5ff", label = "sre_parse.SubPattern.__init__\ncalls: 1004\ntime: 0.007723s"];
    "sre_parse.Tokenizer.get" [color = "#c5d7e5ff", label = "sre_parse.Tokenizer.get\ncalls: 4477\ntime: 0.125736s"];
    "sre_parse.Tokenizer.match" [color = "#d2e0e5ff", label = "sre_parse.Tokenizer.match\ncalls: 2642\ntime: 0.027304s"];
    "sre_parse._parse_flags" [color = "#e4e5e5ff", label = "sre_parse._parse_flags\ncalls: 85\ntime: 0.005345s"];
    "sre_parse.SubPattern.__len__" [color = "#d9e3e5ff", label = "sre_parse.SubPattern.__len__\ncalls: 1699\ntime: 0.005886s"];
    "sre_parse.SubPattern.append" [color = "#d6e2e5ff", label = "sre_parse.SubPattern.append\ncalls: 2082\ntime: 0.007537s"];
    "sre_parse.fix_flags" [color = "#e4e5e5ff", label = "sre_parse.fix_flags\ncalls: 186\ntime: 0.011852s"];
    "sre_compile._code" [color = "#e2e5e5ff", label = "sre_compile._code\ncalls: 186\ntime: 0.429483s"];
    "sre_compile._compile_info" [color = "#e3e5e5ff", label = "sre_compile._compile_info\ncalls: 186\ntime: 0.080150s"];
    "sre_parse.SubPattern.getwidth" [color = "#d9e3e5ff", label = "sre_parse.SubPattern.getwidth\ncalls: 1670\ntime: 0.098990s"];
    "sre_compile._get_literal_prefix" [color = "#e3e5e5ff", label = "sre_compile._get_literal_prefix\ncalls: 213\ntime: 0.007900s"];
    "sre_compile._get_charset_prefix" [color = "#e4e5e5ff", label = "sre_compile._get_charset_prefix\ncalls: 154\ntime: 0.005387s"];
    "sre_compile._compile" [color = "#dce4e5ff", label = "sre_compile._compile\ncalls: 1000\ntime: 0.812120s"];
    "sre_parse.Pattern.groups" [color = "#e0e5e5ff", label = "sre_parse.Pattern.groups\ncalls: 764\ntime: 0.002669s"];
    "enum.RegexFlag.__and__" [color = "#dce4e5ff", label = "enum.RegexFlag.__and__\ncalls: 1214\ntime: 0.101309s"];
    "enum.__call__" [color = "#c4d7e5ff", label = "enum.__call__\ncalls: 4599\ntime: 0.138127s"];
    "enum.__new__" [color = "#c4d7e5ff", label = "enum.__new__\ncalls: 4601\ntime: 0.053308s"];
    "numpy.core.overrides.array_function_from_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.overrides.array_function_from_dispatcher\ncalls: 23\ntime: 0.000137s"];
    "numpy.core.overrides.decorator" [color = "#e1e5e5ff", label = "numpy.core.overrides.decorator\ncalls: 423\ntime: 0.291638s"];
    "numpy.core.overrides.array_function_dispatch" [color = "#e3e5e5ff", label = "numpy.core.overrides.array_function_dispatch\ncalls: 316\ntime: 0.002446s"];
    "os._Environ.__delitem__" [color = "#e5e5e5ff", label = "os._Environ.__delitem__\ncalls: 2\ntime: 0.000061s"];
    "numpy.core.umath.<module>" [color = "#e5e5e5ff", label = "numpy.core.umath.<module>\ncalls: 1\ntime: 0.000287s"];
    "numpy.core.numerictypes.<module>" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.<module>\ncalls: 1\ntime: 0.019371s"];
    "numpy.core._string_helpers.<module>" [color = "#e5e5e5ff", label = "numpy.core._string_helpers.<module>\ncalls: 1\ntime: 0.000369s"];
    "numpy.core._string_helpers.<listcomp>" [color = "#e5e5e5ff", label = "numpy.core._string_helpers.<listcomp>\ncalls: 1\ntime: 0.000297s"];
    "numpy.core._type_aliases.<module>" [color = "#e5e5e5ff", label = "numpy.core._type_aliases.<module>\ncalls: 1\ntime: 0.009010s"];
    "numpy.core._dtype.<module>" [color = "#e5e5e5ff", label = "numpy.core._dtype.<module>\ncalls: 1\ntime: 0.000137s"];
    "numpy.core._type_aliases.TypeNADict" [color = "#e5e5e5ff", label = "numpy.core._type_aliases.TypeNADict\ncalls: 1\ntime: 0.000006s"];
    "numpy.core._string_helpers.english_lower" [color = "#e5e5e5ff", label = "numpy.core._string_helpers.english_lower\ncalls: 36\ntime: 0.000181s"];
    "numpy.core._type_aliases.<setcomp>" [color = "#e5e5e5ff", label = "numpy.core._type_aliases.<setcomp>\ncalls: 1\ntime: 0.000037s"];
    "numpy.core._type_aliases._add_types" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._add_types\ncalls: 1\ntime: 0.000198s"];
    "numpy.core._type_aliases.<genexpr>" [color = "#e5e5e5ff", label = "numpy.core._type_aliases.<genexpr>\ncalls: 38\ntime: 0.000513s"];
    "numpy.core._type_aliases._add_aliases" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._add_aliases\ncalls: 1\ntime: 0.003555s"];
    "numpy.core._type_aliases.bitname" [color = "#e5e5e5ff", label = "numpy.core._type_aliases.bitname\ncalls: 16\ntime: 0.002024s"];
    "numpy.core._type_aliases._bits_of" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._bits_of\ncalls: 16\ntime: 0.001126s"];
    "numpy.core._dtype._kind_name" [color = "#e4e5e5ff", label = "numpy.core._dtype._kind_name\ncalls: 95\ntime: 0.000462s"];
    "numpy.core._string_helpers.english_capitalize" [color = "#e5e5e5ff", label = "numpy.core._string_helpers.english_capitalize\ncalls: 16\ntime: 0.000457s"];
    "numpy.core._string_helpers.english_upper" [color = "#e5e5e5ff", label = "numpy.core._string_helpers.english_upper\ncalls: 16\ntime: 0.000096s"];
    "numpy.core._type_aliases._add_integer_aliases" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._add_integer_aliases\ncalls: 1\ntime: 0.000236s"];
    "numpy.core._type_aliases._set_up_aliases" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._set_up_aliases\ncalls: 1\ntime: 0.000184s"];
    "numpy.core._type_aliases._set_array_types" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._set_array_types\ncalls: 1\ntime: 0.000758s"];
    "numpy.core._type_aliases._add_array_type" [color = "#e5e5e5ff", label = "numpy.core._type_aliases._add_array_type\ncalls: 30\ntime: 0.000241s"];
    "numpy.core.overrides.set_module" [color = "#e4e5e5ff", label = "numpy.core.overrides.set_module\ncalls: 84\ntime: 0.000443s"];
    "numpy.core.numerictypes._typedict" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._typedict\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.numerictypes._construct_lookups" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._construct_lookups\ncalls: 1\ntime: 0.000218s"];
    "numpy.core.numerictypes._register_types" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._register_types\ncalls: 1\ntime: 0.003149s"];
    "_weakrefset.WeakSet.__iter__" [color = "#e3e5e5ff", label = "_weakrefset.WeakSet.__iter__\ncalls: 331\ntime: 0.018200s"];
    "_weakrefset._IterationGuard.__init__" [color = "#e4e5e5ff", label = "_weakrefset._IterationGuard.__init__\ncalls: 206\ntime: 0.000813s"];
    "_weakrefset._IterationGuard.__enter__" [color = "#e4e5e5ff", label = "_weakrefset._IterationGuard.__enter__\ncalls: 206\ntime: 0.001507s"];
    "_weakrefset._IterationGuard.__exit__" [color = "#e4e5e5ff", label = "_weakrefset._IterationGuard.__exit__\ncalls: 206\ntime: 0.006109s"];
    "_weakrefset.WeakSet._commit_removals" [color = "#e4e5e5ff", label = "_weakrefset.WeakSet._commit_removals\ncalls: 206\ntime: 0.001340s"];
    "numpy.core.numeric.<module>" [color = "#e5e5e5ff", label = "numpy.core.numeric.<module>\ncalls: 1\ntime: 0.095338s"];
    "numpy.core.shape_base.<module>" [color = "#e5e5e5ff", label = "numpy.core.shape_base.<module>\ncalls: 1\ntime: 0.060671s"];
    "numpy.core._asarray.<module>" [color = "#e5e5e5ff", label = "numpy.core._asarray.<module>\ncalls: 1\ntime: 0.000286s"];
    "numpy.core.fromnumeric.<module>" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.<module>\ncalls: 1\ntime: 0.047684s"];
    "numpy.core._methods.<module>" [color = "#e5e5e5ff", label = "numpy.core._methods.<module>\ncalls: 1\ntime: 0.004356s"];
    "numpy.core._exceptions.<module>" [color = "#e5e5e5ff", label = "numpy.core._exceptions.<module>\ncalls: 1\ntime: 0.001156s"];
    "numpy.core._exceptions.UFuncTypeError" [color = "#e5e5e5ff", label = "numpy.core._exceptions.UFuncTypeError\ncalls: 1\ntime: 0.000006s"];
    "numpy.core._exceptions._UFuncBinaryResolutionError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._UFuncBinaryResolutionError\ncalls: 1\ntime: 0.000009s"];
    "numpy.core._exceptions._display_as_base" [color = "#e5e5e5ff", label = "numpy.core._exceptions._display_as_base\ncalls: 6\ntime: 0.000291s"];
    "numpy.core._exceptions._UFuncNoLoopError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._UFuncNoLoopError\ncalls: 1\ntime: 0.000008s"];
    "numpy.core._exceptions._UFuncCastingError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._UFuncCastingError\ncalls: 1\ntime: 0.000006s"];
    "numpy.core._exceptions._UFuncInputCastingError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._UFuncInputCastingError\ncalls: 1\ntime: 0.000008s"];
    "numpy.core._exceptions._UFuncOutputCastingError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._UFuncOutputCastingError\ncalls: 1\ntime: 0.000008s"];
    "numpy.core._exceptions.TooHardError" [color = "#e5e5e5ff", label = "numpy.core._exceptions.TooHardError\ncalls: 1\ntime: 0.000005s"];
    "numpy.core._exceptions.AxisError" [color = "#e5e5e5ff", label = "numpy.core._exceptions.AxisError\ncalls: 1\ntime: 0.000007s"];
    "numpy.core._exceptions._ArrayMemoryError" [color = "#e5e5e5ff", label = "numpy.core._exceptions._ArrayMemoryError\ncalls: 1\ntime: 0.000011s"];
    "numpy.core.overrides.verify_matching_signatures" [color = "#e3e5e5ff", label = "numpy.core.overrides.verify_matching_signatures\ncalls: 286\ntime: 0.082023s"];
    "numpy.compat._inspect.getargspec" [color = "#e0e5e5ff", label = "numpy.compat._inspect.getargspec\ncalls: 616\ntime: 0.062987s"];
    "numpy.compat._inspect.ismethod" [color = "#e1e5e5ff", label = "numpy.compat._inspect.ismethod\ncalls: 616\ntime: 0.002354s"];
    "numpy.compat._inspect.isfunction" [color = "#e1e5e5ff", label = "numpy.compat._inspect.isfunction\ncalls: 616\ntime: 0.002167s"];
    "numpy.compat._inspect.getargs" [color = "#e1e5e5ff", label = "numpy.compat._inspect.getargs\ncalls: 612\ntime: 0.028972s"];
    "numpy.compat._inspect.iscode" [color = "#e1e5e5ff", label = "numpy.compat._inspect.iscode\ncalls: 612\ntime: 0.002166s"];
    "__new__" [color = "#e0e5e5ff", label = "__new__\ncalls: 735\ntime: 0.003248s"];
    "numpy.core._ufunc_config.<module>" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.<module>\ncalls: 1\ntime: 0.000749s"];
    "numpy.core._ufunc_config.<dictcomp>" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.<dictcomp>\ncalls: 1\ntime: 0.000012s"];
    "numpy.core._ufunc_config._unspecified" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config._unspecified\ncalls: 1\ntime: 0.000005s"];
    "numpy.core._ufunc_config.errstate" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.errstate\ncalls: 1\ntime: 0.000009s"];
    "numpy.core._ufunc_config._setdef" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config._setdef\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.numeric.ComplexWarning" [color = "#e5e5e5ff", label = "numpy.core.numeric.ComplexWarning\ncalls: 1\ntime: 0.000005s"];
    "numpy.core.arrayprint.<module>" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.<module>\ncalls: 1\ntime: 0.004967s"];
    "contextlib.contextmanager" [color = "#e5e5e5ff", label = "contextlib.contextmanager\ncalls: 36\ntime: 0.002822s"];
    "numpy.core.arrayprint._recursive_guard" [color = "#e5e5e5ff", label = "numpy.core.arrayprint._recursive_guard\ncalls: 2\ntime: 0.000012s"];
    "numpy.core.arrayprint.decorating_function" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.decorating_function\ncalls: 2\ntime: 0.000159s"];
    "numpy.core.arrayprint.FloatingFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.FloatingFormat\ncalls: 1\ntime: 0.000010s"];
    "numpy.core.arrayprint.IntegerFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.IntegerFormat\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.arrayprint.BoolFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.BoolFormat\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.arrayprint.ComplexFloatingFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.ComplexFloatingFormat\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.arrayprint._TimelikeFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint._TimelikeFormat\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.arrayprint.DatetimeFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.DatetimeFormat\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.arrayprint.TimedeltaFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.TimedeltaFormat\ncalls: 1\ntime: 0.000005s"];
    "numpy.core.arrayprint.SubArrayFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.SubArrayFormat\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.arrayprint.StructuredVoidFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.StructuredVoidFormat\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.arrayprint.set_string_function" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.set_string_function\ncalls: 2\ntime: 0.000012s"];
    "numpy.core.numeric.extend_all" [color = "#e5e5e5ff", label = "numpy.core.numeric.extend_all\ncalls: 6\ntime: 0.001009s"];
    "numpy.core.defchararray.<module>" [color = "#e5e5e5ff", label = "numpy.core.defchararray.<module>\ncalls: 1\ntime: 0.044785s"];
    "numpy.core.defchararray.chararray" [color = "#e5e5e5ff", label = "numpy.core.defchararray.chararray\ncalls: 1\ntime: 0.000070s"];
    "numpy.core.records.<module>" [color = "#e5e5e5ff", label = "numpy.core.records.<module>\ncalls: 1\ntime: 0.000838s"];
    "numpy.core.records._OrderedCounter" [color = "#e5e5e5ff", label = "numpy.core.records._OrderedCounter\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.records.format_parser" [color = "#e5e5e5ff", label = "numpy.core.records.format_parser\ncalls: 1\ntime: 0.000014s"];
    "numpy.core.records.record" [color = "#e5e5e5ff", label = "numpy.core.records.record\ncalls: 1\ntime: 0.000016s"];
    "numpy.core.records.recarray" [color = "#e5e5e5ff", label = "numpy.core.records.recarray\ncalls: 1\ntime: 0.000017s"];
    "numpy.core.memmap.<module>" [color = "#e5e5e5ff", label = "numpy.core.memmap.<module>\ncalls: 1\ntime: 0.000429s"];
    "numpy.core.memmap.memmap" [color = "#e5e5e5ff", label = "numpy.core.memmap.memmap\ncalls: 1\ntime: 0.000015s"];
    "numpy.core.function_base.<module>" [color = "#e5e5e5ff", label = "numpy.core.function_base.<module>\ncalls: 1\ntime: 0.003226s"];
    "numpy.core.machar.<module>" [color = "#e5e5e5ff", label = "numpy.core.machar.<module>\ncalls: 1\ntime: 0.000195s"];
    "numpy.core.machar.MachAr" [color = "#e5e5e5ff", label = "numpy.core.machar.MachAr\ncalls: 1\ntime: 0.000012s"];
    "numpy.core.getlimits.<module>" [color = "#e5e5e5ff", label = "numpy.core.getlimits.<module>\ncalls: 1\ntime: 0.000921s"];
    "numpy.core.getlimits.MachArLike" [color = "#e5e5e5ff", label = "numpy.core.getlimits.MachArLike\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.getlimits.finfo" [color = "#e5e5e5ff", label = "numpy.core.getlimits.finfo\ncalls: 1\ntime: 0.000011s"];
    "numpy.core.getlimits.iinfo" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo\ncalls: 1\ntime: 0.000014s"];
    "numpy.core.einsumfunc.<module>" [color = "#e5e5e5ff", label = "numpy.core.einsumfunc.<module>\ncalls: 1\ntime: 0.002014s"];
    "numpy.core._add_newdocs.<module>" [color = "#e5e5e5ff", label = "numpy.core._add_newdocs.<module>\ncalls: 1\ntime: 0.032327s"];
    "numpy.core.function_base.add_newdoc" [color = "#e3e5e5ff", label = "numpy.core.function_base.add_newdoc\ncalls: 274\ntime: 0.024660s"];
    "numpy.core.function_base._add_docstring" [color = "#e3e5e5ff", label = "numpy.core.function_base._add_docstring\ncalls: 274\ntime: 0.007069s"];
    "numpy.core.function_base._needs_add_docstring" [color = "#e3e5e5ff", label = "numpy.core.function_base._needs_add_docstring\ncalls: 274\ntime: 0.002022s"];
    "numpy.core._add_newdocs.numeric_type_aliases" [color = "#e5e5e5ff", label = "numpy.core._add_newdocs.numeric_type_aliases\ncalls: 1\ntime: 0.000394s"];
    "numpy.core._add_newdocs.type_aliases_gen" [color = "#e5e5e5ff", label = "numpy.core._add_newdocs.type_aliases_gen\ncalls: 18\ntime: 0.000144s"];
    "numpy.core._add_newdocs.add_newdoc_for_scalar_type" [color = "#e5e5e5ff", label = "numpy.core._add_newdocs.add_newdoc_for_scalar_type\ncalls: 19\ntime: 0.003843s"];
    "numpy.core._add_newdocs.<genexpr>" [color = "#e5e5e5ff", label = "numpy.core._add_newdocs.<genexpr>\ncalls: 63\ntime: 0.000975s"];
    "numpy.core._dtype_ctypes.<module>" [color = "#e5e5e5ff", label = "numpy.core._dtype_ctypes.<module>\ncalls: 1\ntime: 0.000116s"];
    "numpy.core._internal.<module>" [color = "#e4e5e5ff", label = "numpy.core._internal.<module>\ncalls: 1\ntime: 0.230990s"];
    "platform.<module>" [color = "#e4e5e5ff", label = "platform.<module>\ncalls: 1\ntime: 0.188056s"];
    "subprocess.<module>" [color = "#e5e5e5ff", label = "subprocess.<module>\ncalls: 1\ntime: 0.025923s"];
    "signal.<module>" [color = "#e5e5e5ff", label = "signal.<module>\ncalls: 1\ntime: 0.019512s"];
    "enum._convert" [color = "#e5e5e5ff", label = "enum._convert\ncalls: 3\ntime: 0.018943s"];
    "enum.<listcomp>" [color = "#e5e5e5ff", label = "enum.<listcomp>\ncalls: 9\ntime: 0.011968s"];
    "signal.<lambda>" [color = "#e3e5e5ff", label = "signal.<lambda>\ncalls: 222\ntime: 0.000842s"];
    "enum.<lambda>" [color = "#e5e5e5ff", label = "enum.<lambda>\ncalls: 55\ntime: 0.000185s"];
    "enum._create_" [color = "#e5e5e5ff", label = "enum._create_\ncalls: 4\ntime: 0.015722s"];
    "enum._get_mixins_" [color = "#e5e5e5ff", label = "enum._get_mixins_\ncalls: 16\ntime: 0.000558s"];
    "enum.__prepare__" [color = "#e5e5e5ff", label = "enum.__prepare__\ncalls: 6\ntime: 0.000875s"];
    "enum._EnumDict.__init__" [color = "#e5e5e5ff", label = "enum._EnumDict.__init__\ncalls: 6\ntime: 0.000048s"];
    "enum._EnumDict.__setitem__" [color = "#e4e5e5ff", label = "enum._EnumDict.__setitem__\ncalls: 71\ntime: 0.004391s"];
    "enum._is_sunder" [color = "#e4e5e5ff", label = "enum._is_sunder\ncalls: 71\ntime: 0.000306s"];
    "enum._is_dunder" [color = "#e4e5e5ff", label = "enum._is_dunder\ncalls: 71\ntime: 0.000343s"];
    "enum._is_descriptor" [color = "#e5e5e5ff", label = "enum._is_descriptor\ncalls: 55\ntime: 0.000378s"];
    "enum._find_new_" [color = "#e5e5e5ff", label = "enum._find_new_\ncalls: 6\ntime: 0.000685s"];
    "enum.__getattr__" [color = "#e5e5e5ff", label = "enum.__getattr__\ncalls: 6\ntime: 0.000166s"];
    "enum.<dictcomp>" [color = "#e5e5e5ff", label = "enum.<dictcomp>\ncalls: 6\ntime: 0.000102s"];
    "enum.__setattr__" [color = "#e4e5e5ff", label = "enum.__setattr__\ncalls: 92\ntime: 0.000763s"];
    "enum.<setcomp>" [color = "#e5e5e5ff", label = "enum.<setcomp>\ncalls: 6\ntime: 0.001744s"];
    "enum.<genexpr>" [color = "#e5e5e5ff", label = "enum.<genexpr>\ncalls: 15\ntime: 0.000063s"];
    "enum.__members__" [color = "#e5e5e5ff", label = "enum.__members__\ncalls: 3\ntime: 0.000013s"];
    "subprocess.SubprocessError" [color = "#e5e5e5ff", label = "subprocess.SubprocessError\ncalls: 1\ntime: 0.000004s"];
    "subprocess.CalledProcessError" [color = "#e5e5e5ff", label = "subprocess.CalledProcessError\ncalls: 1\ntime: 0.000012s"];
    "subprocess.TimeoutExpired" [color = "#e5e5e5ff", label = "subprocess.TimeoutExpired\ncalls: 1\ntime: 0.000011s"];
    "subprocess.CompletedProcess" [color = "#e5e5e5ff", label = "subprocess.CompletedProcess\ncalls: 1\ntime: 0.000009s"];
    "subprocess.Popen" [color = "#e5e5e5ff", label = "subprocess.Popen\ncalls: 1\ntime: 0.000050s"];
    "re.compile" [color = "#e2e5e5ff", label = "re.compile\ncalls: 101\ntime: 0.789271s"];
    "sre_parse.Pattern.opengroup" [color = "#e4e5e5ff", label = "sre_parse.Pattern.opengroup\ncalls: 195\ntime: 0.007986s"];
    "sre_parse.SubPattern.__getitem__" [color = "#c9dbe5ff", label = "sre_parse.SubPattern.__getitem__\ncalls: 3955\ntime: 0.029537s"];
    "sre_parse.SubPattern.__setitem__" [color = "#e2e5e5ff", label = "sre_parse.SubPattern.__setitem__\ncalls: 480\ntime: 0.001796s"];
    "sre_parse.Pattern.closegroup" [color = "#e4e5e5ff", label = "sre_parse.Pattern.closegroup\ncalls: 195\ntime: 0.022363s"];
    "sre_compile._simple" [color = "#e2e5e5ff", label = "sre_compile._simple\ncalls: 480\ntime: 0.021174s"];
    "sre_compile._compile_charset" [color = "#e3e5e5ff", label = "sre_compile._compile_charset\ncalls: 234\ntime: 0.078514s"];
    "sre_compile._optimize_charset" [color = "#e3e5e5ff", label = "sre_compile._optimize_charset\ncalls: 234\ntime: 0.060694s"];
    "sre_compile._mk_bitmap" [color = "#e5e5e5ff", label = "sre_compile._mk_bitmap\ncalls: 48\ntime: 0.002699s"];
    "sre_compile.<listcomp>" [color = "#e5e5e5ff", label = "sre_compile.<listcomp>\ncalls: 48\ntime: 0.001456s"];
    "sre_parse._escape" [color = "#e3e5e5ff", label = "sre_parse._escape\ncalls: 277\ntime: 0.005008s"];
    "enum.RegexFlag.__or__" [color = "#e4e5e5ff", label = "enum.RegexFlag.__or__\ncalls: 108\ntime: 0.018258s"];
    "sre_parse._class_escape" [color = "#e4e5e5ff", label = "sre_parse._class_escape\ncalls: 101\ntime: 0.001765s"];
    "uname_result" [color = "#e5e5e5ff", label = "uname_result\ncalls: 1\ntime: 0.000030s"];
    "sre_compile._generate_overlap_table" [color = "#e5e5e5ff", label = "sre_compile._generate_overlap_table\ncalls: 19\ntime: 0.000428s"];
    "ctypes.<module>" [color = "#e5e5e5ff", label = "ctypes.<module>\ncalls: 1\ntime: 0.009797s"];
    "ctypes.py_object" [color = "#e5e5e5ff", label = "ctypes.py_object\ncalls: 1\ntime: 0.000007s"];
    "ctypes._check_size" [color = "#e5e5e5ff", label = "ctypes._check_size\ncalls: 14\ntime: 0.000454s"];
    "ctypes.c_short" [color = "#e5e5e5ff", label = "ctypes.c_short\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_ushort" [color = "#e5e5e5ff", label = "ctypes.c_ushort\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_long" [color = "#e5e5e5ff", label = "ctypes.c_long\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_ulong" [color = "#e5e5e5ff", label = "ctypes.c_ulong\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_int" [color = "#e5e5e5ff", label = "ctypes.c_int\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_uint" [color = "#e5e5e5ff", label = "ctypes.c_uint\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_float" [color = "#e5e5e5ff", label = "ctypes.c_float\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_double" [color = "#e5e5e5ff", label = "ctypes.c_double\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_longdouble" [color = "#e5e5e5ff", label = "ctypes.c_longdouble\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_ubyte" [color = "#e5e5e5ff", label = "ctypes.c_ubyte\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_byte" [color = "#e5e5e5ff", label = "ctypes.c_byte\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_char" [color = "#e5e5e5ff", label = "ctypes.c_char\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_char_p" [color = "#e5e5e5ff", label = "ctypes.c_char_p\ncalls: 1\ntime: 0.000006s"];
    "ctypes.c_void_p" [color = "#e5e5e5ff", label = "ctypes.c_void_p\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_bool" [color = "#e5e5e5ff", label = "ctypes.c_bool\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_wchar_p" [color = "#e5e5e5ff", label = "ctypes.c_wchar_p\ncalls: 1\ntime: 0.000006s"];
    "ctypes.c_wchar" [color = "#e5e5e5ff", label = "ctypes.c_wchar\ncalls: 1\ntime: 0.000005s"];
    "ctypes.CDLL" [color = "#e5e5e5ff", label = "ctypes.CDLL\ncalls: 1\ntime: 0.000017s"];
    "ctypes.PyDLL" [color = "#e5e5e5ff", label = "ctypes.PyDLL\ncalls: 1\ntime: 0.000006s"];
    "ctypes.LibraryLoader" [color = "#e5e5e5ff", label = "ctypes.LibraryLoader\ncalls: 1\ntime: 0.000008s"];
    "ctypes.LibraryLoader.__init__" [color = "#e5e5e5ff", label = "ctypes.LibraryLoader.__init__\ncalls: 2\ntime: 0.000008s"];
    "ctypes.PyDLL.__init__" [color = "#e5e5e5ff", label = "ctypes.PyDLL.__init__\ncalls: 1\ntime: 0.000085s"];
    "ctypes._FuncPtr" [color = "#e5e5e5ff", label = "ctypes._FuncPtr\ncalls: 2\ntime: 0.000018s"];
    "ctypes.CFUNCTYPE" [color = "#e5e5e5ff", label = "ctypes.CFUNCTYPE\ncalls: 2\ntime: 0.000152s"];
    "ctypes.CFunctionType" [color = "#e5e5e5ff", label = "ctypes.CFunctionType\ncalls: 5\ntime: 0.000034s"];
    "ctypes.PYFUNCTYPE" [color = "#e5e5e5ff", label = "ctypes.PYFUNCTYPE\ncalls: 3\ntime: 0.000151s"];
    "ctypes._endian.<module>" [color = "#e5e5e5ff", label = "ctypes._endian.<module>\ncalls: 1\ntime: 0.000306s"];
    "ctypes._endian._swapped_meta" [color = "#e5e5e5ff", label = "ctypes._endian._swapped_meta\ncalls: 1\ntime: 0.000006s"];
    "ctypes._endian.BigEndianStructure" [color = "#e5e5e5ff", label = "ctypes._endian.BigEndianStructure\ncalls: 1\ntime: 0.000007s"];
    "ctypes._reset_cache" [color = "#e5e5e5ff", label = "ctypes._reset_cache\ncalls: 1\ntime: 0.000056s"];
    "platform.python_implementation" [color = "#e5e5e5ff", label = "platform.python_implementation\ncalls: 3\ntime: 0.000192s"];
    "platform._sys_version" [color = "#e5e5e5ff", label = "platform._sys_version\ncalls: 3\ntime: 0.000103s"];
    "sre_parse.Tokenizer.getuntil" [color = "#e5e5e5ff", label = "sre_parse.Tokenizer.getuntil\ncalls: 24\ntime: 0.003968s"];
    "numpy.core._internal.dummy_ctype" [color = "#e5e5e5ff", label = "numpy.core._internal.dummy_ctype\ncalls: 1\ntime: 0.000010s"];
    "numpy.core._internal._missing_ctypes" [color = "#e5e5e5ff", label = "numpy.core._internal._missing_ctypes\ncalls: 1\ntime: 0.000071s"];
    "numpy.core._internal.c_void_p" [color = "#e5e5e5ff", label = "numpy.core._internal.c_void_p\ncalls: 1\ntime: 0.000005s"];
    "numpy.core._internal._ctypes" [color = "#e5e5e5ff", label = "numpy.core._internal._ctypes\ncalls: 1\ntime: 0.000020s"];
    "numpy.core._internal._Stream" [color = "#e5e5e5ff", label = "numpy.core._internal._Stream\ncalls: 1\ntime: 0.000011s"];
    "numpy.core._internal.recursive" [color = "#e5e5e5ff", label = "numpy.core._internal.recursive\ncalls: 1\ntime: 0.000007s"];
    "copyreg.pickle" [color = "#e5e5e5ff", label = "copyreg.pickle\ncalls: 1\ntime: 0.000052s"];
    "copyreg.constructor" [color = "#e5e5e5ff", label = "copyreg.constructor\ncalls: 1\ntime: 0.000004s"];
    "numpy._pytesttester.<module>" [color = "#e5e5e5ff", label = "numpy._pytesttester.<module>\ncalls: 1\ntime: 0.000082s"];
    "numpy._pytesttester.PytestTester" [color = "#e5e5e5ff", label = "numpy._pytesttester.PytestTester\ncalls: 1\ntime: 0.000008s"];
    "numpy._pytesttester.PytestTester.__init__" [color = "#e5e5e5ff", label = "numpy._pytesttester.PytestTester.__init__\ncalls: 10\ntime: 0.000040s"];
    "numpy.lib.<module>" [color = "#e4e5e5ff", label = "numpy.lib.<module>\ncalls: 1\ntime: 0.253148s"];
    "numpy.lib.mixins.<module>" [color = "#e5e5e5ff", label = "numpy.lib.mixins.<module>\ncalls: 1\ntime: 0.001522s"];
    "numpy.lib.mixins.NDArrayOperatorsMixin" [color = "#e5e5e5ff", label = "numpy.lib.mixins.NDArrayOperatorsMixin\ncalls: 1\ntime: 0.001410s"];
    "numpy.lib.mixins._binary_method" [color = "#e5e5e5ff", label = "numpy.lib.mixins._binary_method\ncalls: 20\ntime: 0.000134s"];
    "numpy.lib.mixins._numeric_methods" [color = "#e5e5e5ff", label = "numpy.lib.mixins._numeric_methods\ncalls: 13\ntime: 0.000879s"];
    "numpy.lib.mixins._reflected_binary_method" [color = "#e5e5e5ff", label = "numpy.lib.mixins._reflected_binary_method\ncalls: 14\ntime: 0.000100s"];
    "numpy.lib.mixins._inplace_binary_method" [color = "#e5e5e5ff", label = "numpy.lib.mixins._inplace_binary_method\ncalls: 13\ntime: 0.000083s"];
    "numpy.lib.mixins._unary_method" [color = "#e5e5e5ff", label = "numpy.lib.mixins._unary_method\ncalls: 4\ntime: 0.000026s"];
    "numpy.lib.scimath.<module>" [color = "#e5e5e5ff", label = "numpy.lib.scimath.<module>\ncalls: 1\ntime: 0.027198s"];
    "numpy.lib.type_check.<module>" [color = "#e5e5e5ff", label = "numpy.lib.type_check.<module>\ncalls: 1\ntime: 0.015906s"];
    "numpy.lib.ufunclike.<module>" [color = "#e5e5e5ff", label = "numpy.lib.ufunclike.<module>\ncalls: 1\ntime: 0.002728s"];
    "numpy.lib.ufunclike._deprecate_out_named_y" [color = "#e5e5e5ff", label = "numpy.lib.ufunclike._deprecate_out_named_y\ncalls: 1\ntime: 0.000084s"];
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y" [color = "#e5e5e5ff", label = "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y\ncalls: 3\ntime: 0.000323s"];
    "numpy.lib.ufunclike._fix_out_named_y" [color = "#e5e5e5ff", label = "numpy.lib.ufunclike._fix_out_named_y\ncalls: 3\ntime: 0.000243s"];
    "numpy.lib.index_tricks.<module>" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.<module>\ncalls: 1\ntime: 0.097209s"];
    "numpy.matrixlib.<module>" [color = "#e5e5e5ff", label = "numpy.matrixlib.<module>\ncalls: 1\ntime: 0.046681s"];
    "numpy.matrixlib.defmatrix.<module>" [color = "#e5e5e5ff", label = "numpy.matrixlib.defmatrix.<module>\ncalls: 1\ntime: 0.043614s"];
    "numpy.linalg.<module>" [color = "#e5e5e5ff", label = "numpy.linalg.<module>\ncalls: 1\ntime: 0.040401s"];
    "numpy.linalg.linalg.<module>" [color = "#e5e5e5ff", label = "numpy.linalg.linalg.<module>\ncalls: 1\ntime: 0.037094s"];
    "numpy.lib.twodim_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.twodim_base.<module>\ncalls: 1\ntime: 0.009985s"];
    "numpy.core.getlimits.iinfo.__init__" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo.__init__\ncalls: 24\ntime: 0.000301s"];
    "numpy.linalg.linalg.LinAlgError" [color = "#e5e5e5ff", label = "numpy.linalg.linalg.LinAlgError\ncalls: 1\ntime: 0.000005s"];
    "numpy.linalg.linalg._determine_error_states" [color = "#e5e5e5ff", label = "numpy.linalg.linalg._determine_error_states\ncalls: 1\ntime: 0.000335s"];
    "numpy.core._ufunc_config.errstate.__init__" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.errstate.__init__\ncalls: 5\ntime: 0.000030s"];
    "numpy.core._ufunc_config.errstate.__enter__" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.errstate.__enter__\ncalls: 5\ntime: 0.000491s"];
    "numpy.core._ufunc_config.seterr" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.seterr\ncalls: 10\ntime: 0.000629s"];
    "numpy.core._ufunc_config.geterr" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.geterr\ncalls: 10\ntime: 0.000211s"];
    "numpy.core._ufunc_config.errstate.__exit__" [color = "#e5e5e5ff", label = "numpy.core._ufunc_config.errstate.__exit__\ncalls: 5\ntime: 0.000379s"];
    "numpy.matrixlib.defmatrix.matrix" [color = "#e5e5e5ff", label = "numpy.matrixlib.defmatrix.matrix\ncalls: 1\ntime: 0.000049s"];
    "numpy.lib.function_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.function_base.<module>\ncalls: 1\ntime: 0.034764s"];
    "numpy.lib.histograms.<module>" [color = "#e5e5e5ff", label = "numpy.lib.histograms.<module>\ncalls: 1\ntime: 0.003162s"];
    "numpy.lib.function_base.vectorize" [color = "#e5e5e5ff", label = "numpy.lib.function_base.vectorize\ncalls: 1\ntime: 0.000011s"];
    "numpy.lib.stride_tricks.<module>" [color = "#e5e5e5ff", label = "numpy.lib.stride_tricks.<module>\ncalls: 1\ntime: 0.002240s"];
    "numpy.lib.stride_tricks.DummyArray" [color = "#e5e5e5ff", label = "numpy.lib.stride_tricks.DummyArray\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.index_tricks.nd_grid" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.nd_grid\ncalls: 1\ntime: 0.000008s"];
    "numpy.lib.index_tricks.MGridClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.MGridClass\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.index_tricks.MGridClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.MGridClass.__init__\ncalls: 2\ntime: 0.000049s"];
    "numpy.lib.index_tricks.OGridClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.OGridClass\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.index_tricks.OGridClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.OGridClass.__init__\ncalls: 2\ntime: 0.000028s"];
    "numpy.lib.index_tricks.AxisConcatenator" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.AxisConcatenator\ncalls: 1\ntime: 0.000012s"];
    "numpy.lib.index_tricks.RClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.RClass\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib.index_tricks.RClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.RClass.__init__\ncalls: 2\ntime: 0.000055s"];
    "numpy.lib.index_tricks.CClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.CClass\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib.index_tricks.CClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.CClass.__init__\ncalls: 2\ntime: 0.000034s"];
    "numpy.lib.index_tricks.ndenumerate" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.ndenumerate\ncalls: 1\ntime: 0.000008s"];
    "numpy.lib.index_tricks.ndindex" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.ndindex\ncalls: 1\ntime: 0.000009s"];
    "numpy.lib.index_tricks.IndexExpression" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.IndexExpression\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.index_tricks.IndexExpression.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.IndexExpression.__init__\ncalls: 2\ntime: 0.000008s"];
    "numpy.lib.nanfunctions.<module>" [color = "#e5e5e5ff", label = "numpy.lib.nanfunctions.<module>\ncalls: 1\ntime: 0.014082s"];
    "numpy.lib.shape_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.shape_base.<module>\ncalls: 1\ntime: 0.013487s"];
    "numpy.lib.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.<module>\ncalls: 1\ntime: 0.014366s"];
    "numpy.lib.polynomial.RankWarning" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.RankWarning\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib.polynomial.poly1d" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.poly1d\ncalls: 1\ntime: 0.000050s"];
    "warnings.simplefilter" [color = "#e5e5e5ff", label = "warnings.simplefilter\ncalls: 6\ntime: 0.000229s"];
    "warnings._add_filter" [color = "#e5e5e5ff", label = "warnings._add_filter\ncalls: 9\ntime: 0.000122s"];
    "numpy.lib.utils.<module>" [color = "#e5e5e5ff", label = "numpy.lib.utils.<module>\ncalls: 1\ntime: 0.013487s"];
    "numpy.lib.utils._Deprecate" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate\ncalls: 1\ntime: 0.000007s"];
    "enum._missing_" [color = "#e5e5e5ff", label = "enum._missing_\ncalls: 6\ntime: 0.009154s"];
    "enum._create_pseudo_member_" [color = "#e5e5e5ff", label = "enum._create_pseudo_member_\ncalls: 6\ntime: 0.008998s"];
    "enum._decompose" [color = "#e5e5e5ff", label = "enum._decompose\ncalls: 6\ntime: 0.008708s"];
    "types.DynamicClassAttribute.__get__" [color = "#e4e5e5ff", label = "types.DynamicClassAttribute.__get__\ncalls: 147\ntime: 0.003106s"];
    "enum.RegexFlag.name" [color = "#e4e5e5ff", label = "enum.RegexFlag.name\ncalls: 141\ntime: 0.000469s"];
    "enum._power_of_two" [color = "#e4e5e5ff", label = "enum._power_of_two\ncalls: 87\ntime: 0.001483s"];
    "enum._high_bit" [color = "#e5e5e5ff", label = "enum._high_bit\ncalls: 69\ntime: 0.000243s"];
    "enum.RegexFlag.value" [color = "#e5e5e5ff", label = "enum.RegexFlag.value\ncalls: 6\ntime: 0.000020s"];
    "sre_compile.fixup" [color = "#e4e5e5ff", label = "sre_compile.fixup\ncalls: 88\ntime: 0.000331s"];
    "sre_compile._bytes_to_codes" [color = "#e5e5e5ff", label = "sre_compile._bytes_to_codes\ncalls: 2\ntime: 0.000030s"];
    "numpy.lib.arraysetops.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arraysetops.<module>\ncalls: 1\ntime: 0.007969s"];
    "numpy.lib.npyio.<module>" [color = "#e5e5e5ff", label = "numpy.lib.npyio.<module>\ncalls: 1\ntime: 0.014940s"];
    "numpy.lib.format.<module>" [color = "#e5e5e5ff", label = "numpy.lib.format.<module>\ncalls: 1\ntime: 0.000217s"];
    "numpy.lib._datasource.<module>" [color = "#e5e5e5ff", label = "numpy.lib._datasource.<module>\ncalls: 1\ntime: 0.000380s"];
    "numpy.lib._datasource._FileOpeners" [color = "#e5e5e5ff", label = "numpy.lib._datasource._FileOpeners\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib._datasource._FileOpeners.__init__" [color = "#e5e5e5ff", label = "numpy.lib._datasource._FileOpeners.__init__\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib._datasource.DataSource" [color = "#e5e5e5ff", label = "numpy.lib._datasource.DataSource\ncalls: 1\ntime: 0.000023s"];
    "numpy.lib._datasource.Repository" [color = "#e5e5e5ff", label = "numpy.lib._datasource.Repository\ncalls: 1\ntime: 0.000014s"];
    "numpy.lib._iotools.<module>" [color = "#e5e5e5ff", label = "numpy.lib._iotools.<module>\ncalls: 1\ntime: 0.000781s"];
    "numpy.lib._iotools.LineSplitter" [color = "#e5e5e5ff", label = "numpy.lib._iotools.LineSplitter\ncalls: 1\ntime: 0.000011s"];
    "numpy.lib._iotools.NameValidator" [color = "#e5e5e5ff", label = "numpy.lib._iotools.NameValidator\ncalls: 1\ntime: 0.000014s"];
    "numpy.lib._iotools.ConverterError" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConverterError\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib._iotools.ConverterLockError" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConverterLockError\ncalls: 1\ntime: 0.000005s"];
    "numpy.lib._iotools.ConversionWarning" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConversionWarning\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib._iotools.StringConverter" [color = "#e5e5e5ff", label = "numpy.lib._iotools.StringConverter\ncalls: 1\ntime: 0.000044s"];
    "numpy.lib.npyio.BagObj" [color = "#e5e5e5ff", label = "numpy.lib.npyio.BagObj\ncalls: 1\ntime: 0.000008s"];
    "numpy.lib.npyio.NpzFile" [color = "#e5e5e5ff", label = "numpy.lib.npyio.NpzFile\ncalls: 1\ntime: 0.000016s"];
    "numpy.lib.financial.<module>" [color = "#e5e5e5ff", label = "numpy.lib.financial.<module>\ncalls: 1\ntime: 0.010149s"];
    "numpy.lib.arrayterator.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arrayterator.<module>\ncalls: 1\ntime: 0.000159s"];
    "numpy.lib.arrayterator.Arrayterator" [color = "#e5e5e5ff", label = "numpy.lib.arrayterator.Arrayterator\ncalls: 1\ntime: 0.000015s"];
    "numpy.lib.arraypad.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arraypad.<module>\ncalls: 1\ntime: 0.001283s"];
    "numpy.lib._version.<module>" [color = "#e5e5e5ff", label = "numpy.lib._version.<module>\ncalls: 1\ntime: 0.000096s"];
    "numpy.lib._version.NumpyVersion" [color = "#e5e5e5ff", label = "numpy.lib._version.NumpyVersion\ncalls: 1\ntime: 0.000019s"];
    "numpy.fft.<module>" [color = "#e5e5e5ff", label = "numpy.fft.<module>\ncalls: 1\ntime: 0.025685s"];
    "numpy.fft._pocketfft.<module>" [color = "#e5e5e5ff", label = "numpy.fft._pocketfft.<module>\ncalls: 1\ntime: 0.017407s"];
    "numpy.fft.helper.<module>" [color = "#e5e5e5ff", label = "numpy.fft.helper.<module>\ncalls: 1\ntime: 0.002269s"];
    "numpy.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.<module>\ncalls: 1\ntime: 0.030640s"];
    "numpy.polynomial.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.polynomial.<module>\ncalls: 1\ntime: 0.009198s"];
    "numpy.polynomial.polyutils.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.<module>\ncalls: 1\ntime: 0.000424s"];
    "numpy.polynomial.polyutils.RankWarning" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.RankWarning\ncalls: 1\ntime: 0.000006s"];
    "numpy.polynomial.polyutils.PolyError" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyError\ncalls: 1\ntime: 0.000006s"];
    "numpy.polynomial.polyutils.PolyDomainError" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyDomainError\ncalls: 1\ntime: 0.000005s"];
    "numpy.polynomial.polyutils.PolyBase" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyBase\ncalls: 1\ntime: 0.000005s"];
    "numpy.polynomial._polybase.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial._polybase.<module>\ncalls: 1\ntime: 0.001168s"];
    "numpy.polynomial._polybase.ABCPolyBase" [color = "#e5e5e5ff", label = "numpy.polynomial._polybase.ABCPolyBase\ncalls: 1\ntime: 0.000408s"];
    "abc.abstractmethod" [color = "#e5e5e5ff", label = "abc.abstractmethod\ncalls: 57\ntime: 0.000258s"];
    "numpy.polynomial.polynomial.Polynomial" [color = "#e5e5e5ff", label = "numpy.polynomial.polynomial.Polynomial\ncalls: 1\ntime: 0.000040s"];
    "numpy.polynomial.chebyshev.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.chebyshev.<module>\ncalls: 1\ntime: 0.000884s"];
    "numpy.polynomial.chebyshev.Chebyshev" [color = "#e5e5e5ff", label = "numpy.polynomial.chebyshev.Chebyshev\ncalls: 1\ntime: 0.000030s"];
    "numpy.polynomial.legendre.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.legendre.<module>\ncalls: 1\ntime: 0.000841s"];
    "numpy.polynomial.legendre.Legendre" [color = "#e5e5e5ff", label = "numpy.polynomial.legendre.Legendre\ncalls: 1\ntime: 0.000028s"];
    "numpy.polynomial.hermite.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite.<module>\ncalls: 1\ntime: 0.000850s"];
    "numpy.polynomial.hermite.Hermite" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite.Hermite\ncalls: 1\ntime: 0.000030s"];
    "numpy.polynomial.hermite_e.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite_e.<module>\ncalls: 1\ntime: 0.000839s"];
    "numpy.polynomial.hermite_e.HermiteE" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite_e.HermiteE\ncalls: 1\ntime: 0.000027s"];
    "numpy.polynomial.laguerre.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.laguerre.<module>\ncalls: 1\ntime: 0.000853s"];
    "numpy.polynomial.laguerre.Laguerre" [color = "#e5e5e5ff", label = "numpy.polynomial.laguerre.Laguerre\ncalls: 1\ntime: 0.000027s"];
    "numpy.random.<module>" [color = "#e5e5e5ff", label = "numpy.random.<module>\ncalls: 1\ntime: 0.052705s"];
    "numpy.random._pickle.<module>" [color = "#e5e5e5ff", label = "numpy.random._pickle.<module>\ncalls: 1\ntime: 0.048297s"];
    "collections.abc.__subclasshook__" [color = "#e4e5e5ff", label = "collections.abc.__subclasshook__\ncalls: 140\ntime: 0.001683s"];
    "collections.abc._check_methods" [color = "#e5e5e5ff", label = "collections.abc._check_methods\ncalls: 29\ntime: 0.000583s"];
    "interface" [color = "#e5e5e5ff", label = "interface\ncalls: 1\ntime: 0.000034s"];
    "numpy.core.getlimits.iinfo.max" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo.max\ncalls: 17\ntime: 0.000173s"];
    "secrets.<module>" [color = "#e5e5e5ff", label = "secrets.<module>\ncalls: 1\ntime: 0.011875s"];
    "hmac.<module>" [color = "#e5e5e5ff", label = "hmac.<module>\ncalls: 1\ntime: 0.007719s"];
    "hmac.<genexpr>" [color = "#e1e5e5ff", label = "hmac.<genexpr>\ncalls: 514\ntime: 0.001722s"];
    "hmac.HMAC" [color = "#e5e5e5ff", label = "hmac.HMAC\ncalls: 1\ntime: 0.000015s"];
    "random.SystemRandom.__init__" [color = "#e5e5e5ff", label = "random.SystemRandom.__init__\ncalls: 1\ntime: 0.000044s"];
    "random.SystemRandom.seed" [color = "#e5e5e5ff", label = "random.SystemRandom.seed\ncalls: 1\ntime: 0.000004s"];
    "contextlib.errstate.__call__" [color = "#e5e5e5ff", label = "contextlib.errstate.__call__\ncalls: 1\ntime: 0.000100s"];
    "abc.__instancecheck__" [color = "#e2e5e5ff", label = "abc.__instancecheck__\ncalls: 427\ntime: 0.060625s"];
    "random.SystemRandom.getrandbits" [color = "#e5e5e5ff", label = "random.SystemRandom.getrandbits\ncalls: 1\ntime: 0.000016s"];
    "concatenate" [color = "#e5e5e5ff", label = "concatenate\ncalls: 10\ntime: 0.000858s"];
    "numpy.core.multiarray.concatenate" [color = "#e5e5e5ff", label = "numpy.core.multiarray.concatenate\ncalls: 10\ntime: 0.000048s"];
    "contextlib.errstate.inner" [color = "#e5e5e5ff", label = "contextlib.errstate.inner\ncalls: 1\ntime: 0.000336s"];
    "contextlib.errstate._recreate_cm" [color = "#e5e5e5ff", label = "contextlib.errstate._recreate_cm\ncalls: 1\ntime: 0.000004s"];
    "numpy.ctypeslib.<module>" [color = "#e5e5e5ff", label = "numpy.ctypeslib.<module>\ncalls: 1\ntime: 0.003570s"];
    "numpy.core._internal._getintp_ctype" [color = "#e5e5e5ff", label = "numpy.core._internal._getintp_ctype\ncalls: 1\ntime: 0.000023s"];
    "numpy.lib.utils.deprecate" [color = "#e5e5e5ff", label = "numpy.lib.utils.deprecate\ncalls: 1\ntime: 0.000540s"];
    "numpy.lib.utils._Deprecate.__init__" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate.__init__\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.utils._Deprecate.__call__" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate.__call__\ncalls: 1\ntime: 0.000444s"];
    "numpy.lib.utils._set_function_name" [color = "#e5e5e5ff", label = "numpy.lib.utils._set_function_name\ncalls: 1\ntime: 0.000005s"];
    "numpy.lib.utils._get_indent" [color = "#e5e5e5ff", label = "numpy.lib.utils._get_indent\ncalls: 1\ntime: 0.000131s"];
    "textwrap.indent" [color = "#e5e5e5ff", label = "textwrap.indent\ncalls: 13\ntime: 0.005397s"];
    "textwrap.prefixed_lines" [color = "#e4e5e5ff", label = "textwrap.prefixed_lines\ncalls: 163\ntime: 0.003229s"];
    "textwrap.predicate" [color = "#e4e5e5ff", label = "textwrap.predicate\ncalls: 150\ntime: 0.000535s"];
    "numpy.ctypeslib._ndptr" [color = "#e5e5e5ff", label = "numpy.ctypeslib._ndptr\ncalls: 1\ntime: 0.000006s"];
    "numpy.ctypeslib._concrete_ndptr" [color = "#e5e5e5ff", label = "numpy.ctypeslib._concrete_ndptr\ncalls: 1\ntime: 0.000008s"];
    "numpy.ctypeslib._get_scalar_type_map" [color = "#e5e5e5ff", label = "numpy.ctypeslib._get_scalar_type_map\ncalls: 1\ntime: 0.002408s"];
    "numpy.ctypeslib.<dictcomp>" [color = "#e5e5e5ff", label = "numpy.ctypeslib.<dictcomp>\ncalls: 1\ntime: 0.002359s"];
    "numpy.core._internal.npy_ctypes_check" [color = "#e5e5e5ff", label = "numpy.core._internal.npy_ctypes_check\ncalls: 15\ntime: 0.000123s"];
    "numpy.core._dtype_ctypes.dtype_from_ctypes_type" [color = "#e5e5e5ff", label = "numpy.core._dtype_ctypes.dtype_from_ctypes_type\ncalls: 13\ntime: 0.000442s"];
    "numpy.core._dtype_ctypes._from_ctypes_scalar" [color = "#e5e5e5ff", label = "numpy.core._dtype_ctypes._from_ctypes_scalar\ncalls: 13\ntime: 0.000089s"];
    "numpy.ma.<module>" [color = "#e5e5e5ff", label = "numpy.ma.<module>\ncalls: 1\ntime: 0.040956s"];
    "numpy.ma.core.<module>" [color = "#e5e5e5ff", label = "numpy.ma.core.<module>\ncalls: 1\ntime: 0.028538s"];
    "numpy.ma.core.MaskedArrayFutureWarning" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArrayFutureWarning\ncalls: 1\ntime: 0.000005s"];
    "numpy.ma.core.MAError" [color = "#e5e5e5ff", label = "numpy.ma.core.MAError\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core.MaskError" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskError\ncalls: 1\ntime: 0.000005s"];
    "numpy.ma.core.<listcomp>" [color = "#e5e5e5ff", label = "numpy.ma.core.<listcomp>\ncalls: 4\ntime: 0.000041s"];
    "numpy.ma.core._DomainCheckInterval" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainCheckInterval\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.core._DomainTan" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainTan\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.core._DomainSafeDivide" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainSafeDivide\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.core._DomainGreater" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreater\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core._DomainGreaterEqual" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreaterEqual\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.core._MaskedUFunc" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedUFunc\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core._MaskedUnaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedUnaryOperation\ncalls: 1\ntime: 0.000009s"];
    "numpy.ma.core._MaskedBinaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedBinaryOperation\ncalls: 1\ntime: 0.000013s"];
    "numpy.ma.core._DomainedBinaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainedBinaryOperation\ncalls: 1\ntime: 0.000008s"];
    "numpy.ma.core._MaskedUnaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedUnaryOperation.__init__\ncalls: 52\ntime: 0.002904s"];
    "numpy.core._internal._ufunc_doc_signature_formatter" [color = "#e5e5e5ff", label = "numpy.core._internal._ufunc_doc_signature_formatter\ncalls: 50\ntime: 0.002338s"];
    "numpy.ma.core._DomainGreaterEqual.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreaterEqual.__init__\ncalls: 2\ntime: 0.000008s"];
    "numpy.ma.core._DomainGreater.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreater.__init__\ncalls: 3\ntime: 0.000011s"];
    "numpy.ma.core._DomainTan.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainTan.__init__\ncalls: 1\ntime: 0.000004s"];
    "numpy.ma.core._DomainCheckInterval.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainCheckInterval.__init__\ncalls: 3\ntime: 0.000019s"];
    "numpy.ma.core._MaskedBinaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedBinaryOperation.__init__\ncalls: 36\ntime: 0.003697s"];
    "numpy.core._internal.<genexpr>" [color = "#e4e5e5ff", label = "numpy.core._internal.<genexpr>\ncalls: 78\ntime: 0.000303s"];
    "numpy.ma.core._DomainSafeDivide.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainSafeDivide.__init__\ncalls: 6\ntime: 0.000022s"];
    "numpy.ma.core._DomainedBinaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainedBinaryOperation.__init__\ncalls: 12\ntime: 0.001318s"];
    "numpy.ma.core._MaskedPrintOption" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedPrintOption\ncalls: 1\ntime: 0.000013s"];
    "numpy.ma.core._MaskedPrintOption.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedPrintOption.__init__\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core.MaskedIterator" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedIterator\ncalls: 1\ntime: 0.000011s"];
    "numpy.ma.core.MaskedArray" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray\ncalls: 1\ntime: 0.000434s"];
    "numpy.ma.core._arraymethod" [color = "#e5e5e5ff", label = "numpy.ma.core._arraymethod\ncalls: 7\ntime: 0.000087s"];
    "numpy.ma.core.mvoid" [color = "#e5e5e5ff", label = "numpy.ma.core.mvoid\ncalls: 1\ntime: 0.000021s"];
    "numpy.ma.core.MaskedConstant" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant\ncalls: 1\ntime: 0.000028s"];
    "numpy.ma.core.__new__" [color = "#e5e5e5ff", label = "numpy.ma.core.__new__\ncalls: 2\ntime: 0.001461s"];
    "numpy.ma.core.__has_singleton" [color = "#e5e5e5ff", label = "numpy.ma.core.__has_singleton\ncalls: 4\ntime: 0.000015s"];
    "numpy.ma.core.MaskedArray.__array_finalize__" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray.__array_finalize__\ncalls: 1\ntime: 0.000176s"];
    "numpy.ma.core.MaskedArray._update_from" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray._update_from\ncalls: 1\ntime: 0.000036s"];
    "numpy.ma.core.getmask" [color = "#e5e5e5ff", label = "numpy.ma.core.getmask\ncalls: 3\ntime: 0.000012s"];
    "numpy.ma.core.MaskedArray.dtype" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray.dtype\ncalls: 3\ntime: 0.000012s"];
    "numpy.ma.core.make_mask_descr" [color = "#e5e5e5ff", label = "numpy.ma.core.make_mask_descr\ncalls: 1\ntime: 0.000096s"];
    "numpy.ma.core._replace_dtype_fields" [color = "#e5e5e5ff", label = "numpy.ma.core._replace_dtype_fields\ncalls: 1\ntime: 0.000058s"];
    "numpy.ma.core._replace_dtype_fields_recursive" [color = "#e5e5e5ff", label = "numpy.ma.core._replace_dtype_fields_recursive\ncalls: 1\ntime: 0.000015s"];
    "numpy.ma.core.MaskedArray.shape" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray.shape\ncalls: 1\ntime: 0.000004s"];
    "numpy.ma.core.MaskedArray.view" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray.view\ncalls: 1\ntime: 0.000359s"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant.__array_finalize__\ncalls: 2\ntime: 0.000464s"];
    "numpy.ma.core.MaskedConstant._update_from" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant._update_from\ncalls: 1\ntime: 0.000030s"];
    "numpy.ma.core.MaskedConstant.__setattr__" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant.__setattr__\ncalls: 2\ntime: 0.000046s"];
    "numpy.ma.core.MaskedConstant.shape" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant.shape\ncalls: 1\ntime: 0.000005s"];
    "numpy.ma.core.MaskedConstant.dtype" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant.dtype\ncalls: 1\ntime: 0.000004s"];
    "numpy.ma.core._extrema_operation" [color = "#e5e5e5ff", label = "numpy.ma.core._extrema_operation\ncalls: 1\ntime: 0.000012s"];
    "numpy.ma.core._frommethod" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod\ncalls: 1\ntime: 0.000008s"];
    "numpy.ma.core._frommethod.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod.__init__\ncalls: 26\ntime: 0.008599s"];
    "numpy.ma.core._frommethod.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod.getdoc\ncalls: 26\ntime: 0.008093s"];
    "numpy.ma.core.get_object_signature" [color = "#e5e5e5ff", label = "numpy.ma.core.get_object_signature\ncalls: 44\ntime: 0.010356s"];
    "numpy.compat._inspect.formatargspec" [color = "#e5e5e5ff", label = "numpy.compat._inspect.formatargspec\ncalls: 40\ntime: 0.004738s"];
    "numpy.compat._inspect.strseq" [color = "#e4e5e5ff", label = "numpy.compat._inspect.strseq\ncalls: 90\ntime: 0.000493s"];
    "numpy.compat._inspect.<lambda>" [color = "#e4e5e5ff", label = "numpy.compat._inspect.<lambda>\ncalls: 90\ntime: 0.000494s"];
    "numpy._globals._NoValueType.__repr__" [color = "#e5e5e5ff", label = "numpy._globals._NoValueType.__repr__\ncalls: 9\ntime: 0.000029s"];
    "numpy.ma.core._extrema_operation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._extrema_operation.__init__\ncalls: 4\ntime: 0.000437s"];
    "numpy.ma.core.doc_note" [color = "#e5e5e5ff", label = "numpy.ma.core.doc_note\ncalls: 4\ntime: 0.004566s"];
    "re.split" [color = "#e5e5e5ff", label = "re.split\ncalls: 4\ntime: 0.004428s"];
    "numpy.ma.core._convert2ma" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma\ncalls: 1\ntime: 0.000010s"];
    "numpy.ma.core._convert2ma.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma.__init__\ncalls: 8\ntime: 0.001536s"];
    "numpy.ma.core._convert2ma.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma.getdoc\ncalls: 8\ntime: 0.001350s"];
    "numpy.ma.extras.<module>" [color = "#e5e5e5ff", label = "numpy.ma.extras.<module>\ncalls: 1\ntime: 0.003813s"];
    "numpy.ma.extras._fromnxfunction" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction\ncalls: 1\ntime: 0.000009s"];
    "numpy.ma.extras._fromnxfunction_single" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_single\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.extras._fromnxfunction_seq" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_seq\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.extras._fromnxfunction_args" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_args\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.extras._fromnxfunction_allargs" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_allargs\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.extras._fromnxfunction_allargs.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_allargs.__init__\ncalls: 3\ntime: 0.000712s"];
    "numpy.ma.extras._fromnxfunction_allargs.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_allargs.getdoc\ncalls: 3\ntime: 0.000631s"];
    "numpy.ma.extras._fromnxfunction_seq.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_seq.__init__\ncalls: 5\ntime: 0.001105s"];
    "numpy.ma.extras._fromnxfunction_seq.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_seq.getdoc\ncalls: 5\ntime: 0.001012s"];
    "numpy.ma.extras._fromnxfunction_single.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_single.__init__\ncalls: 2\ntime: 0.000448s"];
    "numpy.ma.extras._fromnxfunction_single.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction_single.getdoc\ncalls: 2\ntime: 0.000410s"];
    "numpy.ma.extras.MAxisConcatenator" [color = "#e5e5e5ff", label = "numpy.ma.extras.MAxisConcatenator\ncalls: 1\ntime: 0.000011s"];
    "numpy.ma.extras.mr_class" [color = "#e5e5e5ff", label = "numpy.ma.extras.mr_class\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.extras.mr_class.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras.mr_class.__init__\ncalls: 1\ntime: 0.000028s"];
    "numpy.lib.index_tricks.mr_class.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.mr_class.__init__\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.getlimits._register_known_types" [color = "#e5e5e5ff", label = "numpy.core.getlimits._register_known_types\ncalls: 1\ntime: 0.006367s"];
    "numpy.core.getlimits.MachArLike.__init__" [color = "#e5e5e5ff", label = "numpy.core.getlimits.MachArLike.__init__\ncalls: 6\ntime: 0.005136s"];
    "numpy.core.getlimits.<lambda>" [color = "#e4e5e5ff", label = "numpy.core.getlimits.<lambda>\ncalls: 96\ntime: 0.004046s"];
    "numpy.core.getlimits._fr1" [color = "#e5e5e5ff", label = "numpy.core.getlimits._fr1\ncalls: 30\ntime: 0.000259s"];
    "numpy.core.getlimits._fr0" [color = "#e5e5e5ff", label = "numpy.core.getlimits._fr0\ncalls: 30\ntime: 0.000276s"];
    "numpy.core.getlimits._register_type" [color = "#e5e5e5ff", label = "numpy.core.getlimits._register_type\ncalls: 8\ntime: 0.000032s"];
    "numpy.core.arrayprint._array_str_implementation" [color = "#e5e5e5ff", label = "numpy.core.arrayprint._array_str_implementation\ncalls: 15\ntime: 0.001280s"];
    "numpy.core.arrayprint.float128.wrapper" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.float128.wrapper\ncalls: 15\ntime: 0.000879s"];
    "numpy.core.arrayprint._guarded_repr_or_str" [color = "#e5e5e5ff", label = "numpy.core.arrayprint._guarded_repr_or_str\ncalls: 15\ntime: 0.000430s"];
    "warnings.filterwarnings" [color = "#e5e5e5ff", label = "warnings.filterwarnings\ncalls: 3\ntime: 0.024083s"];
    "numpy.testing.<module>" [color = "#e5e5e5ff", label = "numpy.testing.<module>\ncalls: 1\ntime: 0.082994s"];
    "unittest.<module>" [color = "#e5e5e5ff", label = "unittest.<module>\ncalls: 1\ntime: 0.064435s"];
    "unittest.result.<module>" [color = "#e5e5e5ff", label = "unittest.result.<module>\ncalls: 1\ntime: 0.005286s"];
    "unittest.util.<module>" [color = "#e5e5e5ff", label = "unittest.util.<module>\ncalls: 1\ntime: 0.001953s"];
    "Mismatch" [color = "#e5e5e5ff", label = "Mismatch\ncalls: 1\ntime: 0.000024s"];
    "unittest.result.TestResult" [color = "#e5e5e5ff", label = "unittest.result.TestResult\ncalls: 1\ntime: 0.000432s"];
    "unittest.result.failfast" [color = "#e5e5e5ff", label = "unittest.result.failfast\ncalls: 3\ntime: 0.000245s"];
    "unittest.case.<module>" [color = "#e5e5e5ff", label = "unittest.case.<module>\ncalls: 1\ntime: 0.028518s"];
    "difflib.<module>" [color = "#e5e5e5ff", label = "difflib.<module>\ncalls: 1\ntime: 0.006613s"];
    "Match" [color = "#e5e5e5ff", label = "Match\ncalls: 1\ntime: 0.000024s"];
    "difflib.SequenceMatcher" [color = "#e5e5e5ff", label = "difflib.SequenceMatcher\ncalls: 1\ntime: 0.000019s"];
    "difflib.Differ" [color = "#e5e5e5ff", label = "difflib.Differ\ncalls: 1\ntime: 0.000013s"];
    "difflib.HtmlDiff" [color = "#e5e5e5ff", label = "difflib.HtmlDiff\ncalls: 1\ntime: 0.000023s"];
    "logging.<module>" [color = "#e5e5e5ff", label = "logging.<module>\ncalls: 1\ntime: 0.005628s"];
    "posixpath.normcase" [color = "#e5e5e5ff", label = "posixpath.normcase\ncalls: 1\ntime: 0.000007s"];
    "threading.RLock" [color = "#e5e5e5ff", label = "threading.RLock\ncalls: 4\ntime: 0.000024s"];
    "logging.LogRecord" [color = "#e5e5e5ff", label = "logging.LogRecord\ncalls: 1\ntime: 0.000010s"];
    "logging.PercentStyle" [color = "#e5e5e5ff", label = "logging.PercentStyle\ncalls: 1\ntime: 0.000010s"];
    "logging.StrFormatStyle" [color = "#e5e5e5ff", label = "logging.StrFormatStyle\ncalls: 1\ntime: 0.000008s"];
    "logging.StringTemplateStyle" [color = "#e5e5e5ff", label = "logging.StringTemplateStyle\ncalls: 1\ntime: 0.000010s"];
    "logging.Formatter" [color = "#e5e5e5ff", label = "logging.Formatter\ncalls: 1\ntime: 0.000016s"];
    "logging.Formatter.__init__" [color = "#e5e5e5ff", label = "logging.Formatter.__init__\ncalls: 1\ntime: 0.000050s"];
    "logging.PercentStyle.__init__" [color = "#e5e5e5ff", label = "logging.PercentStyle.__init__\ncalls: 1\ntime: 0.000005s"];
    "logging.BufferingFormatter" [color = "#e5e5e5ff", label = "logging.BufferingFormatter\ncalls: 1\ntime: 0.000009s"];
    "logging.Filter" [color = "#e5e5e5ff", label = "logging.Filter\ncalls: 1\ntime: 0.000007s"];
    "logging.Filterer" [color = "#e5e5e5ff", label = "logging.Filterer\ncalls: 1\ntime: 0.000009s"];
    "weakref.__init__" [color = "#e5e5e5ff", label = "weakref.__init__\ncalls: 7\ntime: 0.000414s"];
    "weakref.update" [color = "#e5e5e5ff", label = "weakref.update\ncalls: 7\ntime: 0.000124s"];
    "logging.Handler" [color = "#e5e5e5ff", label = "logging.Handler\ncalls: 1\ntime: 0.000088s"];
    "logging.StreamHandler" [color = "#e5e5e5ff", label = "logging.StreamHandler\ncalls: 1\ntime: 0.000011s"];
    "logging.FileHandler" [color = "#e5e5e5ff", label = "logging.FileHandler\ncalls: 1\ntime: 0.000010s"];
    "logging._StderrHandler" [color = "#e5e5e5ff", label = "logging._StderrHandler\ncalls: 1\ntime: 0.000007s"];
    "logging._StderrHandler.__init__" [color = "#e5e5e5ff", label = "logging._StderrHandler.__init__\ncalls: 3\ntime: 0.000561s"];
    "logging._checkLevel" [color = "#e5e5e5ff", label = "logging._checkLevel\ncalls: 32\ntime: 0.000204s"];
    "logging._addHandlerRef" [color = "#e5e5e5ff", label = "logging._addHandlerRef\ncalls: 1\ntime: 0.000082s"];
    "logging._acquireLock" [color = "#e5e5e5ff", label = "logging._acquireLock\ncalls: 31\ntime: 0.000169s"];
    "logging._releaseLock" [color = "#e5e5e5ff", label = "logging._releaseLock\ncalls: 31\ntime: 0.000146s"];
    "logging._StderrHandler.createLock" [color = "#e5e5e5ff", label = "logging._StderrHandler.createLock\ncalls: 1\ntime: 0.000026s"];
    "logging.PlaceHolder" [color = "#e5e5e5ff", label = "logging.PlaceHolder\ncalls: 1\ntime: 0.000007s"];
    "logging.Manager" [color = "#e5e5e5ff", label = "logging.Manager\ncalls: 1\ntime: 0.000012s"];
    "logging.Logger" [color = "#e5e5e5ff", label = "logging.Logger\ncalls: 1\ntime: 0.000033s"];
    "logging.RootLogger" [color = "#e5e5e5ff", label = "logging.RootLogger\ncalls: 1\ntime: 0.000006s"];
    "logging.LoggerAdapter" [color = "#e5e5e5ff", label = "logging.LoggerAdapter\ncalls: 1\ntime: 0.000031s"];
    "logging.RootLogger.__init__" [color = "#e5e5e5ff", label = "logging.RootLogger.__init__\ncalls: 3\ntime: 0.000142s"];
    "logging.Manager.__init__" [color = "#e5e5e5ff", label = "logging.Manager.__init__\ncalls: 1\ntime: 0.000010s"];
    "spec_from_loader" [color = "#e5e5e5ff", label = "spec_from_loader\ncalls: 3\ntime: 0.001264s"];
    "type._requires_builtin_wrapper" [color = "#e5e5e5ff", label = "type._requires_builtin_wrapper\ncalls: 2\ntime: 0.000537s"];
    "is_package" [color = "#e5e5e5ff", label = "is_package\ncalls: 2\ntime: 0.000008s"];
    "type.create_module" [color = "#e5e5e5ff", label = "type.create_module\ncalls: 2\ntime: 0.000075s"];
    "type.exec_module" [color = "#e5e5e5ff", label = "type.exec_module\ncalls: 2\ntime: 0.000041s"];
    "logging.NullHandler" [color = "#e5e5e5ff", label = "logging.NullHandler\ncalls: 1\ntime: 0.000009s"];
    "pprint.<module>" [color = "#e5e5e5ff", label = "pprint.<module>\ncalls: 1\ntime: 0.000286s"];
    "pprint._safe_key" [color = "#e5e5e5ff", label = "pprint._safe_key\ncalls: 1\ntime: 0.000009s"];
    "pprint.PrettyPrinter" [color = "#e5e5e5ff", label = "pprint.PrettyPrinter\ncalls: 1\ntime: 0.000070s"];
    "unittest.case.SkipTest" [color = "#e5e5e5ff", label = "unittest.case.SkipTest\ncalls: 1\ntime: 0.000005s"];
    "unittest.case._ShouldStop" [color = "#e5e5e5ff", label = "unittest.case._ShouldStop\ncalls: 1\ntime: 0.000005s"];
    "unittest.case._UnexpectedSuccess" [color = "#e5e5e5ff", label = "unittest.case._UnexpectedSuccess\ncalls: 1\ntime: 0.000005s"];
    "unittest.case._Outcome" [color = "#e5e5e5ff", label = "unittest.case._Outcome\ncalls: 1\ntime: 0.000104s"];
    "unittest.case._BaseTestCaseContext" [color = "#e5e5e5ff", label = "unittest.case._BaseTestCaseContext\ncalls: 1\ntime: 0.000006s"];
    "unittest.case._AssertRaisesBaseContext" [color = "#e5e5e5ff", label = "unittest.case._AssertRaisesBaseContext\ncalls: 1\ntime: 0.000006s"];
    "unittest.case._AssertRaisesContext" [color = "#e5e5e5ff", label = "unittest.case._AssertRaisesContext\ncalls: 1\ntime: 0.000010s"];
    "unittest.case._AssertWarnsContext" [color = "#e5e5e5ff", label = "unittest.case._AssertWarnsContext\ncalls: 1\ntime: 0.000009s"];
    "_LoggingWatcher" [color = "#e5e5e5ff", label = "_LoggingWatcher\ncalls: 1\ntime: 0.000022s"];
    "unittest.case._CapturingHandler" [color = "#e5e5e5ff", label = "unittest.case._CapturingHandler\ncalls: 1\ntime: 0.000009s"];
    "unittest.case._AssertLogsContext" [color = "#e5e5e5ff", label = "unittest.case._AssertLogsContext\ncalls: 1\ntime: 0.000009s"];
    "unittest.case.TestCase" [color = "#e5e5e5ff", label = "unittest.case.TestCase\ncalls: 1\ntime: 0.000469s"];
    "unittest.case._deprecate" [color = "#e5e5e5ff", label = "unittest.case._deprecate\ncalls: 10\ntime: 0.000050s"];
    "unittest.case.FunctionTestCase" [color = "#e5e5e5ff", label = "unittest.case.FunctionTestCase\ncalls: 1\ntime: 0.000020s"];
    "unittest.case._SubTest" [color = "#e5e5e5ff", label = "unittest.case._SubTest\ncalls: 1\ntime: 0.000012s"];
    "unittest.suite.<module>" [color = "#e5e5e5ff", label = "unittest.suite.<module>\ncalls: 1\ntime: 0.000597s"];
    "unittest.suite.BaseTestSuite" [color = "#e5e5e5ff", label = "unittest.suite.BaseTestSuite\ncalls: 1\ntime: 0.000019s"];
    "unittest.suite.TestSuite" [color = "#e5e5e5ff", label = "unittest.suite.TestSuite\ncalls: 1\ntime: 0.000014s"];
    "unittest.suite._ErrorHolder" [color = "#e5e5e5ff", label = "unittest.suite._ErrorHolder\ncalls: 1\ntime: 0.000015s"];
    "unittest.suite._DebugResult" [color = "#e5e5e5ff", label = "unittest.suite._DebugResult\ncalls: 1\ntime: 0.000008s"];
    "unittest.loader.<module>" [color = "#e5e5e5ff", label = "unittest.loader.<module>\ncalls: 1\ntime: 0.009439s"];
    "unittest.loader._FailedTest" [color = "#e5e5e5ff", label = "unittest.loader._FailedTest\ncalls: 1\ntime: 0.000008s"];
    "unittest.loader.TestLoader" [color = "#e5e5e5ff", label = "unittest.loader.TestLoader\ncalls: 1\ntime: 0.000028s"];
    "unittest.loader.TestLoader.__init__" [color = "#e5e5e5ff", label = "unittest.loader.TestLoader.__init__\ncalls: 1\ntime: 0.000008s"];
    "unittest.main.<module>" [color = "#e5e5e5ff", label = "unittest.main.<module>\ncalls: 1\ntime: 0.006747s"];
    "unittest.runner.<module>" [color = "#e5e5e5ff", label = "unittest.runner.<module>\ncalls: 1\ntime: 0.003744s"];
    "unittest.signals.<module>" [color = "#e5e5e5ff", label = "unittest.signals.<module>\ncalls: 1\ntime: 0.000171s"];
    "unittest.signals._InterruptHandler" [color = "#e5e5e5ff", label = "unittest.signals._InterruptHandler\ncalls: 1\ntime: 0.000006s"];
    "weakref.WeakKeyDictionary.__init__" [color = "#e5e5e5ff", label = "weakref.WeakKeyDictionary.__init__\ncalls: 1\ntime: 0.000021s"];
    "unittest.runner._WritelnDecorator" [color = "#e5e5e5ff", label = "unittest.runner._WritelnDecorator\ncalls: 1\ntime: 0.000009s"];
    "unittest.runner.TextTestResult" [color = "#e5e5e5ff", label = "unittest.runner.TextTestResult\ncalls: 1\ntime: 0.000026s"];
    "unittest.runner.TextTestRunner" [color = "#e5e5e5ff", label = "unittest.runner.TextTestRunner\ncalls: 1\ntime: 0.000019s"];
    "unittest.main.TestProgram" [color = "#e5e5e5ff", label = "unittest.main.TestProgram\ncalls: 1\ntime: 0.000028s"];
    "numpy.testing._private.<module>" [color = "#e5e5e5ff", label = "numpy.testing._private.<module>\ncalls: 14\ntime: 0.000055s"];
    "numpy.testing._private.utils.<module>" [color = "#e5e5e5ff", label = "numpy.testing._private.utils.<module>\ncalls: 1\ntime: 0.002237s"];
    "numpy.testing._private.utils.KnownFailureException" [color = "#e5e5e5ff", label = "numpy.testing._private.utils.KnownFailureException\ncalls: 1\ntime: 0.000006s"];
    "numpy.testing._private.utils._Dummy" [color = "#e5e5e5ff", label = "numpy.testing._private.utils._Dummy\ncalls: 1\ntime: 0.000005s"];
    "unittest.case._Dummy.__init__" [color = "#e5e5e5ff", label = "unittest.case._Dummy.__init__\ncalls: 1\ntime: 0.000150s"];
    "unittest.case._Dummy.addTypeEqualityFunc" [color = "#e5e5e5ff", label = "unittest.case._Dummy.addTypeEqualityFunc\ncalls: 6\ntime: 0.000023s"];
    "numpy.testing._private.utils.IgnoreException" [color = "#e5e5e5ff", label = "numpy.testing._private.utils.IgnoreException\ncalls: 1\ntime: 0.000006s"];
    "numpy.testing._private.utils.clear_and_catch_warnings" [color = "#e5e5e5ff", label = "numpy.testing._private.utils.clear_and_catch_warnings\ncalls: 1\ntime: 0.000011s"];
    "numpy.testing._private.utils.suppress_warnings" [color = "#e5e5e5ff", label = "numpy.testing._private.utils.suppress_warnings\ncalls: 1\ntime: 0.000016s"];
    "numpy.testing._private.decorators.<module>" [color = "#e5e5e5ff", label = "numpy.testing._private.decorators.<module>\ncalls: 1\ntime: 0.000122s"];
    "numpy.testing._private.decorators.skipif" [color = "#e5e5e5ff", label = "numpy.testing._private.decorators.skipif\ncalls: 1\ntime: 0.000006s"];
    "numpy.testing._private.nosetester.<module>" [color = "#e5e5e5ff", label = "numpy.testing._private.nosetester.<module>\ncalls: 1\ntime: 0.000249s"];
    "numpy.testing._private.nosetester.NoseTester" [color = "#e5e5e5ff", label = "numpy.testing._private.nosetester.NoseTester\ncalls: 1\ntime: 0.000013s"];
    "numpy._sanity_check" [color = "#e5e5e5ff", label = "numpy._sanity_check\ncalls: 1\ntime: 0.000764s"];
    "numpy.core.numeric.ones" [color = "#e5e5e5ff", label = "numpy.core.numeric.ones\ncalls: 2\ntime: 0.000756s"];
    "copyto" [color = "#e5e5e5ff", label = "copyto\ncalls: 3\ntime: 0.000139s"];
    "numpy.core.multiarray.copyto" [color = "#e5e5e5ff", label = "numpy.core.multiarray.copyto\ncalls: 3\ntime: 0.000013s"];
    "numpy.<genexpr>" [color = "#e5e5e5ff", label = "numpy.<genexpr>\ncalls: 3\ntime: 0.000014s"];
    "pytz.<module>" [color = "#e5e5e5ff", label = "pytz.<module>\ncalls: 1\ntime: 0.018444s"];
    "pytz.exceptions.<module>" [color = "#e5e5e5ff", label = "pytz.exceptions.<module>\ncalls: 1\ntime: 0.000343s"];
    "pytz.exceptions.Error" [color = "#e5e5e5ff", label = "pytz.exceptions.Error\ncalls: 1\ntime: 0.000005s"];
    "pytz.exceptions.UnknownTimeZoneError" [color = "#e5e5e5ff", label = "pytz.exceptions.UnknownTimeZoneError\ncalls: 1\ntime: 0.000006s"];
    "pytz.exceptions.InvalidTimeError" [color = "#e5e5e5ff", label = "pytz.exceptions.InvalidTimeError\ncalls: 1\ntime: 0.000005s"];
    "pytz.exceptions.AmbiguousTimeError" [color = "#e5e5e5ff", label = "pytz.exceptions.AmbiguousTimeError\ncalls: 1\ntime: 0.000005s"];
    "pytz.exceptions.NonExistentTimeError" [color = "#e5e5e5ff", label = "pytz.exceptions.NonExistentTimeError\ncalls: 1\ntime: 0.000005s"];
    "pytz.lazy.<module>" [color = "#e5e5e5ff", label = "pytz.lazy.<module>\ncalls: 1\ntime: 0.000713s"];
    "pytz.lazy.LazyDict" [color = "#e5e5e5ff", label = "pytz.lazy.LazyDict\ncalls: 1\ntime: 0.000012s"];
    "pytz.lazy.LazyList" [color = "#e5e5e5ff", label = "pytz.lazy.LazyList\ncalls: 3\ntime: 0.000024s"];
    "pytz.lazy.<listcomp>" [color = "#e5e5e5ff", label = "pytz.lazy.<listcomp>\ncalls: 2\ntime: 0.000129s"];
    "pytz.lazy.LazySet" [color = "#e5e5e5ff", label = "pytz.lazy.LazySet\ncalls: 3\ntime: 0.000016s"];
    "pytz.tzinfo.<module>" [color = "#e5e5e5ff", label = "pytz.tzinfo.<module>\ncalls: 1\ntime: 0.000491s"];
    "pytz.tzinfo.memorized_timedelta" [color = "#e5e5e5ff", label = "pytz.tzinfo.memorized_timedelta\ncalls: 1\ntime: 0.000017s"];
    "pytz.tzinfo.BaseTzInfo" [color = "#e5e5e5ff", label = "pytz.tzinfo.BaseTzInfo\ncalls: 1\ntime: 0.000008s"];
    "pytz.tzinfo.StaticTzInfo" [color = "#e5e5e5ff", label = "pytz.tzinfo.StaticTzInfo\ncalls: 1\ntime: 0.000014s"];
    "pytz.tzinfo.DstTzInfo" [color = "#e5e5e5ff", label = "pytz.tzinfo.DstTzInfo\ncalls: 1\ntime: 0.000020s"];
    "pytz.tzfile.<module>" [color = "#e5e5e5ff", label = "pytz.tzfile.<module>\ncalls: 1\ntime: 0.000148s"];
    "pytz.tzfile._byte_string" [color = "#e5e5e5ff", label = "pytz.tzfile._byte_string\ncalls: 1\ntime: 0.000005s"];
    "pytz.UTC" [color = "#e5e5e5ff", label = "pytz.UTC\ncalls: 1\ntime: 0.000022s"];
    "pytz._CountryTimezoneDict" [color = "#e5e5e5ff", label = "pytz._CountryTimezoneDict\ncalls: 1\ntime: 0.000007s"];
    "pytz._CountryNameDict" [color = "#e5e5e5ff", label = "pytz._CountryNameDict\ncalls: 1\ntime: 0.000006s"];
    "pytz._FixedOffset" [color = "#e5e5e5ff", label = "pytz._FixedOffset\ncalls: 1\ntime: 0.000017s"];
    "pytz.lazy.__new__" [color = "#e5e5e5ff", label = "pytz.lazy.__new__\ncalls: 4\ntime: 0.003568s"];
    "pytz.lazy.lazy" [color = "#e4e5e5ff", label = "pytz.lazy.lazy\ncalls: 146\ntime: 0.000806s"];
    "dateutil.<module>" [color = "#e5e5e5ff", label = "dateutil.<module>\ncalls: 1\ntime: 0.002809s"];
    "dateutil._version.<module>" [color = "#e5e5e5ff", label = "dateutil._version.<module>\ncalls: 1\ntime: 0.000004s"];
    "pandas.compat.<module>" [color = "#e5e5e5ff", label = "pandas.compat.<module>\ncalls: 1\ntime: 0.000085s"];
    "pandas.compat.numpy.<module>" [color = "#e5e5e5ff", label = "pandas.compat.numpy.<module>\ncalls: 1\ntime: 0.033717s"];
    "distutils.version.<module>" [color = "#e5e5e5ff", label = "distutils.version.<module>\ncalls: 1\ntime: 0.027382s"];
    "distutils.version.Version" [color = "#e5e5e5ff", label = "distutils.version.Version\ncalls: 1\ntime: 0.000079s"];
    "distutils.version.StrictVersion" [color = "#e5e5e5ff", label = "distutils.version.StrictVersion\ncalls: 1\ntime: 0.019116s"];
    "distutils.version.LooseVersion" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion\ncalls: 1\ntime: 0.007987s"];
    "distutils.version.LooseVersion.__init__" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion.__init__\ncalls: 23\ntime: 0.001786s"];
    "distutils.version.LooseVersion.parse" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion.parse\ncalls: 23\ntime: 0.001356s"];
    "distutils.version.<listcomp>" [color = "#e5e5e5ff", label = "distutils.version.<listcomp>\ncalls: 23\ntime: 0.000516s"];
    "distutils.version.LooseVersion.__lt__" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion.__lt__\ncalls: 13\ntime: 0.000885s"];
    "distutils.version.LooseVersion._cmp" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion._cmp\ncalls: 15\ntime: 0.000725s"];
    "distutils.version.LooseVersion.__str__" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion.__str__\ncalls: 1\ntime: 0.000004s"];
    "pandas._libs.<module>" [color = "#e4e5e5ff", label = "pandas._libs.<module>\ncalls: 1\ntime: 0.294212s"];
    "pandas._libs.tslibs.<module>" [color = "#e4e5e5ff", label = "pandas._libs.tslibs.<module>\ncalls: 1\ntime: 0.289950s"];
    "pandas.compat.is_platform_32bit" [color = "#e5e5e5ff", label = "pandas.compat.is_platform_32bit\ncalls: 1\ntime: 0.000007s"];
    "dateutil.tz.<module>" [color = "#e5e5e5ff", label = "dateutil.tz.<module>\ncalls: 1\ntime: 0.035419s"];
    "dateutil.tz.tz.<module>" [color = "#e5e5e5ff", label = "dateutil.tz.tz.<module>\ncalls: 1\ntime: 0.031936s"];
    "six.<module>" [color = "#e5e5e5ff", label = "six.<module>\ncalls: 1\ntime: 0.012752s"];
    "__future__.<module>" [color = "#e5e5e5ff", label = "__future__.<module>\ncalls: 1\ntime: 0.000322s"];
    "__future__._Feature" [color = "#e5e5e5ff", label = "__future__._Feature\ncalls: 1\ntime: 0.000009s"];
    "__future__._Feature.__init__" [color = "#e5e5e5ff", label = "__future__._Feature.__init__\ncalls: 9\ntime: 0.000053s"];
    "six._LazyDescr" [color = "#e5e5e5ff", label = "six._LazyDescr\ncalls: 1\ntime: 0.000006s"];
    "six.MovedModule" [color = "#e5e5e5ff", label = "six.MovedModule\ncalls: 1\ntime: 0.000009s"];
    "six._LazyModule" [color = "#e5e5e5ff", label = "six._LazyModule\ncalls: 1\ntime: 0.000008s"];
    "six.MovedAttribute" [color = "#e5e5e5ff", label = "six.MovedAttribute\ncalls: 1\ntime: 0.000007s"];
    "six._SixMetaPathImporter" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter\ncalls: 1\ntime: 0.000015s"];
    "six._SixMetaPathImporter.__init__" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter.__init__\ncalls: 1\ntime: 0.000006s"];
    "six._MovedItems" [color = "#e5e5e5ff", label = "six._MovedItems\ncalls: 1\ntime: 0.000006s"];
    "six.MovedAttribute.__init__" [color = "#e4e5e5ff", label = "six.MovedAttribute.__init__\ncalls: 176\ntime: 0.002706s"];
    "six.MovedModule.__init__" [color = "#e4e5e5ff", label = "six.MovedModule.__init__\ncalls: 92\ntime: 0.001181s"];
    "six._SixMetaPathImporter._add_module" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter._add_module\ncalls: 53\ntime: 0.000354s"];
    "six._MovedItems.__init__" [color = "#e5e5e5ff", label = "six._MovedItems.__init__\ncalls: 1\ntime: 0.000007s"];
    "six.Module_six_moves_urllib_parse" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_parse\ncalls: 1\ntime: 0.000005s"];
    "six.Module_six_moves_urllib_parse.__init__" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_parse.__init__\ncalls: 1\ntime: 0.000006s"];
    "six.Module_six_moves_urllib_error" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_error\ncalls: 1\ntime: 0.000005s"];
    "six.Module_six_moves_urllib_error.__init__" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_error.__init__\ncalls: 1\ntime: 0.000006s"];
    "six.Module_six_moves_urllib_request" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_request\ncalls: 1\ntime: 0.000005s"];
    "six.Module_six_moves_urllib_request.__init__" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_request.__init__\ncalls: 1\ntime: 0.000006s"];
    "six.Module_six_moves_urllib_response" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_response\ncalls: 1\ntime: 0.000005s"];
    "six.Module_six_moves_urllib_response.__init__" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_response.__init__\ncalls: 1\ntime: 0.000006s"];
    "six.Module_six_moves_urllib_robotparser" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_robotparser\ncalls: 1\ntime: 0.000005s"];
    "six.Module_six_moves_urllib_robotparser.__init__" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib_robotparser.__init__\ncalls: 1\ntime: 0.000006s"];
    "six.Module_six_moves_urllib" [color = "#e5e5e5ff", label = "six.Module_six_moves_urllib\ncalls: 1\ntime: 0.000114s"];
    "six._SixMetaPathImporter._get_module" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter._get_module\ncalls: 5\ntime: 0.000020s"];
    "six._add_doc" [color = "#e5e5e5ff", label = "six._add_doc\ncalls: 8\ntime: 0.000029s"];
    "six.MovedModule.__get__" [color = "#e5e5e5ff", label = "six.MovedModule.__get__\ncalls: 2\ntime: 0.000132s"];
    "six.MovedModule._resolve" [color = "#e5e5e5ff", label = "six.MovedModule._resolve\ncalls: 2\ntime: 0.000065s"];
    "six._import_module" [color = "#e5e5e5ff", label = "six._import_module\ncalls: 5\ntime: 0.000031s"];
    "_find_spec_legacy" [color = "#e5e5e5ff", label = "_find_spec_legacy\ncalls: 31\ntime: 0.000986s"];
    "six._SixMetaPathImporter.find_module" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter.find_module\ncalls: 31\ntime: 0.000164s"];
    "six._SixMetaPathImporter.is_package" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter.is_package\ncalls: 1\ntime: 0.000044s"];
    "six._SixMetaPathImporter.__get_module" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter.__get_module\ncalls: 2\ntime: 0.000010s"];
    "_load_backward_compatible" [color = "#e5e5e5ff", label = "_load_backward_compatible\ncalls: 1\ntime: 0.000092s"];
    "six._SixMetaPathImporter.load_module" [color = "#e5e5e5ff", label = "six._SixMetaPathImporter.load_module\ncalls: 1\ntime: 0.000038s"];
    "dateutil.tz._common.<module>" [color = "#e5e5e5ff", label = "dateutil.tz._common.<module>\ncalls: 1\ntime: 0.000433s"];
    "dateutil.tz._common._tzinfo" [color = "#e5e5e5ff", label = "dateutil.tz._common._tzinfo\ncalls: 1\ntime: 0.000138s"];
    "dateutil.tz._common._validate_fromutc_inputs" [color = "#e5e5e5ff", label = "dateutil.tz._common._validate_fromutc_inputs\ncalls: 3\ntime: 0.000246s"];
    "dateutil.tz._common.tzrangebase" [color = "#e5e5e5ff", label = "dateutil.tz._common.tzrangebase\ncalls: 1\ntime: 0.000070s"];
    "dateutil.tz._common.tzname_in_python2" [color = "#e5e5e5ff", label = "dateutil.tz._common.tzname_in_python2\ncalls: 6\ntime: 0.000034s"];
    "dateutil.tz._factories.<module>" [color = "#e5e5e5ff", label = "dateutil.tz._factories.<module>\ncalls: 1\ntime: 0.000354s"];
    "dateutil.tz._factories._TzSingleton" [color = "#e5e5e5ff", label = "dateutil.tz._factories._TzSingleton\ncalls: 1\ntime: 0.000007s"];
    "dateutil.tz._factories._TzFactory" [color = "#e5e5e5ff", label = "dateutil.tz._factories._TzFactory\ncalls: 1\ntime: 0.000005s"];
    "dateutil.tz._factories._TzOffsetFactory" [color = "#e5e5e5ff", label = "dateutil.tz._factories._TzOffsetFactory\ncalls: 1\ntime: 0.000006s"];
    "dateutil.tz._factories._TzStrFactory" [color = "#e5e5e5ff", label = "dateutil.tz._factories._TzStrFactory\ncalls: 1\ntime: 0.000006s"];
    "dateutil.tz.win.<module>" [color = "#e5e5e5ff", label = "dateutil.tz.win.<module>\ncalls: 1\ntime: 0.000698s"];
    "six.add_metaclass" [color = "#e5e5e5ff", label = "six.add_metaclass\ncalls: 3\ntime: 0.000017s"];
    "dateutil.tz.tz.tzutc" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzutc\ncalls: 1\ntime: 0.000132s"];
    "six.wrapper" [color = "#e5e5e5ff", label = "six.wrapper\ncalls: 3\ntime: 0.000396s"];
    "dateutil.tz._factories.__init__" [color = "#e5e5e5ff", label = "dateutil.tz._factories.__init__\ncalls: 3\ntime: 0.000170s"];
    "dateutil.tz._factories.__call__" [color = "#e5e5e5ff", label = "dateutil.tz._factories.__call__\ncalls: 1\ntime: 0.000008s"];
    "dateutil.tz.tz.tzoffset" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzoffset\ncalls: 1\ntime: 0.000138s"];
    "dateutil.tz.tz.tzlocal" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzlocal\ncalls: 1\ntime: 0.000046s"];
    "dateutil.tz.tz._ttinfo" [color = "#e5e5e5ff", label = "dateutil.tz.tz._ttinfo\ncalls: 1\ntime: 0.000014s"];
    "dateutil.tz.tz._tzfile" [color = "#e5e5e5ff", label = "dateutil.tz.tz._tzfile\ncalls: 1\ntime: 0.000008s"];
    "dateutil.tz.tz.tzfile" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzfile\ncalls: 1\ntime: 0.000051s"];
    "dateutil.tz.tz.tzrange" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzrange\ncalls: 1\ntime: 0.000012s"];
    "dateutil.tz.tz.tzstr" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzstr\ncalls: 1\ntime: 0.000008s"];
    "dateutil.tz.tz._tzicalvtzcomp" [color = "#e5e5e5ff", label = "dateutil.tz.tz._tzicalvtzcomp\ncalls: 1\ntime: 0.000005s"];
    "dateutil.tz.tz._tzicalvtz" [color = "#e5e5e5ff", label = "dateutil.tz.tz._tzicalvtz\ncalls: 1\ntime: 0.000040s"];
    "dateutil.tz.tz.tzical" [color = "#e5e5e5ff", label = "dateutil.tz.tz.tzical\ncalls: 1\ntime: 0.000012s"];
    "dateutil.tz.tz.__get_gettz" [color = "#e5e5e5ff", label = "dateutil.tz.tz.__get_gettz\ncalls: 1\ntime: 0.000188s"];
    "dateutil.tz.tz.GettzFunc" [color = "#e5e5e5ff", label = "dateutil.tz.tz.GettzFunc\ncalls: 1\ntime: 0.000012s"];
    "dateutil.tz.tz.GettzFunc.__init__" [color = "#e5e5e5ff", label = "dateutil.tz.tz.GettzFunc.__init__\ncalls: 1\ntime: 0.000077s"];
    "dateutil.tz.tz._nullcontext" [color = "#e5e5e5ff", label = "dateutil.tz.tz._nullcontext\ncalls: 1\ntime: 0.000008s"];
    "dateutil.tz.DeprecatedTzFormatWarning" [color = "#e5e5e5ff", label = "dateutil.tz.DeprecatedTzFormatWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas._config.<module>" [color = "#e5e5e5ff", label = "pandas._config.<module>\ncalls: 1\ntime: 0.132240s"];
    "pandas._config.config.<module>" [color = "#e5e5e5ff", label = "pandas._config.config.<module>\ncalls: 1\ntime: 0.118152s"];
    "typing.<module>" [color = "#e5e5e5ff", label = "typing.<module>\ncalls: 1\ntime: 0.103099s"];
    "typing.TypingMeta" [color = "#e5e5e5ff", label = "typing.TypingMeta\ncalls: 1\ntime: 0.000014s"];
    "typing._TypingBase" [color = "#e5e5e5ff", label = "typing._TypingBase\ncalls: 1\ntime: 0.000017s"];
    "typing.__new__" [color = "#dce4e5ff", label = "typing.__new__\ncalls: 1017\ntime: 0.508957s"];
    "typing.TypingMeta.__init__" [color = "#e5e5e5ff", label = "typing.TypingMeta.__init__\ncalls: 10\ntime: 0.000036s"];
    "typing._FinalTypingBase" [color = "#e5e5e5ff", label = "typing._FinalTypingBase\ncalls: 1\ntime: 0.000010s"];
    "typing._ForwardRef" [color = "#e5e5e5ff", label = "typing._ForwardRef\ncalls: 1\ntime: 0.000016s"];
    "typing._TypeAlias" [color = "#e5e5e5ff", label = "typing._TypeAlias\ncalls: 1\ntime: 0.000014s"];
    "typing._Any" [color = "#e5e5e5ff", label = "typing._Any\ncalls: 1\ntime: 0.000008s"];
    "typing._Any.__init__" [color = "#e5e5e5ff", label = "typing._Any.__init__\ncalls: 1\ntime: 0.000004s"];
    "typing._NoReturn" [color = "#e5e5e5ff", label = "typing._NoReturn\ncalls: 1\ntime: 0.000008s"];
    "typing._NoReturn.__init__" [color = "#e5e5e5ff", label = "typing._NoReturn.__init__\ncalls: 1\ntime: 0.000003s"];
    "typing.TypeVar" [color = "#e5e5e5ff", label = "typing.TypeVar\ncalls: 1\ntime: 0.000015s"];
    "typing.TypeVar.__init__" [color = "#e5e5e5ff", label = "typing.TypeVar.__init__\ncalls: 38\ntime: 0.002561s"];
    "typing.<genexpr>" [color = "#b4c6e5ff", label = "typing.<genexpr>\ncalls: 6792\ntime: 0.094222s"];
    "typing._type_check" [color = "#dfe5e5ff", label = "typing._type_check\ncalls: 784\ntime: 0.017870s"];
    "typing._Union" [color = "#e5e5e5ff", label = "typing._Union\ncalls: 1\ntime: 0.000241s"];
    "typing._tp_cache" [color = "#e5e5e5ff", label = "typing._tp_cache\ncalls: 5\ntime: 0.000877s"];
    "typing._Union.__init__" [color = "#e4e5e5ff", label = "typing._Union.__init__\ncalls: 161\ntime: 0.000567s"];
    "typing._Optional" [color = "#e5e5e5ff", label = "typing._Optional\ncalls: 1\ntime: 0.000192s"];
    "typing._Optional.__init__" [color = "#e5e5e5ff", label = "typing._Optional.__init__\ncalls: 1\ntime: 0.000003s"];
    "typing.GenericMeta" [color = "#e5e5e5ff", label = "typing.GenericMeta\ncalls: 1\ntime: 0.000228s"];
    "typing.Generic" [color = "#e5e5e5ff", label = "typing.Generic\ncalls: 1\ntime: 0.000007s"];
    "typing._type_vars" [color = "#e2e5e5ff", label = "typing._type_vars\ncalls: 370\ntime: 0.018583s"];
    "typing._get_type_vars" [color = "#e2e5e5ff", label = "typing._get_type_vars\ncalls: 424\ntime: 0.013176s"];
    "typing.GenericMeta.__setattr__" [color = "#d5e2e5ff", label = "typing.GenericMeta.__setattr__\ncalls: 2191\ntime: 0.021842s"];
    "typing.GenericMeta._abc_negative_cache" [color = "#e2e5e5ff", label = "typing.GenericMeta._abc_negative_cache\ncalls: 384\ntime: 0.002271s"];
    "typing.GenericMeta._abc_negative_cache_version" [color = "#e3e5e5ff", label = "typing.GenericMeta._abc_negative_cache_version\ncalls: 322\ntime: 0.001893s"];
    "typing._next_in_mro" [color = "#e3e5e5ff", label = "typing._next_in_mro\ncalls: 217\ntime: 0.006826s"];
    "typing.GenericMeta.__init__" [color = "#e4e5e5ff", label = "typing.GenericMeta.__init__\ncalls: 167\ntime: 0.000583s"];
    "typing._TypingEmpty" [color = "#e5e5e5ff", label = "typing._TypingEmpty\ncalls: 1\ntime: 0.000005s"];
    "typing._TypingEllipsis" [color = "#e5e5e5ff", label = "typing._TypingEllipsis\ncalls: 1\ntime: 0.000005s"];
    "typing.TupleMeta" [color = "#e5e5e5ff", label = "typing.TupleMeta\ncalls: 1\ntime: 0.000199s"];
    "typing.Tuple" [color = "#e5e5e5ff", label = "typing.Tuple\ncalls: 1\ntime: 0.000007s"];
    "typing.TupleMeta.__setattr__" [color = "#e2e5e5ff", label = "typing.TupleMeta.__setattr__\ncalls: 403\ntime: 0.003866s"];
    "typing.TupleMeta._abc_negative_cache" [color = "#e5e5e5ff", label = "typing.TupleMeta._abc_negative_cache\ncalls: 31\ntime: 0.000144s"];
    "typing.TupleMeta._abc_negative_cache_version" [color = "#e5e5e5ff", label = "typing.TupleMeta._abc_negative_cache_version\ncalls: 31\ntime: 0.000133s"];
    "typing._make_subclasshook" [color = "#e4e5e5ff", label = "typing._make_subclasshook\ncalls: 195\ntime: 0.001433s"];
    "typing.TupleMeta.__init__" [color = "#e5e5e5ff", label = "typing.TupleMeta.__init__\ncalls: 31\ntime: 0.000112s"];
    "typing.CallableMeta" [color = "#e5e5e5ff", label = "typing.CallableMeta\ncalls: 1\ntime: 0.000201s"];
    "typing.Callable" [color = "#e5e5e5ff", label = "typing.Callable\ncalls: 1\ntime: 0.000007s"];
    "typing.CallableMeta.__setattr__" [color = "#e4e5e5ff", label = "typing.CallableMeta.__setattr__\ncalls: 143\ntime: 0.002085s"];
    "typing.CallableMeta._abc_negative_cache" [color = "#e5e5e5ff", label = "typing.CallableMeta._abc_negative_cache\ncalls: 21\ntime: 0.000099s"];
    "typing.CallableMeta._abc_negative_cache_version" [color = "#e5e5e5ff", label = "typing.CallableMeta._abc_negative_cache_version\ncalls: 19\ntime: 0.000082s"];
    "typing.CallableMeta.__init__" [color = "#e5e5e5ff", label = "typing.CallableMeta.__init__\ncalls: 11\ntime: 0.000038s"];
    "typing._ClassVar" [color = "#e5e5e5ff", label = "typing._ClassVar\ncalls: 1\ntime: 0.000015s"];
    "typing._ClassVar.__init__" [color = "#e5e5e5ff", label = "typing._ClassVar.__init__\ncalls: 1\ntime: 0.000004s"];
    "typing._ProtocolMeta" [color = "#e5e5e5ff", label = "typing._ProtocolMeta\ncalls: 1\ntime: 0.000010s"];
    "typing._Protocol" [color = "#e5e5e5ff", label = "typing._Protocol\ncalls: 1\ntime: 0.000007s"];
    "typing._ProtocolMeta.__setattr__" [color = "#e4e5e5ff", label = "typing._ProtocolMeta.__setattr__\ncalls: 96\ntime: 0.001243s"];
    "typing._ProtocolMeta._abc_negative_cache" [color = "#e5e5e5ff", label = "typing._ProtocolMeta._abc_negative_cache\ncalls: 8\ntime: 0.000186s"];
    "typing._ProtocolMeta._abc_negative_cache_version" [color = "#e5e5e5ff", label = "typing._ProtocolMeta._abc_negative_cache_version\ncalls: 8\ntime: 0.000182s"];
    "typing._ProtocolMeta.__init__" [color = "#e5e5e5ff", label = "typing._ProtocolMeta.__init__\ncalls: 8\ntime: 0.000028s"];
    "typing.inner" [color = "#dbe4e5ff", label = "typing.inner\ncalls: 1130\ntime: 0.652072s"];
    "typing.GenericMeta.__hash__" [color = "#dce4e5ff", label = "typing.GenericMeta.__hash__\ncalls: 1322\ntime: 0.004562s"];
    "typing.GenericMeta.__getitem__" [color = "#e4e5e5ff", label = "typing.GenericMeta.__getitem__\ncalls: 129\ntime: 0.188643s"];
    "typing._no_slots_copy" [color = "#e4e5e5ff", label = "typing._no_slots_copy\ncalls: 170\ntime: 0.002160s"];
    "typing.GenericMeta._subs_tree" [color = "#e3e5e5ff", label = "typing.GenericMeta._subs_tree\ncalls: 232\ntime: 0.029227s"];
    "typing._subs_tree" [color = "#e1e5e5ff", label = "typing._subs_tree\ncalls: 481\ntime: 0.070257s"];
    "typing._replace_arg" [color = "#dee4e5ff", label = "typing._replace_arg\ncalls: 924\ntime: 0.045805s"];
    "typing.Awaitable" [color = "#e5e5e5ff", label = "typing.Awaitable\ncalls: 1\ntime: 0.000005s"];
    "typing.GenericMeta._get_type_vars" [color = "#e4e5e5ff", label = "typing.GenericMeta._get_type_vars\ncalls: 134\ntime: 0.002658s"];
    "typing.TypeVar._get_type_vars" [color = "#e4e5e5ff", label = "typing.TypeVar._get_type_vars\ncalls: 113\ntime: 0.000519s"];
    "typing.GenericMeta.__eq__" [color = "#e1e5e5ff", label = "typing.GenericMeta.__eq__\ncalls: 625\ntime: 0.003122s"];
    "typing.TupleMeta.__eq__" [color = "#e4e5e5ff", label = "typing.TupleMeta.__eq__\ncalls: 163\ntime: 0.000978s"];
    "typing.CallableMeta.__eq__" [color = "#e4e5e5ff", label = "typing.CallableMeta.__eq__\ncalls: 177\ntime: 0.000997s"];
    "typing._ProtocolMeta.__eq__" [color = "#e3e5e5ff", label = "typing._ProtocolMeta.__eq__\ncalls: 217\ntime: 0.001104s"];
    "typing._check_generic" [color = "#e4e5e5ff", label = "typing._check_generic\ncalls: 125\ntime: 0.001100s"];
    "typing.Coroutine" [color = "#e5e5e5ff", label = "typing.Coroutine\ncalls: 1\ntime: 0.000005s"];
    "typing.AsyncIterable" [color = "#e5e5e5ff", label = "typing.AsyncIterable\ncalls: 1\ntime: 0.000005s"];
    "typing.AsyncIterator" [color = "#e5e5e5ff", label = "typing.AsyncIterator\ncalls: 1\ntime: 0.000005s"];
    "typing.Iterable" [color = "#e5e5e5ff", label = "typing.Iterable\ncalls: 1\ntime: 0.000005s"];
    "typing.Iterator" [color = "#e5e5e5ff", label = "typing.Iterator\ncalls: 1\ntime: 0.000005s"];
    "typing.SupportsInt" [color = "#e5e5e5ff", label = "typing.SupportsInt\ncalls: 1\ntime: 0.000027s"];
    "typing._ProtocolMeta._get_type_vars" [color = "#e5e5e5ff", label = "typing._ProtocolMeta._get_type_vars\ncalls: 6\ntime: 0.000101s"];
    "typing.SupportsFloat" [color = "#e5e5e5ff", label = "typing.SupportsFloat\ncalls: 1\ntime: 0.000029s"];
    "typing.SupportsComplex" [color = "#e5e5e5ff", label = "typing.SupportsComplex\ncalls: 1\ntime: 0.000026s"];
    "typing.SupportsBytes" [color = "#e5e5e5ff", label = "typing.SupportsBytes\ncalls: 1\ntime: 0.000026s"];
    "typing._ProtocolMeta.__hash__" [color = "#e5e5e5ff", label = "typing._ProtocolMeta.__hash__\ncalls: 3\ntime: 0.000011s"];
    "typing._ProtocolMeta.__getitem__" [color = "#e5e5e5ff", label = "typing._ProtocolMeta.__getitem__\ncalls: 1\ntime: 0.001193s"];
    "typing._ProtocolMeta._subs_tree" [color = "#e5e5e5ff", label = "typing._ProtocolMeta._subs_tree\ncalls: 1\ntime: 0.000085s"];
    "typing.SupportsAbs" [color = "#e5e5e5ff", label = "typing.SupportsAbs\ncalls: 1\ntime: 0.000026s"];
    "typing.SupportsRound" [color = "#e5e5e5ff", label = "typing.SupportsRound\ncalls: 1\ntime: 0.000026s"];
    "typing.Reversible" [color = "#e5e5e5ff", label = "typing.Reversible\ncalls: 1\ntime: 0.000005s"];
    "typing.Container" [color = "#e5e5e5ff", label = "typing.Container\ncalls: 1\ntime: 0.000005s"];
    "typing.Collection" [color = "#e5e5e5ff", label = "typing.Collection\ncalls: 1\ntime: 0.000005s"];
    "typing.AbstractSet" [color = "#e5e5e5ff", label = "typing.AbstractSet\ncalls: 1\ntime: 0.000005s"];
    "typing.MutableSet" [color = "#e5e5e5ff", label = "typing.MutableSet\ncalls: 1\ntime: 0.000005s"];
    "typing.Mapping" [color = "#e5e5e5ff", label = "typing.Mapping\ncalls: 1\ntime: 0.000005s"];
    "typing.MutableMapping" [color = "#e5e5e5ff", label = "typing.MutableMapping\ncalls: 1\ntime: 0.000005s"];
    "typing.Sequence" [color = "#e5e5e5ff", label = "typing.Sequence\ncalls: 1\ntime: 0.000005s"];
    "typing.MutableSequence" [color = "#e5e5e5ff", label = "typing.MutableSequence\ncalls: 1\ntime: 0.000005s"];
    "typing.ByteString" [color = "#e5e5e5ff", label = "typing.ByteString\ncalls: 1\ntime: 0.000005s"];
    "typing.List" [color = "#e5e5e5ff", label = "typing.List\ncalls: 1\ntime: 0.000006s"];
    "typing.Deque" [color = "#e5e5e5ff", label = "typing.Deque\ncalls: 1\ntime: 0.000006s"];
    "typing.Set" [color = "#e5e5e5ff", label = "typing.Set\ncalls: 1\ntime: 0.000006s"];
    "typing.FrozenSet" [color = "#e5e5e5ff", label = "typing.FrozenSet\ncalls: 1\ntime: 0.000006s"];
    "typing.MappingView" [color = "#e5e5e5ff", label = "typing.MappingView\ncalls: 1\ntime: 0.000005s"];
    "typing.KeysView" [color = "#e5e5e5ff", label = "typing.KeysView\ncalls: 1\ntime: 0.000005s"];
    "typing.TupleMeta.__hash__" [color = "#e3e5e5ff", label = "typing.TupleMeta.__hash__\ncalls: 227\ntime: 0.000778s"];
    "typing.TupleMeta.__getitem__" [color = "#e4e5e5ff", label = "typing.TupleMeta.__getitem__\ncalls: 60\ntime: 0.091856s"];
    "typing.TupleMeta._subs_tree" [color = "#e5e5e5ff", label = "typing.TupleMeta._subs_tree\ncalls: 51\ntime: 0.009700s"];
    "typing.TupleMeta._get_type_vars" [color = "#e5e5e5ff", label = "typing.TupleMeta._get_type_vars\ncalls: 19\ntime: 0.000225s"];
    "typing.ItemsView" [color = "#e5e5e5ff", label = "typing.ItemsView\ncalls: 1\ntime: 0.000005s"];
    "typing.ValuesView" [color = "#e5e5e5ff", label = "typing.ValuesView\ncalls: 1\ntime: 0.000005s"];
    "typing.ContextManager" [color = "#e5e5e5ff", label = "typing.ContextManager\ncalls: 1\ntime: 0.000005s"];
    "AsyncContextManager" [color = "#e5e5e5ff", label = "AsyncContextManager\ncalls: 1\ntime: 0.000031s"];
    "typing.Dict" [color = "#e5e5e5ff", label = "typing.Dict\ncalls: 1\ntime: 0.000006s"];
    "typing.DefaultDict" [color = "#e5e5e5ff", label = "typing.DefaultDict\ncalls: 1\ntime: 0.000006s"];
    "typing.Counter" [color = "#e5e5e5ff", label = "typing.Counter\ncalls: 1\ntime: 0.000006s"];
    "typing.ChainMap" [color = "#e5e5e5ff", label = "typing.ChainMap\ncalls: 1\ntime: 0.000006s"];
    "typing.Generator" [color = "#e5e5e5ff", label = "typing.Generator\ncalls: 1\ntime: 0.000006s"];
    "typing.AsyncGenerator" [color = "#e5e5e5ff", label = "typing.AsyncGenerator\ncalls: 1\ntime: 0.000005s"];
    "typing.Type" [color = "#e5e5e5ff", label = "typing.Type\ncalls: 1\ntime: 0.000006s"];
    "typing.NamedTupleMeta" [color = "#e5e5e5ff", label = "typing.NamedTupleMeta\ncalls: 1\ntime: 0.000006s"];
    "typing.NamedTuple" [color = "#e5e5e5ff", label = "typing.NamedTuple\ncalls: 1\ntime: 0.000007s"];
    "typing.IO" [color = "#e5e5e5ff", label = "typing.IO\ncalls: 1\ntime: 0.001920s"];
    "typing.BinaryIO" [color = "#e5e5e5ff", label = "typing.BinaryIO\ncalls: 1\ntime: 0.000999s"];
    "typing._Union.__hash__" [color = "#e1e5e5ff", label = "typing._Union.__hash__\ncalls: 608\ntime: 0.002079s"];
    "typing._Union.__getitem__" [color = "#e3e5e5ff", label = "typing._Union.__getitem__\ncalls: 165\ntime: 0.204777s"];
    "typing._remove_dups_flatten" [color = "#e2e5e5ff", label = "typing._remove_dups_flatten\ncalls: 362\ntime: 0.124624s"];
    "typing._Union._subs_tree" [color = "#e3e5e5ff", label = "typing._Union._subs_tree\ncalls: 199\ntime: 0.091681s"];
    "typing.TextIO" [color = "#e5e5e5ff", label = "typing.TextIO\ncalls: 1\ntime: 0.000910s"];
    "typing._Optional.__getitem__" [color = "#e4e5e5ff", label = "typing._Optional.__getitem__\ncalls: 68\ntime: 0.100145s"];
    "typing.io" [color = "#e5e5e5ff", label = "typing.io\ncalls: 1\ntime: 0.000010s"];
    "typing._TypeAlias.__init__" [color = "#e5e5e5ff", label = "typing._TypeAlias.__init__\ncalls: 2\ntime: 0.000028s"];
    "re.match" [color = "#dae3e5ff", label = "re.match\ncalls: 1490\ntime: 0.064222s"];
    "typing.re" [color = "#e5e5e5ff", label = "typing.re\ncalls: 1\ntime: 0.000008s"];
    "DeprecatedOption" [color = "#e5e5e5ff", label = "DeprecatedOption\ncalls: 1\ntime: 0.000026s"];
    "RegisteredOption" [color = "#e5e5e5ff", label = "RegisteredOption\ncalls: 1\ntime: 0.000028s"];
    "typing._Any._get_type_vars" [color = "#e5e5e5ff", label = "typing._Any._get_type_vars\ncalls: 27\ntime: 0.000092s"];
    "pandas._config.config.OptionError" [color = "#e5e5e5ff", label = "pandas._config.config.OptionError\ncalls: 1\ntime: 0.000005s"];
    "pandas._config.config.DictWrapper" [color = "#e5e5e5ff", label = "pandas._config.config.DictWrapper\ncalls: 1\ntime: 0.000010s"];
    "pandas._config.config.CallableDynamicDoc" [color = "#e5e5e5ff", label = "pandas._config.config.CallableDynamicDoc\ncalls: 1\ntime: 0.000008s"];
    "pandas._config.config.CallableDynamicDoc.__init__" [color = "#e5e5e5ff", label = "pandas._config.config.CallableDynamicDoc.__init__\ncalls: 4\ntime: 0.000020s"];
    "pandas._config.config.DictWrapper.__init__" [color = "#e5e5e5ff", label = "pandas._config.config.DictWrapper.__init__\ncalls: 1\ntime: 0.000007s"];
    "pandas._config.config.option_context" [color = "#e5e5e5ff", label = "pandas._config.config.option_context\ncalls: 1\ntime: 0.000009s"];
    "pandas._config.config.is_type_factory" [color = "#e5e5e5ff", label = "pandas._config.config.is_type_factory\ncalls: 4\ntime: 0.000021s"];
    "pandas._config.config.is_instance_factory" [color = "#e5e5e5ff", label = "pandas._config.config.is_instance_factory\ncalls: 5\ntime: 0.000070s"];
    "pandas._config.dates.<module>" [color = "#e5e5e5ff", label = "pandas._config.dates.<module>\ncalls: 1\ntime: 0.003849s"];
    "contextlib.helper" [color = "#e5e5e5ff", label = "contextlib.helper\ncalls: 51\ntime: 0.001590s"];
    "contextlib._GeneratorContextManager.__init__" [color = "#e5e5e5ff", label = "contextlib._GeneratorContextManager.__init__\ncalls: 51\ntime: 0.000620s"];
    "contextlib._GeneratorContextManager.__enter__" [color = "#e5e5e5ff", label = "contextlib._GeneratorContextManager.__enter__\ncalls: 51\ntime: 0.008804s"];
    "pandas._config.config.config_prefix" [color = "#e5e5e5ff", label = "pandas._config.config.config_prefix\ncalls: 38\ntime: 0.001457s"];
    "pandas._config.config.wrap" [color = "#e5e5e5ff", label = "pandas._config.config.wrap\ncalls: 57\ntime: 0.000292s"];
    "pandas._config.config.inner" [color = "#e4e5e5ff", label = "pandas._config.config.inner\ncalls: 90\ntime: 0.014670s"];
    "pandas._config.config.register_option" [color = "#e5e5e5ff", label = "pandas._config.config.register_option\ncalls: 54\ntime: 0.013335s"];
    "contextlib._GeneratorContextManager.__exit__" [color = "#e5e5e5ff", label = "contextlib._GeneratorContextManager.__exit__\ncalls: 51\ntime: 0.002136s"];
    "pandas._config.display.<module>" [color = "#e5e5e5ff", label = "pandas._config.display.<module>\ncalls: 1\ntime: 0.000656s"];
    "pandas._config.display.detect_console_encoding" [color = "#e5e5e5ff", label = "pandas._config.display.detect_console_encoding\ncalls: 1\ntime: 0.000016s"];
    "pandas._config.localization.<module>" [color = "#e5e5e5ff", label = "pandas._config.localization.<module>\ncalls: 1\ntime: 0.000164s"];
    "locale.getlocale" [color = "#e5e5e5ff", label = "locale.getlocale\ncalls: 2\ntime: 0.000206s"];
    "locale._parse_localename" [color = "#e5e5e5ff", label = "locale._parse_localename\ncalls: 2\ntime: 0.000136s"];
    "locale.normalize" [color = "#e5e5e5ff", label = "locale.normalize\ncalls: 2\ntime: 0.000064s"];
    "calendar._localized_day.__getitem__" [color = "#e5e5e5ff", label = "calendar._localized_day.__getitem__\ncalls: 14\ntime: 0.000149s"];
    "calendar._localized_month.__getitem__" [color = "#e5e5e5ff", label = "calendar._localized_month.__getitem__\ncalls: 26\ntime: 0.000294s"];
    "calendar.<lambda>" [color = "#e5e5e5ff", label = "calendar.<lambda>\ncalls: 2\ntime: 0.000007s"];
    "re.escape" [color = "#e5e5e5ff", label = "re.escape\ncalls: 50\ntime: 0.001254s"];
    "re._subx" [color = "#e5e5e5ff", label = "re._subx\ncalls: 15\ntime: 0.001197s"];
    "re._compile_repl" [color = "#e5e5e5ff", label = "re._compile_repl\ncalls: 3\ntime: 0.001007s"];
    "sre_parse.parse_template" [color = "#e5e5e5ff", label = "sre_parse.parse_template\ncalls: 3\ntime: 0.000902s"];
    "sre_parse.addgroup" [color = "#e5e5e5ff", label = "sre_parse.addgroup\ncalls: 2\ntime: 0.000023s"];
    "dateutil.relativedelta.<module>" [color = "#e5e5e5ff", label = "dateutil.relativedelta.<module>\ncalls: 1\ntime: 0.003433s"];
    "dateutil._common.<module>" [color = "#e5e5e5ff", label = "dateutil._common.<module>\ncalls: 1\ntime: 0.000080s"];
    "dateutil._common.weekday" [color = "#e5e5e5ff", label = "dateutil._common.weekday\ncalls: 1\ntime: 0.000012s"];
    "dateutil.relativedelta.<genexpr>" [color = "#e5e5e5ff", label = "dateutil.relativedelta.<genexpr>\ncalls: 8\ntime: 0.000169s"];
    "dateutil._common.weekday.__init__" [color = "#e5e5e5ff", label = "dateutil._common.weekday.__init__\ncalls: 14\ntime: 0.000069s"];
    "dateutil.relativedelta.relativedelta" [color = "#e5e5e5ff", label = "dateutil.relativedelta.relativedelta\ncalls: 1\ntime: 0.000032s"];
    "Components" [color = "#e5e5e5ff", label = "Components\ncalls: 1\ntime: 0.000032s"];
    "numpy.core.getlimits.iinfo.min" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo.min\ncalls: 5\ntime: 0.000067s"];
    "dateutil.parser.<module>" [color = "#e5e5e5ff", label = "dateutil.parser.<module>\ncalls: 1\ntime: 0.015818s"];
    "dateutil.parser._parser.<module>" [color = "#e5e5e5ff", label = "dateutil.parser._parser.<module>\ncalls: 1\ntime: 0.004300s"];
    "dateutil.parser._parser._timelex" [color = "#e5e5e5ff", label = "dateutil.parser._parser._timelex\ncalls: 1\ntime: 0.002599s"];
    "dateutil.parser._parser._resultbase" [color = "#e5e5e5ff", label = "dateutil.parser._parser._resultbase\ncalls: 1\ntime: 0.000009s"];
    "dateutil.parser._parser.parserinfo" [color = "#e5e5e5ff", label = "dateutil.parser._parser.parserinfo\ncalls: 1\ntime: 0.000048s"];
    "dateutil.parser._parser._ymd" [color = "#e5e5e5ff", label = "dateutil.parser._parser._ymd\ncalls: 1\ntime: 0.000016s"];
    "dateutil.parser._parser.parser" [color = "#e5e5e5ff", label = "dateutil.parser._parser.parser\ncalls: 1\ntime: 0.000100s"];
    "dateutil.parser._parser._result" [color = "#e5e5e5ff", label = "dateutil.parser._parser._result\ncalls: 2\ntime: 0.000080s"];
    "dateutil.parser._parser.parser.__init__" [color = "#e5e5e5ff", label = "dateutil.parser._parser.parser.__init__\ncalls: 1\ntime: 0.000535s"];
    "dateutil.parser._parser.parserinfo.__init__" [color = "#e5e5e5ff", label = "dateutil.parser._parser.parserinfo.__init__\ncalls: 1\ntime: 0.000495s"];
    "dateutil.parser._parser.parserinfo._convert" [color = "#e5e5e5ff", label = "dateutil.parser._parser.parserinfo._convert\ncalls: 7\ntime: 0.000355s"];
    "dateutil.parser._parser._tzparser" [color = "#e5e5e5ff", label = "dateutil.parser._parser._tzparser\ncalls: 1\ntime: 0.000136s"];
    "dateutil.parser._parser._attr" [color = "#e5e5e5ff", label = "dateutil.parser._parser._attr\ncalls: 1\ntime: 0.000006s"];
    "dateutil.parser._parser.ParserError" [color = "#e5e5e5ff", label = "dateutil.parser._parser.ParserError\ncalls: 1\ntime: 0.000008s"];
    "dateutil.parser._parser.UnknownTimezoneWarning" [color = "#e5e5e5ff", label = "dateutil.parser._parser.UnknownTimezoneWarning\ncalls: 1\ntime: 0.000005s"];
    "dateutil.parser.isoparser.<module>" [color = "#e5e5e5ff", label = "dateutil.parser.isoparser.<module>\ncalls: 1\ntime: 0.004530s"];
    "dateutil.parser.isoparser.isoparser" [color = "#e5e5e5ff", label = "dateutil.parser.isoparser.isoparser\ncalls: 1\ntime: 0.004309s"];
    "dateutil.parser.isoparser._takes_ascii" [color = "#e5e5e5ff", label = "dateutil.parser.isoparser._takes_ascii\ncalls: 4\ntime: 0.000310s"];
    "dateutil.parser.isoparser.isoparser.__init__" [color = "#e5e5e5ff", label = "dateutil.parser.isoparser.isoparser.__init__\ncalls: 1\ntime: 0.000005s"];
    "dateutil.parser.__deprecate_private_class" [color = "#e5e5e5ff", label = "dateutil.parser.__deprecate_private_class\ncalls: 3\ntime: 0.000177s"];
    "dateutil.parser.private_class" [color = "#e5e5e5ff", label = "dateutil.parser.private_class\ncalls: 3\ntime: 0.000022s"];
    "dateutil.parser.__deprecated_private_func" [color = "#e5e5e5ff", label = "dateutil.parser.__deprecated_private_func\ncalls: 1\ntime: 0.000115s"];
    "fractions.<module>" [color = "#e5e5e5ff", label = "fractions.<module>\ncalls: 1\ntime: 0.068648s"];
    "fractions.Fraction" [color = "#e5e5e5ff", label = "fractions.Fraction\ncalls: 1\ntime: 0.000206s"];
    "fractions._operator_fallbacks" [color = "#e5e5e5ff", label = "fractions._operator_fallbacks\ncalls: 4\ntime: 0.000055s"];
    "pandas.core.config_init.<module>" [color = "#e5e5e5ff", label = "pandas.core.config_init.<module>\ncalls: 1\ntime: 0.015883s"];
    "pandas._config.config.is_nonnegative_int" [color = "#e5e5e5ff", label = "pandas._config.config.is_nonnegative_int\ncalls: 3\ntime: 0.000024s"];
    "pandas._config.config.is_one_of_factory" [color = "#e5e5e5ff", label = "pandas._config.config.is_one_of_factory\ncalls: 8\ntime: 0.000444s"];
    "pandas._config.config.<listcomp>" [color = "#e5e5e5ff", label = "pandas._config.config.<listcomp>\ncalls: 16\ntime: 0.000116s"];
    "pandas.core.config_init.is_terminal" [color = "#e5e5e5ff", label = "pandas.core.config_init.is_terminal\ncalls: 1\ntime: 0.000011s"];
    "pandas._config.config.deprecate_option" [color = "#e5e5e5ff", label = "pandas._config.config.deprecate_option\ncalls: 1\ntime: 0.000672s"];
    "pandas.core.config_init.register_plotting_backend_cb" [color = "#e5e5e5ff", label = "pandas.core.config_init.register_plotting_backend_cb\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.api.<module>" [color = "#e1e5e5ff", label = "pandas.core.api.<module>\ncalls: 1\ntime: 1.236600s"];
    "pandas.core.dtypes.dtypes.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.<module>\ncalls: 1\ntime: 0.087914s"];
    "pandas._typing.<module>" [color = "#e5e5e5ff", label = "pandas._typing.<module>\ncalls: 1\ntime: 0.027426s"];
    "typing._ForwardRef.__init__" [color = "#e4e5e5ff", label = "typing._ForwardRef.__init__\ncalls: 90\ntime: 0.002254s"];
    "typing._ForwardRef.__hash__" [color = "#e3e5e5ff", label = "typing._ForwardRef.__hash__\ncalls: 336\ntime: 0.001240s"];
    "typing._ForwardRef._get_type_vars" [color = "#e5e5e5ff", label = "typing._ForwardRef._get_type_vars\ncalls: 45\ntime: 0.000155s"];
    "typing.GenericMeta.__subclasscheck__" [color = "#e0e5e5ff", label = "typing.GenericMeta.__subclasscheck__\ncalls: 716\ntime: 0.088815s"];
    "typing.__extrahook__" [color = "#e4e5e5ff", label = "typing.__extrahook__\ncalls: 73\ntime: 0.023827s"];
    "typing.CallableMeta.__getitem__" [color = "#e5e5e5ff", label = "typing.CallableMeta.__getitem__\ncalls: 46\ntime: 0.038634s"];
    "typing.CallableMeta.__hash__" [color = "#e4e5e5ff", label = "typing.CallableMeta.__hash__\ncalls: 196\ntime: 0.000656s"];
    "typing.CallableMeta.__getitem_inner__" [color = "#e5e5e5ff", label = "typing.CallableMeta.__getitem_inner__\ncalls: 10\ntime: 0.019237s"];
    "typing.CallableMeta._subs_tree" [color = "#e5e5e5ff", label = "typing.CallableMeta._subs_tree\ncalls: 31\ntime: 0.007034s"];
    "typing.CallableMeta._get_type_vars" [color = "#e5e5e5ff", label = "typing.CallableMeta._get_type_vars\ncalls: 13\ntime: 0.000049s"];
    "pandas.core.dtypes.base.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.base.<module>\ncalls: 1\ntime: 0.010880s"];
    "pandas.errors.<module>" [color = "#e5e5e5ff", label = "pandas.errors.<module>\ncalls: 1\ntime: 0.000744s"];
    "pandas.errors.PerformanceWarning" [color = "#e5e5e5ff", label = "pandas.errors.PerformanceWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.UnsupportedFunctionCall" [color = "#e5e5e5ff", label = "pandas.errors.UnsupportedFunctionCall\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.UnsortedIndexError" [color = "#e5e5e5ff", label = "pandas.errors.UnsortedIndexError\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.ParserError" [color = "#e5e5e5ff", label = "pandas.errors.ParserError\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.DtypeWarning" [color = "#e5e5e5ff", label = "pandas.errors.DtypeWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.EmptyDataError" [color = "#e5e5e5ff", label = "pandas.errors.EmptyDataError\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.ParserWarning" [color = "#e5e5e5ff", label = "pandas.errors.ParserWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.MergeError" [color = "#e5e5e5ff", label = "pandas.errors.MergeError\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.AccessorRegistrationWarning" [color = "#e5e5e5ff", label = "pandas.errors.AccessorRegistrationWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.errors.AbstractMethodError" [color = "#e5e5e5ff", label = "pandas.errors.AbstractMethodError\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.dtypes.generic.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.generic.<module>\ncalls: 1\ntime: 0.001360s"];
    "pandas.core.dtypes.generic.create_pandas_abc_type" [color = "#e5e5e5ff", label = "pandas.core.dtypes.generic.create_pandas_abc_type\ncalls: 24\ntime: 0.000815s"];
    "pandas.core.dtypes.generic._ABCGeneric" [color = "#e5e5e5ff", label = "pandas.core.dtypes.generic._ABCGeneric\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.dtypes.base.ExtensionDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.base.ExtensionDtype\ncalls: 1\ntime: 0.002615s"];
    "pandas.core.dtypes.inference.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.<module>\ncalls: 1\ntime: 0.000151s"];
    "pandas.core.dtypes.dtypes.Registry" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.Registry\ncalls: 1\ntime: 0.002283s"];
    "pandas.core.dtypes.dtypes.Registry.__init__" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.Registry.__init__\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.dtypes.dtypes.PandasExtensionDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.PandasExtensionDtype\ncalls: 1\ntime: 0.003032s"];
    "pandas.core.dtypes.dtypes.CategoricalDtypeType" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.CategoricalDtypeType\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.dtypes.dtypes.CategoricalDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.CategoricalDtype\ncalls: 1\ntime: 0.006501s"];
    "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.register_extension_dtype\ncalls: 15\ntime: 0.000369s"];
    "pandas.core.dtypes.dtypes.Registry.register" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.Registry.register\ncalls: 15\ntime: 0.000078s"];
    "pandas.core.dtypes.dtypes.DatetimeTZDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.DatetimeTZDtype\ncalls: 1\ntime: 0.009685s"];
    "pandas.core.dtypes.dtypes.PeriodDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.PeriodDtype\ncalls: 1\ntime: 0.006632s"];
    "sre_parse.<listcomp>" [color = "#e5e5e5ff", label = "sre_parse.<listcomp>\ncalls: 2\ntime: 0.000081s"];
    "pandas.core.dtypes.dtypes.IntervalDtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.IntervalDtype\ncalls: 1\ntime: 0.005662s"];
    "pandas.core.dtypes.missing.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.missing.<module>\ncalls: 1\ntime: 0.006716s"];
    "pandas.core.dtypes.common.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.<module>\ncalls: 1\ntime: 0.003123s"];
    "pandas.core.dtypes.common.<setcomp>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.<setcomp>\ncalls: 1\ntime: 0.001184s"];
    "numpy.core._dtype._name_get" [color = "#e4e5e5ff", label = "numpy.core._dtype._name_get\ncalls: 79\ntime: 0.005429s"];
    "numpy.core._dtype._name_includes_bit_suffix" [color = "#e4e5e5ff", label = "numpy.core._dtype._name_includes_bit_suffix\ncalls: 79\ntime: 0.002102s"];
    "numpy.core.numerictypes.issubdtype" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.issubdtype\ncalls: 27\ntime: 0.001276s"];
    "numpy.core.numerictypes.issubclass_" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.issubclass_\ncalls: 54\ntime: 0.000390s"];
    "pandas.core.algorithms.<module>" [color = "#e5e5e5ff", label = "pandas.core.algorithms.<module>\ncalls: 1\ntime: 0.073642s"];
    "pandas.util.<module>" [color = "#e5e5e5ff", label = "pandas.util.<module>\ncalls: 1\ntime: 0.035849s"];
    "pandas.util._decorators.<module>" [color = "#e5e5e5ff", label = "pandas.util._decorators.<module>\ncalls: 1\ntime: 0.016003s"];
    "pandas.util._decorators.Substitution" [color = "#e5e5e5ff", label = "pandas.util._decorators.Substitution\ncalls: 1\ntime: 0.000009s"];
    "pandas.util._decorators.Appender" [color = "#e5e5e5ff", label = "pandas.util._decorators.Appender\ncalls: 1\ntime: 0.000051s"];
    "pandas.core.util.hashing.<module>" [color = "#e5e5e5ff", label = "pandas.core.util.hashing.<module>\ncalls: 1\ntime: 0.010547s"];
    "pandas.core.dtypes.cast.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.<module>\ncalls: 1\ntime: 0.005727s"];
    "pandas.util._validators.<module>" [color = "#e5e5e5ff", label = "pandas.util._validators.<module>\ncalls: 1\ntime: 0.002441s"];
    "pandas.util._testing" [color = "#e5e5e5ff", label = "pandas.util._testing\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.common.<module>" [color = "#e5e5e5ff", label = "pandas.core.common.<module>\ncalls: 1\ntime: 0.005377s"];
    "pandas.core.common.SettingWithCopyError" [color = "#e5e5e5ff", label = "pandas.core.common.SettingWithCopyError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.common.SettingWithCopyWarning" [color = "#e5e5e5ff", label = "pandas.core.common.SettingWithCopyWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.construction.<module>" [color = "#e5e5e5ff", label = "pandas.core.construction.<module>\ncalls: 1\ntime: 0.009774s"];
    "pandas.core.indexers.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexers.<module>\ncalls: 1\ntime: 0.000112s"];
    "pandas.util._decorators.Substitution.__init__" [color = "#e4e5e5ff", label = "pandas.util._decorators.Substitution.__init__\ncalls: 161\ntime: 0.000793s"];
    "pandas.util._decorators.Appender.__init__" [color = "#e2e5e5ff", label = "pandas.util._decorators.Appender.__init__\ncalls: 432\ntime: 0.002831s"];
    "pandas.core.dtypes.generic._check" [color = "#dbe4e5ff", label = "pandas.core.dtypes.generic._check\ncalls: 1415\ntime: 0.006312s"];
    "typing._Union._get_type_vars" [color = "#e5e5e5ff", label = "typing._Union._get_type_vars\ncalls: 26\ntime: 0.000140s"];
    "pandas.util._decorators.Appender.__call__" [color = "#e1e5e5ff", label = "pandas.util._decorators.Appender.__call__\ncalls: 432\ntime: 0.168649s"];
    "pandas.util._decorators.Substitution.__call__" [color = "#e4e5e5ff", label = "pandas.util._decorators.Substitution.__call__\ncalls: 161\ntime: 0.001370s"];
    "pandas.core.algorithms.SelectN" [color = "#e5e5e5ff", label = "pandas.core.algorithms.SelectN\ncalls: 1\ntime: 0.000011s"];
    "pandas.core.algorithms.SelectNSeries" [color = "#e5e5e5ff", label = "pandas.core.algorithms.SelectNSeries\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.algorithms.SelectNFrame" [color = "#e5e5e5ff", label = "pandas.core.algorithms.SelectNFrame\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.algorithms._view_wrapper" [color = "#e5e5e5ff", label = "pandas.core.algorithms._view_wrapper\ncalls: 12\ntime: 0.000071s"];
    "pandas.core.arrays.<module>" [color = "#e4e5e5ff", label = "pandas.core.arrays.<module>\ncalls: 1\ntime: 0.338502s"];
    "pandas.core.arrays.base.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.base.<module>\ncalls: 1\ntime: 0.063749s"];
    "pandas.compat.numpy.function.<module>" [color = "#e5e5e5ff", label = "pandas.compat.numpy.function.<module>\ncalls: 1\ntime: 0.001292s"];
    "pandas.compat.numpy.function.CompatValidator" [color = "#e5e5e5ff", label = "pandas.compat.numpy.function.CompatValidator\ncalls: 1\ntime: 0.000006s"];
    "pandas.compat.numpy.function.CompatValidator.__init__" [color = "#e5e5e5ff", label = "pandas.compat.numpy.function.CompatValidator.__init__\ncalls: 24\ntime: 0.000172s"];
    "distutils.version.LooseVersion.__ge__" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion.__ge__\ncalls: 2\ntime: 0.000141s"];
    "pandas.core.ops.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.<module>\ncalls: 1\ntime: 0.038314s"];
    "pandas.core.ops.array_ops.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.<module>\ncalls: 1\ntime: 0.014853s"];
    "pandas.core.ops.missing.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.missing.<module>\ncalls: 1\ntime: 0.002625s"];
    "pandas.core.ops.roperator.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.roperator.<module>\ncalls: 1\ntime: 0.000020s"];
    "pandas.core.ops.dispatch.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.dispatch.<module>\ncalls: 1\ntime: 0.000996s"];
    "pandas.core.ops.invalid.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.invalid.<module>\ncalls: 1\ntime: 0.000011s"];
    "pandas.core.ops.common.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.common.<module>\ncalls: 1\ntime: 0.000082s"];
    "pandas.core.ops.docstrings.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.docstrings.<module>\ncalls: 1\ntime: 0.004207s"];
    "pandas.core.ops.mask_ops.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.mask_ops.<module>\ncalls: 1\ntime: 0.003026s"];
    "pandas.core.ops.methods.<module>" [color = "#e5e5e5ff", label = "pandas.core.ops.methods.<module>\ncalls: 1\ntime: 0.000067s"];
    "pandas.core.missing.<module>" [color = "#e5e5e5ff", label = "pandas.core.missing.<module>\ncalls: 1\ntime: 0.003060s"];
    "pandas.compat._optional.<module>" [color = "#e5e5e5ff", label = "pandas.compat._optional.<module>\ncalls: 1\ntime: 0.000039s"];
    "pandas.core.sorting.<module>" [color = "#e5e5e5ff", label = "pandas.core.sorting.<module>\ncalls: 1\ntime: 0.000393s"];
    "pandas.core.sorting._KeyMapper" [color = "#e5e5e5ff", label = "pandas.core.sorting._KeyMapper\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.arrays.base.ExtensionArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.base.ExtensionArray\ncalls: 1\ntime: 0.007580s"];
    "pandas.core.arrays.base.ExtensionOpsMixin" [color = "#e5e5e5ff", label = "pandas.core.arrays.base.ExtensionOpsMixin\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.arrays.base.ExtensionScalarOpsMixin" [color = "#e5e5e5ff", label = "pandas.core.arrays.base.ExtensionScalarOpsMixin\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.arrays.boolean.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean.<module>\ncalls: 1\ntime: 0.031802s"];
    "pandas.core.nanops.<module>" [color = "#e5e5e5ff", label = "pandas.core.nanops.<module>\ncalls: 1\ntime: 0.023082s"];
    "pandas.compat._optional.import_optional_dependency" [color = "#e5e5e5ff", label = "pandas.compat._optional.import_optional_dependency\ncalls: 1\ntime: 0.006945s"];
    "importlib.import_module" [color = "#e4e5e5ff", label = "importlib.import_module\ncalls: 16\ntime: 0.247629s"];
    "_gcd_import" [color = "#e4e5e5ff", label = "_gcd_import\ncalls: 16\ntime: 0.245531s"];
    "_sanity_check" [color = "#e5e5e5ff", label = "_sanity_check\ncalls: 16\ntime: 0.000119s"];
    "pandas._config.config.CallableDynamicDoc.__call__" [color = "#e5e5e5ff", label = "pandas._config.config.CallableDynamicDoc.__call__\ncalls: 1\ntime: 0.000407s"];
    "pandas._config.config._get_option" [color = "#e5e5e5ff", label = "pandas._config.config._get_option\ncalls: 1\ntime: 0.000352s"];
    "pandas._config.config._get_single_key" [color = "#e5e5e5ff", label = "pandas._config.config._get_single_key\ncalls: 1\ntime: 0.000244s"];
    "pandas._config.config._select_options" [color = "#e5e5e5ff", label = "pandas._config.config._select_options\ncalls: 1\ntime: 0.000009s"];
    "pandas._config.config._warn_if_deprecated" [color = "#e5e5e5ff", label = "pandas._config.config._warn_if_deprecated\ncalls: 1\ntime: 0.000062s"];
    "pandas._config.config._get_deprecated_option" [color = "#e5e5e5ff", label = "pandas._config.config._get_deprecated_option\ncalls: 2\ntime: 0.000021s"];
    "pandas._config.config._translate_key" [color = "#e5e5e5ff", label = "pandas._config.config._translate_key\ncalls: 1\ntime: 0.000032s"];
    "pandas._config.config._get_root" [color = "#e5e5e5ff", label = "pandas._config.config._get_root\ncalls: 1\ntime: 0.000016s"];
    "pandas.core.nanops.set_use_bottleneck" [color = "#e5e5e5ff", label = "pandas.core.nanops.set_use_bottleneck\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.nanops.disallow" [color = "#e5e5e5ff", label = "pandas.core.nanops.disallow\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.nanops.bottleneck_switch" [color = "#e5e5e5ff", label = "pandas.core.nanops.bottleneck_switch\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.nanops.disallow.__init__" [color = "#e5e5e5ff", label = "pandas.core.nanops.disallow.__init__\ncalls: 13\ntime: 0.005225s"];
    "pandas.core.nanops.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.nanops.<genexpr>\ncalls: 34\ntime: 0.004670s"];
    "pandas.core.dtypes.common.pandas_dtype" [color = "#e4e5e5ff", label = "pandas.core.dtypes.common.pandas_dtype\ncalls: 80\ntime: 0.004704s"];
    "pandas.core.dtypes.dtypes.Registry.find" [color = "#e3e5e5ff", label = "pandas.core.dtypes.dtypes.Registry.find\ncalls: 261\ntime: 0.005666s"];
    "pandas.core.dtypes.dtypes.construct_from_string" [color = "#e4e5e5ff", label = "pandas.core.dtypes.dtypes.construct_from_string\ncalls: 80\ntime: 0.001281s"];
    "pandas.core.dtypes.inference.is_hashable" [color = "#e4e5e5ff", label = "pandas.core.dtypes.inference.is_hashable\ncalls: 118\ntime: 0.000684s"];
    "pandas.core.nanops.disallow.__call__" [color = "#e5e5e5ff", label = "pandas.core.nanops.disallow.__call__\ncalls: 13\ntime: 0.001004s"];
    "pandas.core.nanops.bottleneck_switch.__init__" [color = "#e5e5e5ff", label = "pandas.core.nanops.bottleneck_switch.__init__\ncalls: 6\ntime: 0.000031s"];
    "pandas.core.nanops.bottleneck_switch.__call__" [color = "#e5e5e5ff", label = "pandas.core.nanops.bottleneck_switch.__call__\ncalls: 6\ntime: 0.000557s"];
    "pandas.core.nanops._nanminmax" [color = "#e5e5e5ff", label = "pandas.core.nanops._nanminmax\ncalls: 2\ntime: 0.000262s"];
    "pandas.core.nanops.make_nancomp" [color = "#e5e5e5ff", label = "pandas.core.nanops.make_nancomp\ncalls: 6\ntime: 0.000033s"];
    "pandas.core.arrays.masked.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.masked.<module>\ncalls: 1\ntime: 0.000411s"];
    "pandas.core.arrays.masked.BaseMaskedArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.masked.BaseMaskedArray\ncalls: 1\ntime: 0.000031s"];
    "pandas.core.arrays.boolean.BooleanDtype" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean.BooleanDtype\ncalls: 1\ntime: 0.000023s"];
    "pandas.core.arrays.boolean.BooleanArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean.BooleanArray\ncalls: 1\ntime: 0.000127s"];
    "pandas.core.arrays.base._add_logical_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.base._add_logical_ops\ncalls: 1\ntime: 0.000333s"];
    "pandas.core.arrays.boolean._create_logical_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean._create_logical_method\ncalls: 6\ntime: 0.000199s"];
    "pandas.compat.set_function_name" [color = "#e3e5e5ff", label = "pandas.compat.set_function_name\ncalls: 212\ntime: 0.001559s"];
    "pandas.core.arrays.base._add_comparison_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.base._add_comparison_ops\ncalls: 6\ntime: 0.003944s"];
    "pandas.core.arrays.boolean._create_comparison_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean._create_comparison_method\ncalls: 6\ntime: 0.000161s"];
    "pandas.core.arrays.base._add_arithmetic_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.base._add_arithmetic_ops\ncalls: 4\ntime: 0.007058s"];
    "pandas.core.arrays.boolean._create_arithmetic_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.boolean._create_arithmetic_method\ncalls: 16\ntime: 0.000456s"];
    "pandas.core.arrays.categorical.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.categorical.<module>\ncalls: 1\ntime: 0.033973s"];
    "pandas.core.accessor.<module>" [color = "#e5e5e5ff", label = "pandas.core.accessor.<module>\ncalls: 1\ntime: 0.003147s"];
    "pandas.core.accessor.DirNamesMixin" [color = "#e5e5e5ff", label = "pandas.core.accessor.DirNamesMixin\ncalls: 1\ntime: 0.001468s"];
    "pandas.core.accessor.PandasDelegate" [color = "#e5e5e5ff", label = "pandas.core.accessor.PandasDelegate\ncalls: 1\ntime: 0.000012s"];
    "pandas.core.accessor.CachedAccessor" [color = "#e5e5e5ff", label = "pandas.core.accessor.CachedAccessor\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.base.<module>" [color = "#e5e5e5ff", label = "pandas.core.base.<module>\ncalls: 1\ntime: 0.006156s"];
    "pandas.core.base.PandasObject" [color = "#e5e5e5ff", label = "pandas.core.base.PandasObject\ncalls: 1\ntime: 0.000016s"];
    "pandas.core.base.NoNewAttributesMixin" [color = "#e5e5e5ff", label = "pandas.core.base.NoNewAttributesMixin\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.base.GroupByError" [color = "#e5e5e5ff", label = "pandas.core.base.GroupByError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.base.DataError" [color = "#e5e5e5ff", label = "pandas.core.base.DataError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.base.SpecificationError" [color = "#e5e5e5ff", label = "pandas.core.base.SpecificationError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.base.SelectionMixin" [color = "#e5e5e5ff", label = "pandas.core.base.SelectionMixin\ncalls: 1\ntime: 0.000101s"];
    "pandas.core.base.ShallowMixin" [color = "#e5e5e5ff", label = "pandas.core.base.ShallowMixin\ncalls: 1\ntime: 0.000045s"];
    "pandas.core.base.IndexOpsMixin" [color = "#e5e5e5ff", label = "pandas.core.base.IndexOpsMixin\ncalls: 1\ntime: 0.004740s"];
    "pandas.io.formats.console.<module>" [color = "#e5e5e5ff", label = "pandas.io.formats.console.<module>\ncalls: 1\ntime: 0.000038s"];
    "pandas.core.arrays.categorical.Categorical" [color = "#e5e5e5ff", label = "pandas.core.arrays.categorical.Categorical\ncalls: 1\ntime: 0.008764s"];
    "pandas.core.dtypes.dtypes.CategoricalDtype.__init__" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.CategoricalDtype.__init__\ncalls: 1\ntime: 0.000093s"];
    "pandas.core.dtypes.dtypes.CategoricalDtype._finalize" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.CategoricalDtype._finalize\ncalls: 1\ntime: 0.000053s"];
    "pandas.core.dtypes.dtypes.validate_ordered" [color = "#e5e5e5ff", label = "pandas.core.dtypes.dtypes.validate_ordered\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.arrays.categorical._cat_compare_op" [color = "#e5e5e5ff", label = "pandas.core.arrays.categorical._cat_compare_op\ncalls: 6\ntime: 0.000881s"];
    "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#e4e5e5ff", label = "pandas.core.ops.common.unpack_zerodim_and_defer\ncalls: 98\ntime: 0.000506s"];
    "pandas.core.ops.common.wrapper" [color = "#e4e5e5ff", label = "pandas.core.ops.common.wrapper\ncalls: 98\ntime: 0.009149s"];
    "pandas.core.ops.common._unpack_zerodim_and_defer" [color = "#e4e5e5ff", label = "pandas.core.ops.common._unpack_zerodim_and_defer\ncalls: 98\ntime: 0.007460s"];
    "pandas.util._decorators.deprecate_kwarg" [color = "#e5e5e5ff", label = "pandas.util._decorators.deprecate_kwarg\ncalls: 7\ntime: 0.000060s"];
    "pandas.util._decorators._deprecate_kwarg" [color = "#e5e5e5ff", label = "pandas.util._decorators._deprecate_kwarg\ncalls: 7\ntime: 0.001178s"];
    "typing.cast" [color = "#e5e5e5ff", label = "typing.cast\ncalls: 10\ntime: 0.000035s"];
    "pandas.core.accessor.delegate_names" [color = "#e5e5e5ff", label = "pandas.core.accessor.delegate_names\ncalls: 16\ntime: 0.000102s"];
    "pandas.core.arrays.categorical.CategoricalAccessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.categorical.CategoricalAccessor\ncalls: 1\ntime: 0.000016s"];
    "pandas.core.accessor.add_delegate_accessors" [color = "#e5e5e5ff", label = "pandas.core.accessor.add_delegate_accessors\ncalls: 16\ntime: 0.006747s"];
    "pandas.core.accessor._add_delegate_accessors" [color = "#e5e5e5ff", label = "pandas.core.accessor._add_delegate_accessors\ncalls: 16\ntime: 0.006339s"];
    "pandas.core.accessor._create_delegator_method" [color = "#e5e5e5ff", label = "pandas.core.accessor._create_delegator_method\ncalls: 67\ntime: 0.000551s"];
    "pandas.core.accessor._create_delegator_property" [color = "#e4e5e5ff", label = "pandas.core.accessor._create_delegator_property\ncalls: 118\ntime: 0.001497s"];
    "pandas.core.arrays.datetimes.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimes.<module>\ncalls: 1\ntime: 0.046422s"];
    "pandas.core.arrays.datetimelike.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike.<module>\ncalls: 1\ntime: 0.036305s"];
    "pandas.tseries.frequencies.<module>" [color = "#e5e5e5ff", label = "pandas.tseries.frequencies.<module>\ncalls: 1\ntime: 0.016032s"];
    "pandas.tseries.offsets.<module>" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.<module>\ncalls: 1\ntime: 0.009185s"];
    "dateutil.easter.<module>" [color = "#e5e5e5ff", label = "dateutil.easter.<module>\ncalls: 1\ntime: 0.000013s"];
    "pandas.tseries.offsets.DateOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.DateOffset\ncalls: 1\ntime: 0.000192s"];
    "pandas.tseries.offsets.apply_wraps" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.apply_wraps\ncalls: 16\ntime: 0.001247s"];
    "pandas.tseries.offsets.SingleConstructorOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.SingleConstructorOffset\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets._CustomMixin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets._CustomMixin\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.offsets.BusinessMixin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessMixin\ncalls: 1\ntime: 0.000008s"];
    "pandas.tseries.offsets.BusinessDay" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessDay\ncalls: 1\ntime: 0.000113s"];
    "pandas.tseries.offsets.BusinessHourMixin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessHourMixin\ncalls: 1\ntime: 0.000304s"];
    "pandas.tseries.offsets.BusinessHour" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessHour\ncalls: 1\ntime: 0.000013s"];
    "pandas.tseries.offsets.CustomBusinessDay" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.CustomBusinessDay\ncalls: 1\ntime: 0.000112s"];
    "pandas.tseries.offsets.CustomBusinessHour" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.CustomBusinessHour\ncalls: 1\ntime: 0.000019s"];
    "pandas.tseries.offsets.MonthOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.MonthOffset\ncalls: 1\ntime: 0.000109s"];
    "pandas.tseries.offsets.MonthEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.MonthEnd\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets.MonthBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.MonthBegin\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets.BusinessMonthEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessMonthEnd\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets.BusinessMonthBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessMonthBegin\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets._CustomBusinessMonth" [color = "#e5e5e5ff", label = "pandas.tseries.offsets._CustomBusinessMonth\ncalls: 1\ntime: 0.000121s"];
    "pandas.tseries.offsets.CustomBusinessMonthEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.CustomBusinessMonthEnd\ncalls: 1\ntime: 0.000005s"];
    "pandas.tseries.offsets.CustomBusinessMonthBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.CustomBusinessMonthBegin\ncalls: 1\ntime: 0.000005s"];
    "pandas.tseries.offsets.SemiMonthOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.SemiMonthOffset\ncalls: 1\ntime: 0.000117s"];
    "pandas.tseries.offsets.SemiMonthEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.SemiMonthEnd\ncalls: 1\ntime: 0.000012s"];
    "pandas.tseries.offsets.SemiMonthBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.SemiMonthBegin\ncalls: 1\ntime: 0.000010s"];
    "pandas.tseries.offsets.Week" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Week\ncalls: 1\ntime: 0.000122s"];
    "pandas.tseries.offsets._WeekOfMonthMixin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets._WeekOfMonthMixin\ncalls: 1\ntime: 0.000098s"];
    "pandas.tseries.offsets.WeekOfMonth" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.WeekOfMonth\ncalls: 1\ntime: 0.000015s"];
    "pandas.tseries.offsets.LastWeekOfMonth" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.LastWeekOfMonth\ncalls: 1\ntime: 0.000015s"];
    "pandas.tseries.offsets.QuarterOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.QuarterOffset\ncalls: 1\ntime: 0.000165s"];
    "pandas.tseries.offsets.BQuarterEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BQuarterEnd\ncalls: 1\ntime: 0.000010s"];
    "pandas.tseries.offsets.BQuarterBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BQuarterBegin\ncalls: 1\ntime: 0.000009s"];
    "pandas.tseries.offsets.QuarterEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.QuarterEnd\ncalls: 1\ntime: 0.000009s"];
    "pandas.tseries.offsets.QuarterBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.QuarterBegin\ncalls: 1\ntime: 0.000009s"];
    "pandas.tseries.offsets.YearOffset" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.YearOffset\ncalls: 1\ntime: 0.000114s"];
    "pandas.tseries.offsets.BYearEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BYearEnd\ncalls: 1\ntime: 0.000009s"];
    "pandas.tseries.offsets.BYearBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BYearBegin\ncalls: 1\ntime: 0.000009s"];
    "pandas.tseries.offsets.YearEnd" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.YearEnd\ncalls: 1\ntime: 0.000008s"];
    "pandas.tseries.offsets.YearBegin" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.YearBegin\ncalls: 1\ntime: 0.000008s"];
    "pandas.tseries.offsets.FY5253" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.FY5253\ncalls: 1\ntime: 0.000114s"];
    "pandas.tseries.offsets.FY5253Quarter" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.FY5253Quarter\ncalls: 1\ntime: 0.000123s"];
    "pandas.tseries.offsets.Easter" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Easter\ncalls: 1\ntime: 0.000101s"];
    "pandas.tseries.offsets.Tick" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Tick\ncalls: 1\ntime: 0.000226s"];
    "pandas.tseries.offsets._tick_comp" [color = "#e5e5e5ff", label = "pandas.tseries.offsets._tick_comp\ncalls: 4\ntime: 0.000035s"];
    "pandas.tseries.offsets.Day" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Day\ncalls: 1\ntime: 0.000032s"];
    "pandas.tseries.offsets.Hour" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Hour\ncalls: 1\ntime: 0.000028s"];
    "pandas.tseries.offsets.Minute" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Minute\ncalls: 1\ntime: 0.000026s"];
    "pandas.tseries.offsets.Second" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Second\ncalls: 1\ntime: 0.000025s"];
    "pandas.tseries.offsets.Milli" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Milli\ncalls: 1\ntime: 0.000025s"];
    "pandas.tseries.offsets.Micro" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Micro\ncalls: 1\ntime: 0.000025s"];
    "pandas.tseries.offsets.Nano" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Nano\ncalls: 1\ntime: 0.000026s"];
    "pandas.tseries.offsets.BusinessDay.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.BusinessDay.__init__\ncalls: 1\ntime: 0.000012s"];
    "pandas.tseries.offsets.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.<dictcomp>\ncalls: 1\ntime: 0.000075s"];
    "pandas.tseries.offsets.Day.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Day.__init__\ncalls: 1\ntime: 0.000010s"];
    "pandas.tseries.offsets.Hour.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Hour.__init__\ncalls: 1\ntime: 0.000007s"];
    "pandas.tseries.offsets.Minute.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Minute.__init__\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.offsets.Second.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Second.__init__\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.offsets.Milli.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Milli.__init__\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.offsets.Micro.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Micro.__init__\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.offsets.Nano.__init__" [color = "#e5e5e5ff", label = "pandas.tseries.offsets.Nano.__init__\ncalls: 1\ntime: 0.000006s"];
    "pandas.tseries.frequencies._FrequencyInferer" [color = "#e5e5e5ff", label = "pandas.tseries.frequencies._FrequencyInferer\ncalls: 1\ntime: 0.000142s"];
    "pandas.tseries.frequencies._TimedeltaFrequencyInferer" [color = "#e5e5e5ff", label = "pandas.tseries.frequencies._TimedeltaFrequencyInferer\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.arrays.datetimelike.AttributesMixin" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike.AttributesMixin\ncalls: 1\ntime: 0.002864s"];
    "pandas.core.arrays.datetimelike.DatelikeOps" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike.DatelikeOps\ncalls: 1\ntime: 0.000054s"];
    "pandas.core.arrays.datetimelike.TimelikeOps" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike.TimelikeOps\ncalls: 1\ntime: 0.001958s"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin\ncalls: 1\ntime: 0.007586s"];
    "pandas.core.ops.invalid.make_invalid_op" [color = "#e4e5e5ff", label = "pandas.core.ops.invalid.make_invalid_op\ncalls: 108\ntime: 0.000674s"];
    "pandas.core.arrays.datetimelike._datetimelike_array_cmp" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimelike._datetimelike_array_cmp\ncalls: 6\ntime: 0.000936s"];
    "pandas.core.arrays._ranges.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays._ranges.<module>\ncalls: 1\ntime: 0.001571s"];
    "pandas.core.arrays.datetimes.DatetimeArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimes.DatetimeArray\ncalls: 1\ntime: 0.001669s"];
    "pandas.core.arrays.datetimes._field_accessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.datetimes._field_accessor\ncalls: 20\ntime: 0.000175s"];
    "pandas.core.arrays.integer.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.integer.<module>\ncalls: 1\ntime: 0.010890s"];
    "pandas.core.tools.numeric.<module>" [color = "#e5e5e5ff", label = "pandas.core.tools.numeric.<module>\ncalls: 1\ntime: 0.000214s"];
    "pandas.core.arrays.integer._IntegerDtype" [color = "#e5e5e5ff", label = "pandas.core.arrays.integer._IntegerDtype\ncalls: 1\ntime: 0.000029s"];
    "pandas.core.arrays.integer.IntegerArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.integer.IntegerArray\ncalls: 1\ntime: 0.000075s"];
    "pandas.core.arrays.integer._create_arithmetic_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.integer._create_arithmetic_method\ncalls: 16\ntime: 0.002539s"];
    "pandas.core.arrays.integer._create_comparison_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.integer._create_comparison_method\ncalls: 6\ntime: 0.000921s"];
    "pandas.core.arrays.interval.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.interval.<module>\ncalls: 1\ntime: 0.079848s"];
    "pandas.core.indexes.base.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.<module>\ncalls: 1\ntime: 0.065971s"];
    "pandas.core.dtypes.concat.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.concat.<module>\ncalls: 1\ntime: 0.000127s"];
    "pandas.core.indexes.frozen.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.frozen.<module>\ncalls: 1\ntime: 0.019401s"];
    "pandas.io.formats.printing.<module>" [color = "#e5e5e5ff", label = "pandas.io.formats.printing.<module>\ncalls: 1\ntime: 0.016427s"];
    "pandas.core.indexes.frozen.FrozenList" [color = "#e5e5e5ff", label = "pandas.core.indexes.frozen.FrozenList\ncalls: 1\ntime: 0.000033s"];
    "pandas.core.strings.<module>" [color = "#e5e5e5ff", label = "pandas.core.strings.<module>\ncalls: 1\ntime: 0.019184s"];
    "pandas.core.strings.StringMethods" [color = "#e5e5e5ff", label = "pandas.core.strings.StringMethods\ncalls: 1\ntime: 0.016814s"];
    "pandas.core.strings.forbid_nonstring_types" [color = "#e5e5e5ff", label = "pandas.core.strings.forbid_nonstring_types\ncalls: 58\ntime: 0.000626s"];
    "pandas.core.strings._forbid_nonstring_types" [color = "#e5e5e5ff", label = "pandas.core.strings._forbid_nonstring_types\ncalls: 58\ntime: 0.004538s"];
    "pandas.core.strings.copy" [color = "#e5e5e5ff", label = "pandas.core.strings.copy\ncalls: 16\ntime: 0.000081s"];
    "pandas.core.strings.do_copy" [color = "#e5e5e5ff", label = "pandas.core.strings.do_copy\ncalls: 16\ntime: 0.000093s"];
    "pandas.core.strings._pat_wrapper" [color = "#e5e5e5ff", label = "pandas.core.strings._pat_wrapper\ncalls: 4\ntime: 0.001467s"];
    "pandas.core.strings._noarg_wrapper" [color = "#e5e5e5ff", label = "pandas.core.strings._noarg_wrapper\ncalls: 16\ntime: 0.002024s"];
    "pandas.core.indexes.base.InvalidIndexError" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.InvalidIndexError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexes.base.Index" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index\ncalls: 1\ntime: 0.009074s"];
    "pandas.core.accessor.CachedAccessor.__init__" [color = "#e5e5e5ff", label = "pandas.core.accessor.CachedAccessor.__init__\ncalls: 8\ntime: 0.000040s"];
    "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_numeric_methods_disabled\ncalls: 5\ntime: 0.001450s"];
    "pandas.core.indexes.base._add_logical_methods" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_logical_methods\ncalls: 3\ntime: 0.005015s"];
    "pandas.core.indexes.base._make_logical_function" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._make_logical_function\ncalls: 6\ntime: 0.003358s"];
    "pandas.core.indexes.base._add_comparison_methods" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_comparison_methods\ncalls: 1\ntime: 0.000293s"];
    "pandas.core.indexes.base._make_comparison_op" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._make_comparison_op\ncalls: 6\ntime: 0.000165s"];
    "pandas.core.arrays.interval.IntervalArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.interval.IntervalArray\ncalls: 1\ntime: 0.005094s"];
    "pandas.core.arrays.numpy_.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.<module>\ncalls: 1\ntime: 0.003221s"];
    "pandas.core.arrays.numpy_.PandasDtype" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasDtype\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.arrays.numpy_.PandasArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasArray\ncalls: 1\ntime: 0.001492s"];
    "pandas.core.arrays.numpy_._create_arithmetic_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_._create_arithmetic_method\ncalls: 22\ntime: 0.000551s"];
    "pandas.core.arrays.period.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.period.<module>\ncalls: 1\ntime: 0.009131s"];
    "pandas.core.arrays.period.PeriodArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.period.PeriodArray\ncalls: 1\ntime: 0.006409s"];
    "pandas.core.arrays.period._field_accessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.period._field_accessor\ncalls: 12\ntime: 0.000102s"];
    "pandas.core.arrays.sparse.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.<module>\ncalls: 1\ntime: 0.021906s"];
    "pandas.core.arrays.sparse.accessor.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.accessor.<module>\ncalls: 1\ntime: 0.018719s"];
    "pandas.core.arrays.sparse.array.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array.<module>\ncalls: 1\ntime: 0.014658s"];
    "pandas.core.arrays.sparse.dtype.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.dtype.<module>\ncalls: 1\ntime: 0.001849s"];
    "pandas.core.arrays.sparse.dtype.SparseDtype" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.dtype.SparseDtype\ncalls: 1\ntime: 0.001571s"];
    "pandas.core.arrays.sparse.array.SparseArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array.SparseArray\ncalls: 1\ntime: 0.001915s"];
    "pandas.core.arrays.sparse.array._create_arithmetic_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array._create_arithmetic_method\ncalls: 17\ntime: 0.002648s"];
    "pandas.core.arrays.sparse.array._add_comparison_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array._add_comparison_ops\ncalls: 1\ntime: 0.001606s"];
    "pandas.core.arrays.sparse.array._create_comparison_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array._create_comparison_method\ncalls: 8\ntime: 0.001247s"];
    "pandas.core.arrays.sparse.array._add_unary_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array._add_unary_ops\ncalls: 1\ntime: 0.000163s"];
    "pandas.core.arrays.sparse.array._create_unary_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.array._create_unary_method\ncalls: 3\ntime: 0.000087s"];
    "pandas.core.arrays.sparse.accessor.BaseAccessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.accessor.BaseAccessor\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.arrays.sparse.accessor.SparseAccessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.accessor.SparseAccessor\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.arrays.sparse.accessor.SparseFrameAccessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.sparse.accessor.SparseFrameAccessor\ncalls: 1\ntime: 0.000015s"];
    "pandas.core.arrays.string_.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.string_.<module>\ncalls: 1\ntime: 0.001259s"];
    "pandas.core.arrays.string_.StringDtype" [color = "#e5e5e5ff", label = "pandas.core.arrays.string_.StringDtype\ncalls: 1\ntime: 0.000015s"];
    "pandas.core.arrays.string_.StringArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.string_.StringArray\ncalls: 1\ntime: 0.000029s"];
    "pandas.core.arrays.string_._add_arithmetic_ops" [color = "#e5e5e5ff", label = "pandas.core.arrays.string_._add_arithmetic_ops\ncalls: 1\ntime: 0.000203s"];
    "pandas.core.arrays.string_._create_arithmetic_method" [color = "#e5e5e5ff", label = "pandas.core.arrays.string_._create_arithmetic_method\ncalls: 10\ntime: 0.000258s"];
    "pandas.core.arrays.timedeltas.<module>" [color = "#e5e5e5ff", label = "pandas.core.arrays.timedeltas.<module>\ncalls: 1\ntime: 0.001030s"];
    "pandas.core.arrays.timedeltas.TimedeltaArray" [color = "#e5e5e5ff", label = "pandas.core.arrays.timedeltas.TimedeltaArray\ncalls: 1\ntime: 0.000302s"];
    "pandas.core.arrays.timedeltas._field_accessor" [color = "#e5e5e5ff", label = "pandas.core.arrays.timedeltas._field_accessor\ncalls: 4\ntime: 0.000036s"];
    "pandas.core.groupby.<module>" [color = "#e3e5e5ff", label = "pandas.core.groupby.<module>\ncalls: 1\ntime: 0.711358s"];
    "pandas.core.groupby.generic.<module>" [color = "#e3e5e5ff", label = "pandas.core.groupby.generic.<module>\ncalls: 1\ntime: 0.706827s"];
    "pandas.core.frame.<module>" [color = "#e3e5e5ff", label = "pandas.core.frame.<module>\ncalls: 1\ntime: 0.620744s"];
    "pandas.core.generic.<module>" [color = "#e4e5e5ff", label = "pandas.core.generic.<module>\ncalls: 1\ntime: 0.360451s"];
    "json.<module>" [color = "#e5e5e5ff", label = "json.<module>\ncalls: 1\ntime: 0.057553s"];
    "json.decoder.<module>" [color = "#e5e5e5ff", label = "json.decoder.<module>\ncalls: 1\ntime: 0.038435s"];
    "json.scanner.<module>" [color = "#e5e5e5ff", label = "json.scanner.<module>\ncalls: 1\ntime: 0.025115s"];
    "json.decoder.JSONDecodeError" [color = "#e5e5e5ff", label = "json.decoder.JSONDecodeError\ncalls: 1\ntime: 0.000007s"];
    "sre_parse.Tokenizer.getwhile" [color = "#e5e5e5ff", label = "sre_parse.Tokenizer.getwhile\ncalls: 4\ntime: 0.000268s"];
    "json.decoder.JSONDecoder" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder\ncalls: 1\ntime: 0.000011s"];
    "json.encoder.<module>" [color = "#e5e5e5ff", label = "json.encoder.<module>\ncalls: 1\ntime: 0.011521s"];
    "json.encoder.JSONEncoder" [color = "#e5e5e5ff", label = "json.encoder.JSONEncoder\ncalls: 1\ntime: 0.000014s"];
    "json.encoder.JSONEncoder.__init__" [color = "#e5e5e5ff", label = "json.encoder.JSONEncoder.__init__\ncalls: 1\ntime: 0.000016s"];
    "json.decoder.JSONDecoder.__init__" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder.__init__\ncalls: 2\ntime: 0.000096s"];
    "pandas.core.indexes.api.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.<module>\ncalls: 1\ntime: 0.110884s"];
    "pandas.core.indexes.category.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.category.<module>\ncalls: 1\ntime: 0.010051s"];
    "pandas.core.indexes.extension.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.<module>\ncalls: 1\ntime: 0.001372s"];
    "pandas.core.indexes.extension.ExtensionIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.ExtensionIndex\ncalls: 1\ntime: 0.001009s"];
    "pandas.core.indexes.extension._make_wrapped_comparison_op" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension._make_wrapped_comparison_op\ncalls: 6\ntime: 0.000041s"];
    "pandas.core.indexes.extension.inherit_names" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.inherit_names\ncalls: 10\ntime: 0.000066s"];
    "pandas.core.indexes.category.CategoricalIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.category.CategoricalIndex\ncalls: 1\ntime: 0.003600s"];
    "pandas.core.indexes.extension.wrapper" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.wrapper\ncalls: 10\ntime: 0.002137s"];
    "pandas.core.indexes.extension.inherit_from_data" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.inherit_from_data\ncalls: 55\ntime: 0.000938s"];
    "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled\ncalls: 2\ntime: 0.000251s"];
    "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_logical_methods_disabled\ncalls: 7\ntime: 0.000318s"];
    "pandas.core.indexes.datetimes.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimes.<module>\ncalls: 1\ntime: 0.039369s"];
    "pandas.core.indexes.datetimelike.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimelike.<module>\ncalls: 1\ntime: 0.018837s"];
    "pandas.core.indexes.numeric.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.<module>\ncalls: 1\ntime: 0.009535s"];
    "pandas.core.indexes.numeric.NumericIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.NumericIndex\ncalls: 1\ntime: 0.000667s"];
    "pandas.core.indexes.numeric.IntegerIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.IntegerIndex\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.indexes.numeric.Int64Index" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Int64Index\ncalls: 1\ntime: 0.000196s"];
    "pandas.core.indexes.base._add_numeric_methods" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_numeric_methods\ncalls: 4\ntime: 0.003822s"];
    "pandas.core.indexes.base._add_numeric_methods_unary" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_numeric_methods_unary\ncalls: 4\ntime: 0.000386s"];
    "pandas.core.indexes.base._make_evaluate_unary" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._make_evaluate_unary\ncalls: 16\ntime: 0.000104s"];
    "pandas.core.indexes.base._add_numeric_methods_binary" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._add_numeric_methods_binary\ncalls: 3\ntime: 0.001772s"];
    "pandas.core.indexes.base._make_arithmetic_op" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._make_arithmetic_op\ncalls: 42\ntime: 0.001106s"];
    "pandas.core.indexes.numeric.UInt64Index" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.UInt64Index\ncalls: 1\ntime: 0.000552s"];
    "pandas.core.indexes.numeric.Float64Index" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Float64Index\ncalls: 1\ntime: 0.001623s"];
    "pandas.core.tools.timedeltas.<module>" [color = "#e5e5e5ff", label = "pandas.core.tools.timedeltas.<module>\ncalls: 1\ntime: 0.000138s"];
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin\ncalls: 1\ntime: 0.001334s"];
    "pandas.core.indexes.extension.make_wrapped_arith_op" [color = "#e5e5e5ff", label = "pandas.core.indexes.extension.make_wrapped_arith_op\ncalls: 16\ntime: 0.000097s"];
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin\ncalls: 1\ntime: 0.000509s"];
    "pandas.core.indexes.datetimelike._join_i8_wrapper" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimelike._join_i8_wrapper\ncalls: 4\ntime: 0.000023s"];
    "pandas.core.indexes.datetimelike.DatetimelikeDelegateMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimelike.DatetimelikeDelegateMixin\ncalls: 1\ntime: 0.000090s"];
    "pandas.core.tools.datetimes.<module>" [color = "#e5e5e5ff", label = "pandas.core.tools.datetimes.<module>\ncalls: 1\ntime: 0.009196s"];
    "pandas.arrays.<module>" [color = "#e5e5e5ff", label = "pandas.arrays.<module>\ncalls: 1\ntime: 0.000112s"];
    "pandas.core.indexes.datetimes.DatetimeDelegateMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimes.DatetimeDelegateMixin\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.indexes.datetimes.DatetimeIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.datetimes.DatetimeIndex\ncalls: 1\ntime: 0.001829s"];
    "pandas.core.indexes.interval.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval.<module>\ncalls: 1\ntime: 0.034127s"];
    "pandas.util._exceptions.<module>" [color = "#e5e5e5ff", label = "pandas.util._exceptions.<module>\ncalls: 1\ntime: 0.000139s"];
    "pandas.core.indexes.multi.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.multi.<module>\ncalls: 1\ntime: 0.010046s"];
    "pandas.core.indexes.multi.MultiIndexUIntEngine" [color = "#e5e5e5ff", label = "pandas.core.indexes.multi.MultiIndexUIntEngine\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.indexes.multi.MultiIndexPyIntEngine" [color = "#e5e5e5ff", label = "pandas.core.indexes.multi.MultiIndexPyIntEngine\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.indexes.multi.MultiIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.multi.MultiIndex\ncalls: 1\ntime: 0.008278s"];
    "pandas.core.indexes.timedeltas.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.timedeltas.<module>\ncalls: 1\ntime: 0.002961s"];
    "pandas.core.indexes.timedeltas.TimedeltaDelegateMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.timedeltas.TimedeltaDelegateMixin\ncalls: 1\ntime: 0.000015s"];
    "pandas.core.indexes.timedeltas.TimedeltaIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.timedeltas.TimedeltaIndex\ncalls: 1\ntime: 0.001039s"];
    "pandas.core.indexes.interval.SetopCheck" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval.SetopCheck\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.indexes.interval.IntervalIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval.IntervalIndex\ncalls: 1\ntime: 0.006746s"];
    "pandas.core.indexes.interval.SetopCheck.__init__" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval.SetopCheck.__init__\ncalls: 4\ntime: 0.000016s"];
    "pandas.core.indexes.interval.SetopCheck.__call__" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval.SetopCheck.__call__\ncalls: 4\ntime: 0.000022s"];
    "pandas.core.indexes.interval._setop" [color = "#e5e5e5ff", label = "pandas.core.indexes.interval._setop\ncalls: 3\ntime: 0.000138s"];
    "pandas.core.indexes.period.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.period.<module>\ncalls: 1\ntime: 0.004290s"];
    "pandas.core.indexes.period.PeriodDelegateMixin" [color = "#e5e5e5ff", label = "pandas.core.indexes.period.PeriodDelegateMixin\ncalls: 1\ntime: 0.000014s"];
    "pandas.core.indexes.period.PeriodIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.period.PeriodIndex\ncalls: 1\ntime: 0.002077s"];
    "pandas.core.indexes.range.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.<module>\ncalls: 1\ntime: 0.004227s"];
    "pandas.core.indexes.range.RangeIndex" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex\ncalls: 1\ntime: 0.001864s"];
    "pandas.core.indexes.range._add_numeric_methods_binary" [color = "#e5e5e5ff", label = "pandas.core.indexes.range._add_numeric_methods_binary\ncalls: 1\ntime: 0.001439s"];
    "pandas.core.indexes.range._make_evaluate_binop" [color = "#e5e5e5ff", label = "pandas.core.indexes.range._make_evaluate_binop\ncalls: 8\ntime: 0.001274s"];
    "pandas.core.indexing.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexing.<module>\ncalls: 1\ntime: 0.010103s"];
    "pandas.core.indexing._IndexSlice" [color = "#e5e5e5ff", label = "pandas.core.indexing._IndexSlice\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.indexing.IndexingError" [color = "#e5e5e5ff", label = "pandas.core.indexing.IndexingError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexing.IndexingMixin" [color = "#e5e5e5ff", label = "pandas.core.indexing.IndexingMixin\ncalls: 1\ntime: 0.000015s"];
    "pandas.core.indexing._NDFrameIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._NDFrameIndexer\ncalls: 1\ntime: 0.000058s"];
    "pandas.core.indexing._LocationIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocationIndexer\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.indexing._LocIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocIndexer\ncalls: 1\ntime: 0.000269s"];
    "pandas.core.indexing._iLocIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._iLocIndexer\ncalls: 1\ntime: 0.000020s"];
    "pandas.core.indexing._ScalarAccessIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._ScalarAccessIndexer\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.indexing._AtIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._AtIndexer\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.indexing._iAtIndexer" [color = "#e5e5e5ff", label = "pandas.core.indexing._iAtIndexer\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.internals.<module>" [color = "#e5e5e5ff", label = "pandas.core.internals.<module>\ncalls: 1\ntime: 0.034216s"];
    "pandas.core.internals.blocks.<module>" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.<module>\ncalls: 1\ntime: 0.014318s"];
    "pandas.core.internals.blocks.Block" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.Block\ncalls: 1\ntime: 0.001942s"];
    "pandas.core.internals.blocks.NonConsolidatableMixIn" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.NonConsolidatableMixIn\ncalls: 1\ntime: 0.000021s"];
    "pandas.core.internals.blocks.ExtensionBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ExtensionBlock\ncalls: 1\ntime: 0.001754s"];
    "pandas.core.internals.blocks.ObjectValuesExtensionBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectValuesExtensionBlock\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.internals.blocks.NumericBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.NumericBlock\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.internals.blocks.FloatOrComplexBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.FloatOrComplexBlock\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.internals.blocks.FloatBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.FloatBlock\ncalls: 1\ntime: 0.000011s"];
    "pandas.core.internals.blocks.ComplexBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ComplexBlock\ncalls: 1\ntime: 0.000012s"];
    "pandas.core.internals.blocks.IntBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.internals.blocks.DatetimeLikeBlockMixin" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.DatetimeLikeBlockMixin\ncalls: 1\ntime: 0.000014s"];
    "pandas.core.internals.blocks.DatetimeBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.DatetimeBlock\ncalls: 1\ntime: 0.000023s"];
    "pandas.core.internals.blocks.DatetimeTZBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.DatetimeTZBlock\ncalls: 1\ntime: 0.000085s"];
    "pandas.core.internals.blocks.TimeDeltaBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.TimeDeltaBlock\ncalls: 1\ntime: 0.000027s"];
    "pandas.core.internals.blocks.BoolBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.internals.blocks.ObjectBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock\ncalls: 1\ntime: 0.000101s"];
    "pandas.core.internals.blocks.CategoricalBlock" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.CategoricalBlock\ncalls: 1\ntime: 0.000023s"];
    "pandas.core.internals.managers.<module>" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.<module>\ncalls: 1\ntime: 0.011994s"];
    "pandas.core.internals.concat.<module>" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.<module>\ncalls: 1\ntime: 0.000419s"];
    "pandas.core.internals.concat.JoinUnit" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.JoinUnit\ncalls: 1\ntime: 0.000014s"];
    "pandas.core.internals.managers.BlockManager" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager\ncalls: 1\ntime: 0.003290s"];
    "pandas.core.internals.managers.SingleBlockManager" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager\ncalls: 1\ntime: 0.001103s"];
    "pandas.io.formats.format.<module>" [color = "#e5e5e5ff", label = "pandas.io.formats.format.<module>\ncalls: 1\ntime: 0.084798s"];
    "pandas.io.common.<module>" [color = "#e5e5e5ff", label = "pandas.io.common.<module>\ncalls: 1\ntime: 0.018691s"];
    "zipfile.<module>" [color = "#e5e5e5ff", label = "zipfile.<module>\ncalls: 1\ntime: 0.001508s"];
    "zipfile.BadZipFile" [color = "#e5e5e5ff", label = "zipfile.BadZipFile\ncalls: 1\ntime: 0.000005s"];
    "zipfile.LargeZipFile" [color = "#e5e5e5ff", label = "zipfile.LargeZipFile\ncalls: 1\ntime: 0.000005s"];
    "zipfile.ZipInfo" [color = "#e5e5e5ff", label = "zipfile.ZipInfo\ncalls: 1\ntime: 0.000016s"];
    "zipfile._ZipDecrypter" [color = "#e5e5e5ff", label = "zipfile._ZipDecrypter\ncalls: 1\ntime: 0.000012s"];
    "zipfile.LZMACompressor" [color = "#e5e5e5ff", label = "zipfile.LZMACompressor\ncalls: 1\ntime: 0.000009s"];
    "zipfile.LZMADecompressor" [color = "#e5e5e5ff", label = "zipfile.LZMADecompressor\ncalls: 1\ntime: 0.000006s"];
    "zipfile._SharedFile" [color = "#e5e5e5ff", label = "zipfile._SharedFile\ncalls: 1\ntime: 0.000007s"];
    "zipfile._Tellable" [color = "#e5e5e5ff", label = "zipfile._Tellable\ncalls: 1\ntime: 0.000009s"];
    "zipfile.ZipExtFile" [color = "#e5e5e5ff", label = "zipfile.ZipExtFile\ncalls: 1\ntime: 0.000022s"];
    "zipfile._ZipWriteFile" [color = "#e5e5e5ff", label = "zipfile._ZipWriteFile\ncalls: 1\ntime: 0.000012s"];
    "zipfile.ZipFile" [color = "#e5e5e5ff", label = "zipfile.ZipFile\ncalls: 1\ntime: 0.000044s"];
    "zipfile.PyZipFile" [color = "#e5e5e5ff", label = "zipfile.PyZipFile\ncalls: 1\ntime: 0.000009s"];
    "pandas.compat._import_lzma" [color = "#e5e5e5ff", label = "pandas.compat._import_lzma\ncalls: 3\ntime: 0.000023s"];
    "pandas.io.common._BytesZipFile" [color = "#e5e5e5ff", label = "pandas.io.common._BytesZipFile\ncalls: 1\ntime: 0.000033s"];
    "pandas.io.common._MMapWrapper" [color = "#e5e5e5ff", label = "pandas.io.common._MMapWrapper\ncalls: 1\ntime: 0.000010s"];
    "typing.CallableMeta.__subclasscheck__" [color = "#e5e5e5ff", label = "typing.CallableMeta.__subclasscheck__\ncalls: 22\ntime: 0.001894s"];
    "pandas.io.formats.format.CategoricalFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.CategoricalFormatter\ncalls: 1\ntime: 0.001198s"];
    "pandas.io.formats.format.SeriesFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.SeriesFormatter\ncalls: 1\ntime: 0.002617s"];
    "pandas.io.formats.format.TextAdjustment" [color = "#e5e5e5ff", label = "pandas.io.formats.format.TextAdjustment\ncalls: 1\ntime: 0.000047s"];
    "pandas.io.formats.format.EastAsianTextAdjustment" [color = "#e5e5e5ff", label = "pandas.io.formats.format.EastAsianTextAdjustment\ncalls: 1\ntime: 0.000091s"];
    "pandas.io.formats.format.TableFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.TableFormatter\ncalls: 1\ntime: 0.004755s"];
    "pandas.io.formats.format.DataFrameFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.DataFrameFormatter\ncalls: 1\ntime: 0.015324s"];
    "typing.TupleMeta.__subclasscheck__" [color = "#e5e5e5ff", label = "typing.TupleMeta.__subclasscheck__\ncalls: 18\ntime: 0.000086s"];
    "pandas.io.formats.format.GenericArrayFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.GenericArrayFormatter\ncalls: 1\ntime: 0.000214s"];
    "pandas.io.formats.format.FloatArrayFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.FloatArrayFormatter\ncalls: 1\ntime: 0.001983s"];
    "pandas.io.formats.format.IntArrayFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.IntArrayFormatter\ncalls: 1\ntime: 0.000041s"];
    "pandas.io.formats.format.Datetime64Formatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.Datetime64Formatter\ncalls: 1\ntime: 0.001579s"];
    "pandas.io.formats.format.ExtensionArrayFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.ExtensionArrayFormatter\ncalls: 1\ntime: 0.000041s"];
    "pandas.io.formats.format.Datetime64TZFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.Datetime64TZFormatter\ncalls: 1\ntime: 0.000042s"];
    "pandas.io.formats.format.Timedelta64Formatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.Timedelta64Formatter\ncalls: 1\ntime: 0.000827s"];
    "pandas.io.formats.format.EngFormatter" [color = "#e5e5e5ff", label = "pandas.io.formats.format.EngFormatter\ncalls: 1\ntime: 0.000080s"];
    "pandas.core.generic.NDFrame" [color = "#e5e5e5ff", label = "pandas.core.generic.NDFrame\ncalls: 1\ntime: 0.043955s"];
    "pandas.util._decorators.rewrite_axis_style_signature" [color = "#e5e5e5ff", label = "pandas.util._decorators.rewrite_axis_style_signature\ncalls: 3\ntime: 0.000019s"];
    "pandas.util._decorators.decorate" [color = "#e5e5e5ff", label = "pandas.util._decorators.decorate\ncalls: 3\ntime: 0.004329s"];
    "inspect.Parameter.__init__" [color = "#d7e2e5ff", label = "inspect.Parameter.__init__\ncalls: 1951\ntime: 0.105700s"];
    "inspect.Signature.__init__" [color = "#dfe5e5ff", label = "inspect.Signature.__init__\ncalls: 760\ntime: 0.127158s"];
    "inspect.Parameter.kind" [color = "#d8e3e5ff", label = "inspect.Parameter.kind\ncalls: 1828\ntime: 0.006017s"];
    "inspect.Parameter.name" [color = "#cfdfe5ff", label = "inspect.Parameter.name\ncalls: 3071\ntime: 0.010217s"];
    "inspect.Parameter.default" [color = "#e1e5e5ff", label = "inspect.Parameter.default\ncalls: 569\ntime: 0.001896s"];
    "pandas.core.internals.construction.<module>" [color = "#e5e5e5ff", label = "pandas.core.internals.construction.<module>\ncalls: 1\ntime: 0.000343s"];
    "pandas.core.series.<module>" [color = "#e5e5e5ff", label = "pandas.core.series.<module>\ncalls: 1\ntime: 0.146882s"];
    "pandas.core.indexes.accessors.<module>" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.<module>\ncalls: 1\ntime: 0.003373s"];
    "pandas.core.indexes.accessors.Properties" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.Properties\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.indexes.accessors.DatetimeProperties" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.DatetimeProperties\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.indexes.accessors.TimedeltaProperties" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.TimedeltaProperties\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.indexes.accessors.PeriodProperties" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.PeriodProperties\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexes.accessors.CombinedDatetimelikeProperties" [color = "#e5e5e5ff", label = "pandas.core.indexes.accessors.CombinedDatetimelikeProperties\ncalls: 1\ntime: 0.000005s"];
    "pandas.plotting.<module>" [color = "#e5e5e5ff", label = "pandas.plotting.<module>\ncalls: 1\ntime: 0.009010s"];
    "pandas.plotting._core.<module>" [color = "#e5e5e5ff", label = "pandas.plotting._core.<module>\ncalls: 1\ntime: 0.002486s"];
    "pandas.plotting._core.PlotAccessor" [color = "#e5e5e5ff", label = "pandas.plotting._core.PlotAccessor\ncalls: 1\ntime: 0.000029s"];
    "pandas.plotting._misc.<module>" [color = "#e5e5e5ff", label = "pandas.plotting._misc.<module>\ncalls: 1\ntime: 0.000316s"];
    "pandas.plotting._misc._Options" [color = "#e5e5e5ff", label = "pandas.plotting._misc._Options\ncalls: 1\ntime: 0.000125s"];
    "pandas.plotting._misc._Options.__init__" [color = "#e5e5e5ff", label = "pandas.plotting._misc._Options.__init__\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.series.Series" [color = "#e5e5e5ff", label = "pandas.core.series.Series\ncalls: 1\ntime: 0.017345s"];
    "pandas.core.series._coerce_method" [color = "#e5e5e5ff", label = "pandas.core.series._coerce_method\ncalls: 3\ntime: 0.000026s"];
    "pandas.core.generic._setup_axes" [color = "#e5e5e5ff", label = "pandas.core.generic._setup_axes\ncalls: 2\ntime: 0.000230s"];
    "pandas.core.generic.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.core.generic.<dictcomp>\ncalls: 3\ntime: 0.000020s"];
    "pandas.core.generic.set_axis" [color = "#e5e5e5ff", label = "pandas.core.generic.set_axis\ncalls: 3\ntime: 0.000023s"];
    "pandas.core.generic._add_numeric_operations" [color = "#e5e5e5ff", label = "pandas.core.generic._add_numeric_operations\ncalls: 2\ntime: 0.012977s"];
    "pandas.core.generic._doc_parms" [color = "#e5e5e5ff", label = "pandas.core.generic._doc_parms\ncalls: 2\ntime: 0.000133s"];
    "pandas.core.generic.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.generic.<genexpr>\ncalls: 5\ntime: 0.000024s"];
    "pandas.core.generic._make_logical_function" [color = "#e5e5e5ff", label = "pandas.core.generic._make_logical_function\ncalls: 4\ntime: 0.001625s"];
    "pandas.core.generic._make_stat_function_ddof" [color = "#e5e5e5ff", label = "pandas.core.generic._make_stat_function_ddof\ncalls: 6\ntime: 0.001726s"];
    "pandas.core.generic._make_cum_function" [color = "#e5e5e5ff", label = "pandas.core.generic._make_cum_function\ncalls: 8\ntime: 0.002971s"];
    "pandas.core.generic._make_min_count_stat_function" [color = "#e5e5e5ff", label = "pandas.core.generic._make_min_count_stat_function\ncalls: 4\ntime: 0.001204s"];
    "pandas.core.generic._make_stat_function" [color = "#e5e5e5ff", label = "pandas.core.generic._make_stat_function\ncalls: 12\ntime: 0.003542s"];
    "pandas.core.generic._add_series_or_dataframe_operations" [color = "#e5e5e5ff", label = "pandas.core.generic._add_series_or_dataframe_operations\ncalls: 2\ntime: 0.083466s"];
    "pandas.core.window.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.<module>\ncalls: 1\ntime: 0.074988s"];
    "pandas.core.window.ewm.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.ewm.<module>\ncalls: 1\ntime: 0.060288s"];
    "pandas.core.window.common.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.common.<module>\ncalls: 1\ntime: 0.005854s"];
    "pandas.core.groupby.base.<module>" [color = "#e5e5e5ff", label = "pandas.core.groupby.base.<module>\ncalls: 1\ntime: 0.002666s"];
    "OutputKey" [color = "#e5e5e5ff", label = "OutputKey\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.groupby.base.GroupByMixin" [color = "#e5e5e5ff", label = "pandas.core.groupby.base.GroupByMixin\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.window.common.WindowGroupByMixin" [color = "#e5e5e5ff", label = "pandas.core.window.common.WindowGroupByMixin\ncalls: 1\ntime: 0.000128s"];
    "pandas.core.window.common._dispatch" [color = "#e5e5e5ff", label = "pandas.core.window.common._dispatch\ncalls: 3\ntime: 0.000021s"];
    "pandas.core.window.rolling.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.rolling.<module>\ncalls: 1\ntime: 0.038405s"];
    "pandas.core.window.indexers.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.indexers.<module>\ncalls: 1\ntime: 0.003318s"];
    "pandas.core.window.indexers.BaseIndexer" [color = "#e5e5e5ff", label = "pandas.core.window.indexers.BaseIndexer\ncalls: 1\ntime: 0.000362s"];
    "pandas.core.window.indexers.FixedWindowIndexer" [color = "#e5e5e5ff", label = "pandas.core.window.indexers.FixedWindowIndexer\ncalls: 1\ntime: 0.000329s"];
    "pandas.core.window.indexers.VariableWindowIndexer" [color = "#e5e5e5ff", label = "pandas.core.window.indexers.VariableWindowIndexer\ncalls: 1\ntime: 0.000320s"];
    "pandas.core.window.indexers.ExpandingIndexer" [color = "#e5e5e5ff", label = "pandas.core.window.indexers.ExpandingIndexer\ncalls: 1\ntime: 0.000332s"];
    "pandas.core.window.numba_.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.numba_.<module>\ncalls: 1\ntime: 0.005538s"];
    "pandas.core.window.rolling._Window" [color = "#e5e5e5ff", label = "pandas.core.window.rolling._Window\ncalls: 1\ntime: 0.004001s"];
    "pandas.core.window.rolling.Window" [color = "#e5e5e5ff", label = "pandas.core.window.rolling.Window\ncalls: 1\ntime: 0.005111s"];
    "pandas.core.window.rolling._Rolling" [color = "#e5e5e5ff", label = "pandas.core.window.rolling._Rolling\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.window.rolling._Rolling_and_Expanding" [color = "#e5e5e5ff", label = "pandas.core.window.rolling._Rolling_and_Expanding\ncalls: 1\ntime: 0.006480s"];
    "pandas.core.window.rolling.Rolling" [color = "#e5e5e5ff", label = "pandas.core.window.rolling.Rolling\ncalls: 1\ntime: 0.007535s"];
    "pandas.core.window.rolling.RollingGroupby" [color = "#e5e5e5ff", label = "pandas.core.window.rolling.RollingGroupby\ncalls: 1\ntime: 0.000011s"];
    "pandas.core.window.ewm.EWM" [color = "#e5e5e5ff", label = "pandas.core.window.ewm.EWM\ncalls: 1\ntime: 0.002647s"];
    "pandas.core.window.expanding.<module>" [color = "#e5e5e5ff", label = "pandas.core.window.expanding.<module>\ncalls: 1\ntime: 0.007848s"];
    "pandas.core.window.expanding.Expanding" [color = "#e5e5e5ff", label = "pandas.core.window.expanding.Expanding\ncalls: 1\ntime: 0.007539s"];
    "pandas.core.window.expanding.ExpandingGroupby" [color = "#e5e5e5ff", label = "pandas.core.window.expanding.ExpandingGroupby\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.ops.methods.add_flex_arithmetic_methods" [color = "#e5e5e5ff", label = "pandas.core.ops.methods.add_flex_arithmetic_methods\ncalls: 2\ntime: 0.036112s"];
    "pandas.core.ops.methods._get_method_wrappers" [color = "#e5e5e5ff", label = "pandas.core.ops.methods._get_method_wrappers\ncalls: 4\ntime: 0.000484s"];
    "pandas.core.ops.methods._create_methods" [color = "#e5e5e5ff", label = "pandas.core.ops.methods._create_methods\ncalls: 4\ntime: 0.049826s"];
    "pandas.core.ops._flex_method_SERIES" [color = "#e5e5e5ff", label = "pandas.core.ops._flex_method_SERIES\ncalls: 22\ntime: 0.009175s"];
    "pandas.core.ops._get_op_name" [color = "#e4e5e5ff", label = "pandas.core.ops._get_op_name\ncalls: 96\ntime: 0.000680s"];
    "pandas.core.ops.docstrings._make_flex_doc" [color = "#e5e5e5ff", label = "pandas.core.ops.docstrings._make_flex_doc\ncalls: 36\ntime: 0.001103s"];
    "pandas.core.ops.methods.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.core.ops.methods.<dictcomp>\ncalls: 4\ntime: 0.001798s"];
    "pandas.core.ops.methods.<lambda>" [color = "#e4e5e5ff", label = "pandas.core.ops.methods.<lambda>\ncalls: 104\ntime: 0.000356s"];
    "pandas.core.ops.methods.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.ops.methods.<genexpr>\ncalls: 8\ntime: 0.000030s"];
    "pandas.core.ops.methods._add_methods" [color = "#e5e5e5ff", label = "pandas.core.ops.methods._add_methods\ncalls: 4\ntime: 0.002978s"];
    "pandas.core.ops.methods.add_special_arithmetic_methods" [color = "#e5e5e5ff", label = "pandas.core.ops.methods.add_special_arithmetic_methods\ncalls: 2\ntime: 0.018162s"];
    "pandas.core.ops._arith_method_SERIES" [color = "#e5e5e5ff", label = "pandas.core.ops._arith_method_SERIES\ncalls: 16\ntime: 0.003252s"];
    "pandas.core.ops._get_opstr" [color = "#e5e5e5ff", label = "pandas.core.ops._get_opstr\ncalls: 62\ntime: 0.002135s"];
    "pandas.core.ops._comp_method_SERIES" [color = "#e5e5e5ff", label = "pandas.core.ops._comp_method_SERIES\ncalls: 6\ntime: 0.000902s"];
    "pandas.core.ops._bool_method_SERIES" [color = "#e5e5e5ff", label = "pandas.core.ops._bool_method_SERIES\ncalls: 6\ntime: 0.000905s"];
    "pandas.core.ops.methods._wrap_inplace_method" [color = "#e5e5e5ff", label = "pandas.core.ops.methods._wrap_inplace_method\ncalls: 20\ntime: 0.000162s"];
    "pandas.core.frame.DataFrame" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame\ncalls: 1\ntime: 0.052771s"];
    "pandas.util._decorators.indent" [color = "#e5e5e5ff", label = "pandas.util._decorators.indent\ncalls: 3\ntime: 0.000077s"];
    "pandas.core.ops._arith_method_FRAME" [color = "#e5e5e5ff", label = "pandas.core.ops._arith_method_FRAME\ncalls: 34\ntime: 0.024243s"];
    "pandas.core.ops._get_frame_op_default_axis" [color = "#e5e5e5ff", label = "pandas.core.ops._get_frame_op_default_axis\ncalls: 40\ntime: 0.000235s"];
    "pandas.core.ops.array_ops.define_na_arithmetic_op" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.define_na_arithmetic_op\ncalls: 34\ntime: 0.000192s"];
    "pandas.core.ops._flex_comp_method_FRAME" [color = "#e5e5e5ff", label = "pandas.core.ops._flex_comp_method_FRAME\ncalls: 6\ntime: 0.006411s"];
    "pandas.core.ops._comp_method_FRAME" [color = "#e5e5e5ff", label = "pandas.core.ops._comp_method_FRAME\ncalls: 6\ntime: 0.000951s"];
    "pandas.core.groupby.groupby.<module>" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby.<module>\ncalls: 1\ntime: 0.048671s"];
    "pandas.core.groupby.ops.<module>" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.<module>\ncalls: 1\ntime: 0.016331s"];
    "pandas.core.groupby.grouper.<module>" [color = "#e5e5e5ff", label = "pandas.core.groupby.grouper.<module>\ncalls: 1\ntime: 0.004735s"];
    "pandas.core.groupby.categorical.<module>" [color = "#e5e5e5ff", label = "pandas.core.groupby.categorical.<module>\ncalls: 1\ntime: 0.000062s"];
    "pandas.core.groupby.grouper.Grouper" [color = "#e5e5e5ff", label = "pandas.core.groupby.grouper.Grouper\ncalls: 1\ntime: 0.000062s"];
    "pandas.core.groupby.grouper.Grouping" [color = "#e5e5e5ff", label = "pandas.core.groupby.grouper.Grouping\ncalls: 1\ntime: 0.001029s"];
    "pandas.core.groupby.ops.BaseGrouper" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.BaseGrouper\ncalls: 1\ntime: 0.005242s"];
    "pandas.core.groupby.ops.BinGrouper" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.BinGrouper\ncalls: 1\ntime: 0.000066s"];
    "pandas.core.groupby.ops.DataSplitter" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.DataSplitter\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.groupby.ops.SeriesSplitter" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.SeriesSplitter\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.groupby.ops.FrameSplitter" [color = "#e5e5e5ff", label = "pandas.core.groupby.ops.FrameSplitter\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.groupby.groupby.GroupByPlot" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby.GroupByPlot\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.groupby.groupby._GroupBy" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby._GroupBy\ncalls: 1\ntime: 0.006174s"];
    "pandas.core.groupby.groupby.GroupBy" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby.GroupBy\ncalls: 1\ntime: 0.007764s"];
    "pandas.core.groupby.groupby._add_numeric_operations" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby._add_numeric_operations\ncalls: 1\ntime: 0.002332s"];
    "pandas.core.groupby.groupby.groupby_function" [color = "#e5e5e5ff", label = "pandas.core.groupby.groupby.groupby_function\ncalls: 6\ntime: 0.002189s"];
    "NamedAgg" [color = "#e5e5e5ff", label = "NamedAgg\ncalls: 1\ntime: 0.000023s"];
    "pandas.core.groupby.generic.pin_whitelisted_properties" [color = "#e5e5e5ff", label = "pandas.core.groupby.generic.pin_whitelisted_properties\ncalls: 2\ntime: 0.000012s"];
    "pandas.core.groupby.generic.SeriesGroupBy" [color = "#e5e5e5ff", label = "pandas.core.groupby.generic.SeriesGroupBy\ncalls: 1\ntime: 0.007387s"];
    "pandas.core.groupby.generic.pinner" [color = "#e5e5e5ff", label = "pandas.core.groupby.generic.pinner\ncalls: 2\ntime: 0.000956s"];
    "pandas.core.groupby.generic.generate_property" [color = "#e5e5e5ff", label = "pandas.core.groupby.generic.generate_property\ncalls: 30\ntime: 0.000300s"];
    "pandas.core.groupby.generic.DataFrameGroupBy" [color = "#e5e5e5ff", label = "pandas.core.groupby.generic.DataFrameGroupBy\ncalls: 1\ntime: 0.001792s"];
    "pandas.tseries.api.<module>" [color = "#e5e5e5ff", label = "pandas.tseries.api.<module>\ncalls: 1\ntime: 0.000139s"];
    "pandas.core.computation.api.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.api.<module>\ncalls: 1\ntime: 0.063392s"];
    "pandas.core.computation.eval.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.eval.<module>\ncalls: 1\ntime: 0.060646s"];
    "pandas.core.computation.engines.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.engines.<module>\ncalls: 1\ntime: 0.028506s"];
    "pandas.core.computation.align.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.align.<module>\ncalls: 1\ntime: 0.008625s"];
    "pandas.core.computation.common.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.common.<module>\ncalls: 1\ntime: 0.000151s"];
    "pandas.core.computation.common.NameResolutionError" [color = "#e5e5e5ff", label = "pandas.core.computation.common.NameResolutionError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.computation.align._filter_special_cases" [color = "#e5e5e5ff", label = "pandas.core.computation.align._filter_special_cases\ncalls: 1\ntime: 0.000086s"];
    "pandas.core.computation.ops.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.<module>\ncalls: 1\ntime: 0.009962s"];
    "pandas.core.computation.scope.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.scope.<module>\ncalls: 1\ntime: 0.006004s"];
    "pandas.compat.chainmap.<module>" [color = "#e5e5e5ff", label = "pandas.compat.chainmap.<module>\ncalls: 1\ntime: 0.002934s"];
    "pandas.compat.chainmap.DeepChainMap" [color = "#e5e5e5ff", label = "pandas.compat.chainmap.DeepChainMap\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.computation.scope.Scope" [color = "#e5e5e5ff", label = "pandas.core.computation.scope.Scope\ncalls: 1\ntime: 0.000062s"];
    "pandas.core.computation.ops.UndefinedVariableError" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.UndefinedVariableError\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.computation.ops.Term" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.Term\ncalls: 1\ntime: 0.000039s"];
    "pandas.core.computation.ops.Constant" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.Constant\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.computation.ops.Op" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.Op\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.computation.ops.BinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.BinOp\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.computation.ops.Div" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.Div\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.computation.ops.UnaryOp" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.UnaryOp\ncalls: 1\ntime: 0.000014s"];
    "pandas.core.computation.ops.MathCall" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.MathCall\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.computation.ops.FuncNode" [color = "#e5e5e5ff", label = "pandas.core.computation.ops.FuncNode\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.computation.engines.NumExprClobberingError" [color = "#e5e5e5ff", label = "pandas.core.computation.engines.NumExprClobberingError\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.computation.engines.AbstractEngine" [color = "#e5e5e5ff", label = "pandas.core.computation.engines.AbstractEngine\ncalls: 1\ntime: 0.000036s"];
    "pandas.core.computation.engines.NumExprEngine" [color = "#e5e5e5ff", label = "pandas.core.computation.engines.NumExprEngine\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.computation.engines.PythonEngine" [color = "#e5e5e5ff", label = "pandas.core.computation.engines.PythonEngine\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.computation.expr.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.<module>\ncalls: 1\ntime: 0.025949s"];
    "pandas.core.computation.parsing.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.parsing.<module>\ncalls: 1\ntime: 0.004757s"];
    "pandas.core.computation.expr._compose" [color = "#e5e5e5ff", label = "pandas.core.computation.expr._compose\ncalls: 2\ntime: 0.000125s"];
    "pandas.core.computation.expr._compose2" [color = "#e5e5e5ff", label = "pandas.core.computation.expr._compose2\ncalls: 5\ntime: 0.000021s"];
    "pandas.core.computation.expr._is_type" [color = "#e5e5e5ff", label = "pandas.core.computation.expr._is_type\ncalls: 2\ntime: 0.000008s"];
    "pandas.core.computation.expr.<genexpr>" [color = "#e3e5e5ff", label = "pandas.core.computation.expr.<genexpr>\ncalls: 264\ntime: 0.002736s"];
    "pandas.core.computation.expr.<lambda>" [color = "#e3e5e5ff", label = "pandas.core.computation.expr.<lambda>\ncalls: 252\ntime: 0.000918s"];
    "pandas.core.computation.expr._filter_nodes" [color = "#e5e5e5ff", label = "pandas.core.computation.expr._filter_nodes\ncalls: 14\ntime: 0.003792s"];
    "pandas.core.computation.expr.disallow" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.disallow\ncalls: 3\ntime: 0.000016s"];
    "pandas.core.computation.expr.add_ops" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.add_ops\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.computation.expr.BaseExprVisitor" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.BaseExprVisitor\ncalls: 1\ntime: 0.001344s"];
    "pandas.core.computation.expr.f" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.f\ncalls: 1\ntime: 0.000624s"];
    "pandas.core.computation.expr._op_maker" [color = "#e5e5e5ff", label = "pandas.core.computation.expr._op_maker\ncalls: 22\ntime: 0.000118s"];
    "pandas.core.computation.expr.disallowed" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.disallowed\ncalls: 3\ntime: 0.004111s"];
    "pandas.core.computation.expr._node_not_implemented" [color = "#e4e5e5ff", label = "pandas.core.computation.expr._node_not_implemented\ncalls: 159\ntime: 0.000805s"];
    "pandas.core.computation.expr.PandasExprVisitor" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.PandasExprVisitor\ncalls: 1\ntime: 0.000064s"];
    "pandas.core.computation.expr.PythonExprVisitor" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.PythonExprVisitor\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.computation.expr.Expr" [color = "#e5e5e5ff", label = "pandas.core.computation.expr.Expr\ncalls: 1\ntime: 0.000913s"];
    "pandas.core.reshape.api.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.api.<module>\ncalls: 1\ntime: 0.043159s"];
    "pandas.core.reshape.concat.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat.<module>\ncalls: 1\ntime: 0.011200s"];
    "typing.overload" [color = "#e5e5e5ff", label = "typing.overload\ncalls: 2\ntime: 0.000007s"];
    "pandas.core.reshape.concat._Concatenator" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator\ncalls: 1\ntime: 0.000052s"];
    "pandas.core.reshape.melt.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.melt.<module>\ncalls: 1\ntime: 0.001379s"];
    "pandas.core.reshape.merge.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.merge.<module>\ncalls: 1\ntime: 0.005197s"];
    "pandas.core.reshape.merge._MergeOperation" [color = "#e5e5e5ff", label = "pandas.core.reshape.merge._MergeOperation\ncalls: 1\ntime: 0.002981s"];
    "pandas.core.reshape.merge._OrderedMerge" [color = "#e5e5e5ff", label = "pandas.core.reshape.merge._OrderedMerge\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.reshape.merge._AsOfMerge" [color = "#e5e5e5ff", label = "pandas.core.reshape.merge._AsOfMerge\ncalls: 1\ntime: 0.000014s"];
    "pandas.core.reshape.pivot.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.pivot.<module>\ncalls: 1\ntime: 0.005496s"];
    "pandas.core.reshape.util.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.util.<module>\ncalls: 1\ntime: 0.000146s"];
    "pandas.core.reshape.reshape.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.reshape.<module>\ncalls: 1\ntime: 0.000733s"];
    "pandas.core.reshape.reshape._Unstacker" [color = "#e5e5e5ff", label = "pandas.core.reshape.reshape._Unstacker\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.reshape.tile.<module>" [color = "#e5e5e5ff", label = "pandas.core.reshape.tile.<module>\ncalls: 1\ntime: 0.000495s"];
    "pandas.api.<module>" [color = "#e5e5e5ff", label = "pandas.api.<module>\ncalls: 1\ntime: 0.012852s"];
    "pandas.api.extensions.<module>" [color = "#e5e5e5ff", label = "pandas.api.extensions.<module>\ncalls: 1\ntime: 0.000148s"];
    "pandas.api.indexers.<module>" [color = "#e5e5e5ff", label = "pandas.api.indexers.<module>\ncalls: 1\ntime: 0.000058s"];
    "pandas.api.types.<module>" [color = "#e5e5e5ff", label = "pandas.api.types.<module>\ncalls: 1\ntime: 0.002893s"];
    "pandas.core.dtypes.api.<module>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.api.<module>\ncalls: 1\ntime: 0.000042s"];
    "pandas.util._print_versions.<module>" [color = "#e5e5e5ff", label = "pandas.util._print_versions.<module>\ncalls: 1\ntime: 0.004453s"];
    "pandas.io.api.<module>" [color = "#e4e5e5ff", label = "pandas.io.api.<module>\ncalls: 1\ntime: 0.203166s"];
    "pandas.io.clipboards.<module>" [color = "#e5e5e5ff", label = "pandas.io.clipboards.<module>\ncalls: 1\ntime: 0.000196s"];
    "pandas.io.excel.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel.<module>\ncalls: 1\ntime: 0.063245s"];
    "pandas.io.excel._base.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._base.<module>\ncalls: 1\ntime: 0.051178s"];
    "csv.<module>" [color = "#e5e5e5ff", label = "csv.<module>\ncalls: 1\ntime: 0.003374s"];
    "csv.Dialect" [color = "#e5e5e5ff", label = "csv.Dialect\ncalls: 1\ntime: 0.000016s"];
    "csv.excel" [color = "#e5e5e5ff", label = "csv.excel\ncalls: 1\ntime: 0.000011s"];
    "csv.excel_tab" [color = "#e5e5e5ff", label = "csv.excel_tab\ncalls: 1\ntime: 0.000006s"];
    "csv.unix_dialect" [color = "#e5e5e5ff", label = "csv.unix_dialect\ncalls: 1\ntime: 0.000011s"];
    "csv.DictReader" [color = "#e5e5e5ff", label = "csv.DictReader\ncalls: 1\ntime: 0.000012s"];
    "csv.DictWriter" [color = "#e5e5e5ff", label = "csv.DictWriter\ncalls: 1\ntime: 0.000010s"];
    "csv.Sniffer" [color = "#e5e5e5ff", label = "csv.Sniffer\ncalls: 1\ntime: 0.000010s"];
    "pandas.io.excel._util.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._util.<module>\ncalls: 1\ntime: 0.000070s"];
    "pandas.io.parsers.<module>" [color = "#e5e5e5ff", label = "pandas.io.parsers.<module>\ncalls: 1\ntime: 0.010295s"];
    "pandas.io.date_converters.<module>" [color = "#e5e5e5ff", label = "pandas.io.date_converters.<module>\ncalls: 1\ntime: 0.000051s"];
    "textwrap.fill" [color = "#e5e5e5ff", label = "textwrap.fill\ncalls: 2\ntime: 0.001512s"];
    "textwrap.TextWrapper.__init__" [color = "#e5e5e5ff", label = "textwrap.TextWrapper.__init__\ncalls: 2\ntime: 0.000044s"];
    "textwrap.TextWrapper.fill" [color = "#e5e5e5ff", label = "textwrap.TextWrapper.fill\ncalls: 2\ntime: 0.001344s"];
    "textwrap.TextWrapper.wrap" [color = "#e5e5e5ff", label = "textwrap.TextWrapper.wrap\ncalls: 2\ntime: 0.001288s"];
    "textwrap.TextWrapper._split_chunks" [color = "#e5e5e5ff", label = "textwrap.TextWrapper._split_chunks\ncalls: 2\ntime: 0.000425s"];
    "textwrap.TextWrapper._munge_whitespace" [color = "#e5e5e5ff", label = "textwrap.TextWrapper._munge_whitespace\ncalls: 2\ntime: 0.000026s"];
    "textwrap.TextWrapper._split" [color = "#e5e5e5ff", label = "textwrap.TextWrapper._split\ncalls: 2\ntime: 0.000291s"];
    "textwrap.<listcomp>" [color = "#e5e5e5ff", label = "textwrap.<listcomp>\ncalls: 2\ntime: 0.000172s"];
    "textwrap.TextWrapper._wrap_chunks" [color = "#e5e5e5ff", label = "textwrap.TextWrapper._wrap_chunks\ncalls: 2\ntime: 0.000750s"];
    "pandas.io.parsers._make_parser_function" [color = "#e5e5e5ff", label = "pandas.io.parsers._make_parser_function\ncalls: 2\ntime: 0.000135s"];
    "pandas.io.parsers.TextFileReader" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader\ncalls: 1\ntime: 0.000018s"];
    "pandas.io.parsers.ParserBase" [color = "#e5e5e5ff", label = "pandas.io.parsers.ParserBase\ncalls: 1\ntime: 0.000028s"];
    "pandas.io.parsers.CParserWrapper" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper\ncalls: 1\ntime: 0.000014s"];
    "pandas.io.parsers.PythonParser" [color = "#e5e5e5ff", label = "pandas.io.parsers.PythonParser\ncalls: 1\ntime: 0.000032s"];
    "pandas.io.parsers.FixedWidthReader" [color = "#e5e5e5ff", label = "pandas.io.parsers.FixedWidthReader\ncalls: 1\ntime: 0.000010s"];
    "pandas.io.parsers.FixedWidthFieldParser" [color = "#e5e5e5ff", label = "pandas.io.parsers.FixedWidthFieldParser\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.excel._base._BaseExcelReader" [color = "#e5e5e5ff", label = "pandas.io.excel._base._BaseExcelReader\ncalls: 1\ntime: 0.000124s"];
    "pandas.io.excel._base.ExcelWriter" [color = "#e5e5e5ff", label = "pandas.io.excel._base.ExcelWriter\ncalls: 1\ntime: 0.000097s"];
    "pandas.io.excel._base.ExcelFile" [color = "#e5e5e5ff", label = "pandas.io.excel._base.ExcelFile\ncalls: 1\ntime: 0.017494s"];
    "pandas.io.excel._odfreader.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._odfreader.<module>\ncalls: 1\ntime: 0.003536s"];
    "pandas.io.excel._odfreader._ODFReader" [color = "#e5e5e5ff", label = "pandas.io.excel._odfreader._ODFReader\ncalls: 1\ntime: 0.002917s"];
    "pandas.io.excel._openpyxl.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._openpyxl.<module>\ncalls: 1\ntime: 0.001069s"];
    "pandas.io.excel._openpyxl._OpenpyxlWriter" [color = "#e5e5e5ff", label = "pandas.io.excel._openpyxl._OpenpyxlWriter\ncalls: 1\ntime: 0.000034s"];
    "pandas.io.excel._openpyxl._OpenpyxlReader" [color = "#e5e5e5ff", label = "pandas.io.excel._openpyxl._OpenpyxlReader\ncalls: 1\ntime: 0.000176s"];
    "pandas.io.excel._xlrd.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._xlrd.<module>\ncalls: 1\ntime: 0.000595s"];
    "pandas.io.excel._xlrd._XlrdReader" [color = "#e5e5e5ff", label = "pandas.io.excel._xlrd._XlrdReader\ncalls: 1\ntime: 0.000016s"];
    "pandas.io.excel._pyxlsb.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._pyxlsb.<module>\ncalls: 1\ntime: 0.000682s"];
    "pandas.io.excel._pyxlsb._PyxlsbReader" [color = "#e5e5e5ff", label = "pandas.io.excel._pyxlsb._PyxlsbReader\ncalls: 1\ntime: 0.000177s"];
    "pandas.io.excel._xlsxwriter.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._xlsxwriter.<module>\ncalls: 1\ntime: 0.002329s"];
    "pandas.io.excel._xlsxwriter._XlsxStyler" [color = "#e5e5e5ff", label = "pandas.io.excel._xlsxwriter._XlsxStyler\ncalls: 1\ntime: 0.000061s"];
    "pandas.io.excel._xlsxwriter._XlsxWriter" [color = "#e5e5e5ff", label = "pandas.io.excel._xlsxwriter._XlsxWriter\ncalls: 1\ntime: 0.000011s"];
    "pandas.io.excel._xlwt.<module>" [color = "#e5e5e5ff", label = "pandas.io.excel._xlwt.<module>\ncalls: 1\ntime: 0.000441s"];
    "pandas.io.excel._xlwt._XlwtWriter" [color = "#e5e5e5ff", label = "pandas.io.excel._xlwt._XlwtWriter\ncalls: 1\ntime: 0.000018s"];
    "pandas.io.excel._util.register_writer" [color = "#e5e5e5ff", label = "pandas.io.excel._util.register_writer\ncalls: 3\ntime: 0.000020s"];
    "pandas.io.feather_format.<module>" [color = "#e5e5e5ff", label = "pandas.io.feather_format.<module>\ncalls: 1\ntime: 0.000202s"];
    "pandas.io.gbq.<module>" [color = "#e5e5e5ff", label = "pandas.io.gbq.<module>\ncalls: 1\ntime: 0.004469s"];
    "pandas.io.html.<module>" [color = "#e5e5e5ff", label = "pandas.io.html.<module>\ncalls: 1\ntime: 0.004919s"];
    "pandas.io.html._HtmlFrameParser" [color = "#e5e5e5ff", label = "pandas.io.html._HtmlFrameParser\ncalls: 1\ntime: 0.000021s"];
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser" [color = "#e5e5e5ff", label = "pandas.io.html._BeautifulSoupHtml5LibFrameParser\ncalls: 1\ntime: 0.000024s"];
    "pandas.io.html._LxmlFrameParser" [color = "#e5e5e5ff", label = "pandas.io.html._LxmlFrameParser\ncalls: 1\ntime: 0.000024s"];
    "pandas.io.json.<module>" [color = "#e5e5e5ff", label = "pandas.io.json.<module>\ncalls: 1\ntime: 0.028586s"];
    "pandas.io.json._json.<module>" [color = "#e5e5e5ff", label = "pandas.io.json._json.<module>\ncalls: 1\ntime: 0.025025s"];
    "pandas.io.json._normalize.<module>" [color = "#e5e5e5ff", label = "pandas.io.json._normalize.<module>\ncalls: 1\ntime: 0.016092s"];
    "pandas.util._decorators.deprecate" [color = "#e5e5e5ff", label = "pandas.util._decorators.deprecate\ncalls: 1\ntime: 0.002025s"];
    "pandas.io.json._table_schema.<module>" [color = "#e5e5e5ff", label = "pandas.io.json._table_schema.<module>\ncalls: 1\ntime: 0.000401s"];
    "pandas.io.json._json.Writer" [color = "#e5e5e5ff", label = "pandas.io.json._json.Writer\ncalls: 1\ntime: 0.000272s"];
    "pandas.io.json._json.SeriesWriter" [color = "#e5e5e5ff", label = "pandas.io.json._json.SeriesWriter\ncalls: 1\ntime: 0.000146s"];
    "pandas.io.json._json.FrameWriter" [color = "#e5e5e5ff", label = "pandas.io.json._json.FrameWriter\ncalls: 1\ntime: 0.000146s"];
    "pandas.io.json._json.JSONTableWriter" [color = "#e5e5e5ff", label = "pandas.io.json._json.JSONTableWriter\ncalls: 1\ntime: 0.000140s"];
    "pandas.io.json._json.JsonReader" [color = "#e5e5e5ff", label = "pandas.io.json._json.JsonReader\ncalls: 1\ntime: 0.000014s"];
    "pandas.io.json._json.Parser" [color = "#e5e5e5ff", label = "pandas.io.json._json.Parser\ncalls: 1\ntime: 0.000018s"];
    "pandas.io.json._json.SeriesParser" [color = "#e5e5e5ff", label = "pandas.io.json._json.SeriesParser\ncalls: 1\ntime: 0.000009s"];
    "pandas.io.json._json.FrameParser" [color = "#e5e5e5ff", label = "pandas.io.json._json.FrameParser\ncalls: 1\ntime: 0.000012s"];
    "pandas.io.orc.<module>" [color = "#e5e5e5ff", label = "pandas.io.orc.<module>\ncalls: 1\ntime: 0.000158s"];
    "pandas.io.parquet.<module>" [color = "#e5e5e5ff", label = "pandas.io.parquet.<module>\ncalls: 1\ntime: 0.000533s"];
    "pandas.io.parquet.BaseImpl" [color = "#e5e5e5ff", label = "pandas.io.parquet.BaseImpl\ncalls: 1\ntime: 0.000012s"];
    "pandas.io.parquet.PyArrowImpl" [color = "#e5e5e5ff", label = "pandas.io.parquet.PyArrowImpl\ncalls: 1\ntime: 0.000031s"];
    "pandas.io.parquet.FastParquetImpl" [color = "#e5e5e5ff", label = "pandas.io.parquet.FastParquetImpl\ncalls: 1\ntime: 0.000013s"];
    "pandas.io.pickle.<module>" [color = "#e5e5e5ff", label = "pandas.io.pickle.<module>\ncalls: 1\ntime: 0.003530s"];
    "pandas.compat.pickle_compat.<module>" [color = "#e5e5e5ff", label = "pandas.compat.pickle_compat.<module>\ncalls: 1\ntime: 0.000511s"];
    "pandas.compat.pickle_compat._LoadSparseSeries" [color = "#e5e5e5ff", label = "pandas.compat.pickle_compat._LoadSparseSeries\ncalls: 1\ntime: 0.000005s"];
    "pandas.compat.pickle_compat._LoadSparseFrame" [color = "#e5e5e5ff", label = "pandas.compat.pickle_compat._LoadSparseFrame\ncalls: 1\ntime: 0.000005s"];
    "pandas.compat.pickle_compat.Unpickler" [color = "#e5e5e5ff", label = "pandas.compat.pickle_compat.Unpickler\ncalls: 1\ntime: 0.000006s"];
    "copy.copy" [color = "#e2e5e5ff", label = "copy.copy\ncalls: 411\ntime: 0.040149s"];
    "pandas.io.pytables.<module>" [color = "#e5e5e5ff", label = "pandas.io.pytables.<module>\ncalls: 1\ntime: 0.038703s"];
    "pandas.core.computation.pytables.<module>" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.<module>\ncalls: 1\ntime: 0.005337s"];
    "pandas.core.computation.pytables.PyTablesScope" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.PyTablesScope\ncalls: 1\ntime: 0.000125s"];
    "pandas.core.computation.pytables.Term" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.Term\ncalls: 1\ntime: 0.000012s"];
    "pandas.core.computation.pytables.Constant" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.Constant\ncalls: 1\ntime: 0.000007s"];
    "pandas.core.computation.pytables.BinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.BinOp\ncalls: 1\ntime: 0.000101s"];
    "pandas.core.computation.pytables.FilterBinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.FilterBinOp\ncalls: 1\ntime: 0.002807s"];
    "pandas.core.computation.pytables.JointFilterBinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.JointFilterBinOp\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.computation.pytables.ConditionBinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.ConditionBinOp\ncalls: 1\ntime: 0.000009s"];
    "pandas.core.computation.pytables.JointConditionBinOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.JointConditionBinOp\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.computation.pytables.UnaryOp" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.UnaryOp\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.computation.pytables.PyTablesExprVisitor" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.PyTablesExprVisitor\ncalls: 1\ntime: 0.000020s"];
    "pandas.core.computation.pytables.PyTablesExpr" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.PyTablesExpr\ncalls: 1\ntime: 0.000942s"];
    "pandas.core.computation.pytables.TermValue" [color = "#e5e5e5ff", label = "pandas.core.computation.pytables.TermValue\ncalls: 1\ntime: 0.000008s"];
    "pandas.io.pytables.PossibleDataLossError" [color = "#e5e5e5ff", label = "pandas.io.pytables.PossibleDataLossError\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.pytables.ClosedFileError" [color = "#e5e5e5ff", label = "pandas.io.pytables.ClosedFileError\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.pytables.IncompatibilityWarning" [color = "#e5e5e5ff", label = "pandas.io.pytables.IncompatibilityWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.pytables.AttributeConflictWarning" [color = "#e5e5e5ff", label = "pandas.io.pytables.AttributeConflictWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.pytables.DuplicateWarning" [color = "#e5e5e5ff", label = "pandas.io.pytables.DuplicateWarning\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.pytables.HDFStore" [color = "#e5e5e5ff", label = "pandas.io.pytables.HDFStore\ncalls: 1\ntime: 0.003879s"];
    "pandas.io.pytables.TableIterator" [color = "#e5e5e5ff", label = "pandas.io.pytables.TableIterator\ncalls: 1\ntime: 0.000118s"];
    "pandas.io.pytables.IndexCol" [color = "#e5e5e5ff", label = "pandas.io.pytables.IndexCol\ncalls: 1\ntime: 0.000079s"];
    "pandas.io.pytables.GenericIndexCol" [color = "#e5e5e5ff", label = "pandas.io.pytables.GenericIndexCol\ncalls: 1\ntime: 0.000011s"];
    "pandas.io.pytables.DataCol" [color = "#e5e5e5ff", label = "pandas.io.pytables.DataCol\ncalls: 1\ntime: 0.001514s"];
    "pandas.io.pytables.DataIndexableCol" [color = "#e5e5e5ff", label = "pandas.io.pytables.DataIndexableCol\ncalls: 1\ntime: 0.000014s"];
    "pandas.io.pytables.GenericDataIndexableCol" [color = "#e5e5e5ff", label = "pandas.io.pytables.GenericDataIndexableCol\ncalls: 1\ntime: 0.000006s"];
    "pandas.io.pytables.Fixed" [color = "#e5e5e5ff", label = "pandas.io.pytables.Fixed\ncalls: 1\ntime: 0.004049s"];
    "pandas.io.pytables.GenericFixed" [color = "#e5e5e5ff", label = "pandas.io.pytables.GenericFixed\ncalls: 1\ntime: 0.000280s"];
    "pandas.io.pytables.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.io.pytables.<dictcomp>\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.pytables.SeriesFixed" [color = "#e5e5e5ff", label = "pandas.io.pytables.SeriesFixed\ncalls: 1\ntime: 0.000070s"];
    "pandas.io.pytables.BlockManagerFixed" [color = "#e5e5e5ff", label = "pandas.io.pytables.BlockManagerFixed\ncalls: 1\ntime: 0.000050s"];
    "pandas.io.pytables.FrameFixed" [color = "#e5e5e5ff", label = "pandas.io.pytables.FrameFixed\ncalls: 1\ntime: 0.000006s"];
    "pandas.io.pytables.Table" [color = "#e5e5e5ff", label = "pandas.io.pytables.Table\ncalls: 1\ntime: 0.009324s"];
    "pandas.io.pytables.WORMTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.WORMTable\ncalls: 1\ntime: 0.000048s"];
    "pandas.io.pytables.AppendableTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.AppendableTable\ncalls: 1\ntime: 0.000155s"];
    "pandas.io.pytables.AppendableFrameTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.AppendableFrameTable\ncalls: 1\ntime: 0.000140s"];
    "pandas.io.pytables.AppendableSeriesTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.AppendableSeriesTable\ncalls: 1\ntime: 0.000060s"];
    "pandas.io.pytables.AppendableMultiSeriesTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.AppendableMultiSeriesTable\ncalls: 1\ntime: 0.000010s"];
    "pandas.io.pytables.GenericTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.GenericTable\ncalls: 1\ntime: 0.000018s"];
    "pandas.io.pytables.AppendableMultiFrameTable" [color = "#e5e5e5ff", label = "pandas.io.pytables.AppendableMultiFrameTable\ncalls: 1\ntime: 0.003108s"];
    "pandas.io.pytables.Selection" [color = "#e5e5e5ff", label = "pandas.io.pytables.Selection\ncalls: 1\ntime: 0.000049s"];
    "pandas.io.sas.<module>" [color = "#e5e5e5ff", label = "pandas.io.sas.<module>\ncalls: 1\ntime: 0.003181s"];
    "pandas.io.sas.sasreader.<module>" [color = "#e5e5e5ff", label = "pandas.io.sas.sasreader.<module>\ncalls: 1\ntime: 0.000036s"];
    "pandas.io.spss.<module>" [color = "#e5e5e5ff", label = "pandas.io.spss.<module>\ncalls: 1\ntime: 0.001040s"];
    "pandas.io.sql.<module>" [color = "#e5e5e5ff", label = "pandas.io.sql.<module>\ncalls: 1\ntime: 0.001239s"];
    "pandas.io.sql.SQLAlchemyRequired" [color = "#e5e5e5ff", label = "pandas.io.sql.SQLAlchemyRequired\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.sql.DatabaseError" [color = "#e5e5e5ff", label = "pandas.io.sql.DatabaseError\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.sql.SQLTable" [color = "#e5e5e5ff", label = "pandas.io.sql.SQLTable\ncalls: 1\ntime: 0.000024s"];
    "pandas.io.sql.PandasSQL" [color = "#e5e5e5ff", label = "pandas.io.sql.PandasSQL\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.sql.SQLDatabase" [color = "#e5e5e5ff", label = "pandas.io.sql.SQLDatabase\ncalls: 1\ntime: 0.000123s"];
    "pandas.io.sql.SQLiteTable" [color = "#e5e5e5ff", label = "pandas.io.sql.SQLiteTable\ncalls: 1\ntime: 0.000015s"];
    "pandas.io.sql.SQLiteDatabase" [color = "#e5e5e5ff", label = "pandas.io.sql.SQLiteDatabase\ncalls: 1\ntime: 0.000123s"];
    "pandas.io.stata.<module>" [color = "#e5e5e5ff", label = "pandas.io.stata.<module>\ncalls: 1\ntime: 0.007134s"];
    "pandas.io.stata.PossiblePrecisionLoss" [color = "#e5e5e5ff", label = "pandas.io.stata.PossiblePrecisionLoss\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.stata.ValueLabelTypeMismatch" [color = "#e5e5e5ff", label = "pandas.io.stata.ValueLabelTypeMismatch\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.stata.InvalidColumnName" [color = "#e5e5e5ff", label = "pandas.io.stata.InvalidColumnName\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.stata.StataValueLabel" [color = "#e5e5e5ff", label = "pandas.io.stata.StataValueLabel\ncalls: 1\ntime: 0.000009s"];
    "pandas.io.stata.StataMissingValue" [color = "#e5e5e5ff", label = "pandas.io.stata.StataMissingValue\ncalls: 1\ntime: 0.000809s"];
    "pandas.io.stata.StataParser" [color = "#e5e5e5ff", label = "pandas.io.stata.StataParser\ncalls: 1\ntime: 0.000006s"];
    "pandas.io.stata.StataReader" [color = "#e5e5e5ff", label = "pandas.io.stata.StataReader\ncalls: 1\ntime: 0.000398s"];
    "pandas.io.stata.StataWriter" [color = "#e5e5e5ff", label = "pandas.io.stata.StataWriter\ncalls: 1\ntime: 0.000052s"];
    "pandas.io.stata.StataStrLWriter" [color = "#e5e5e5ff", label = "pandas.io.stata.StataStrLWriter\ncalls: 1\ntime: 0.000010s"];
    "pandas.io.stata.StataWriter117" [color = "#e5e5e5ff", label = "pandas.io.stata.StataWriter117\ncalls: 1\ntime: 0.000035s"];
    "pandas.io.stata.StataWriterUTF8" [color = "#e5e5e5ff", label = "pandas.io.stata.StataWriterUTF8\ncalls: 1\ntime: 0.003699s"];
    "pandas.util._tester.<module>" [color = "#e5e5e5ff", label = "pandas.util._tester.<module>\ncalls: 1\ntime: 0.000116s"];
    "pandas.testing.<module>" [color = "#e5e5e5ff", label = "pandas.testing.<module>\ncalls: 1\ntime: 0.009075s"];
    "pandas._testing.<module>" [color = "#e5e5e5ff", label = "pandas._testing.<module>\ncalls: 1\ntime: 0.004632s"];
    "pandas._testing.set_testing_mode" [color = "#e5e5e5ff", label = "pandas._testing.set_testing_mode\ncalls: 1\ntime: 0.000084s"];
    "pandas._testing.optional_args" [color = "#e5e5e5ff", label = "pandas._testing.optional_args\ncalls: 1\ntime: 0.000085s"];
    "pandas._testing.RNGContext" [color = "#e5e5e5ff", label = "pandas._testing.RNGContext\ncalls: 1\ntime: 0.000008s"];
    "pandas._testing.SubclassedSeries" [color = "#e5e5e5ff", label = "pandas._testing.SubclassedSeries\ncalls: 1\ntime: 0.000008s"];
    "pandas._testing.SubclassedDataFrame" [color = "#e5e5e5ff", label = "pandas._testing.SubclassedDataFrame\ncalls: 1\ntime: 0.000012s"];
    "pandas._testing.SubclassedCategorical" [color = "#e5e5e5ff", label = "pandas._testing.SubclassedCategorical\ncalls: 1\ntime: 0.000005s"];
    "pandas._version.<module>" [color = "#e5e5e5ff", label = "pandas._version.<module>\ncalls: 1\ntime: 0.000204s"];
    "warnings.catch_warnings.__init__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__init__\ncalls: 32\ntime: 0.000224s"];
    "warnings.catch_warnings.__enter__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__enter__\ncalls: 32\ntime: 0.000589s"];
    "warnings.catch_warnings.__exit__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__exit__\ncalls: 32\ntime: 0.000306s"];
    "pandas._version.get_versions" [color = "#e5e5e5ff", label = "pandas._version.get_versions\ncalls: 1\ntime: 0.000160s"];
    "json.loads" [color = "#e5e5e5ff", label = "json.loads\ncalls: 3\ntime: 0.013406s"];
    "json.decoder.JSONDecoder.decode" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder.decode\ncalls: 3\ntime: 0.013099s"];
    "json.decoder.JSONDecoder.raw_decode" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder.raw_decode\ncalls: 3\ntime: 0.012954s"];
    "pandas.Panel" [color = "#e5e5e5ff", label = "pandas.Panel\ncalls: 1\ntime: 0.000006s"];
    "pandas.SparseDataFrame" [color = "#e5e5e5ff", label = "pandas.SparseDataFrame\ncalls: 1\ntime: 0.000005s"];
    "pandas.SparseSeries" [color = "#e5e5e5ff", label = "pandas.SparseSeries\ncalls: 1\ntime: 0.000005s"];
    "pandas.__numpy" [color = "#e5e5e5ff", label = "pandas.__numpy\ncalls: 1\ntime: 0.000006s"];
    "pandas.__numpy.__init__" [color = "#e5e5e5ff", label = "pandas.__numpy.__init__\ncalls: 1\ntime: 0.000009s"];
    "pandas.__Datetime" [color = "#e5e5e5ff", label = "pandas.__Datetime\ncalls: 1\ntime: 0.000033s"];
    "pandas.__DatetimeSub" [color = "#e5e5e5ff", label = "pandas.__DatetimeSub\ncalls: 1\ntime: 0.000006s"];
    "pandas.__SparseArray" [color = "#e5e5e5ff", label = "pandas.__SparseArray\ncalls: 1\ntime: 0.000041s"];
    "pandas.__SparseArraySub" [color = "#e5e5e5ff", label = "pandas.__SparseArraySub\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.<module>" [color = "#e3e5e5ff", label = "matplotlib.<module>\ncalls: 1\ntime: 0.741390s"];
    "matplotlib.cbook.<module>" [color = "#e5e5e5ff", label = "matplotlib.cbook.<module>\ncalls: 1\ntime: 0.030204s"];
    "glob.<module>" [color = "#e5e5e5ff", label = "glob.<module>\ncalls: 1\ntime: 0.005502s"];
    "shlex.<module>" [color = "#e5e5e5ff", label = "shlex.<module>\ncalls: 1\ntime: 0.004811s"];
    "shlex.shlex" [color = "#e5e5e5ff", label = "shlex.shlex\ncalls: 1\ntime: 0.000016s"];
    "matplotlib.cbook.deprecation.<module>" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation.<module>\ncalls: 1\ntime: 0.000271s"];
    "matplotlib.cbook.deprecation.MatplotlibDeprecationWarning" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation.MatplotlibDeprecationWarning\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.cbook.deprecation._deprecated_parameter_class" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._deprecated_parameter_class\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.cbook._StrongRef" [color = "#e5e5e5ff", label = "matplotlib.cbook._StrongRef\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.cbook.CallbackRegistry" [color = "#e5e5e5ff", label = "matplotlib.cbook.CallbackRegistry\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.cbook.silent_list" [color = "#e5e5e5ff", label = "matplotlib.cbook.silent_list\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.cbook.IgnoredKeywordWarning" [color = "#e5e5e5ff", label = "matplotlib.cbook.IgnoredKeywordWarning\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.cbook.deprecation.deprecated" [color = "#e4e5e5ff", label = "matplotlib.cbook.deprecation.deprecated\ncalls: 135\ntime: 0.001180s"];
    "matplotlib.cbook.deprecation.deprecate" [color = "#e4e5e5ff", label = "matplotlib.cbook.deprecation.deprecate\ncalls: 135\ntime: 0.033238s"];
    "matplotlib.cbook.deprecation._generate_deprecation_warning" [color = "#e4e5e5ff", label = "matplotlib.cbook.deprecation._generate_deprecation_warning\ncalls: 152\ntime: 0.003717s"];
    "inspect.cleandoc" [color = "#d2e0e5ff", label = "inspect.cleandoc\ncalls: 2573\ntime: 0.286704s"];
    "matplotlib.cbook.deprecation.finalize" [color = "#e4e5e5ff", label = "matplotlib.cbook.deprecation.finalize\ncalls: 135\ntime: 0.009494s"];
    "matplotlib.cbook.maxdict" [color = "#e5e5e5ff", label = "matplotlib.cbook.maxdict\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.cbook.Stack" [color = "#e5e5e5ff", label = "matplotlib.cbook.Stack\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.cbook.Grouper" [color = "#e5e5e5ff", label = "matplotlib.cbook.Grouper\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.cbook.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.cbook.<dictcomp>\ncalls: 5\ntime: 0.000026s"];
    "matplotlib.cbook._OrderedSet" [color = "#e5e5e5ff", label = "matplotlib.cbook._OrderedSet\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.cbook._classproperty" [color = "#e5e5e5ff", label = "matplotlib.cbook._classproperty\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.rcsetup.<module>" [color = "#e4e5e5ff", label = "matplotlib.rcsetup.<module>\ncalls: 1\ntime: 0.498814s"];
    "matplotlib.fontconfig_pattern.<module>" [color = "#e4e5e5ff", label = "matplotlib.fontconfig_pattern.<module>\ncalls: 1\ntime: 0.457622s"];
    "pyparsing.<module>" [color = "#e4e5e5ff", label = "pyparsing.<module>\ncalls: 1\ntime: 0.404790s"];
    "pyparsing.<listcomp>" [color = "#e3e5e5ff", label = "pyparsing.<listcomp>\ncalls: 173\ntime: 0.104314s"];
    "pyparsing.<genexpr>" [color = "#dce4e5ff", label = "pyparsing.<genexpr>\ncalls: 1251\ntime: 0.009392s"];
    "pyparsing.ParseBaseException" [color = "#e5e5e5ff", label = "pyparsing.ParseBaseException\ncalls: 1\ntime: 0.000013s"];
    "pyparsing.ParseException" [color = "#e5e5e5ff", label = "pyparsing.ParseException\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.ParseFatalException" [color = "#e5e5e5ff", label = "pyparsing.ParseFatalException\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.ParseSyntaxException" [color = "#e5e5e5ff", label = "pyparsing.ParseSyntaxException\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.RecursiveGrammarException" [color = "#e5e5e5ff", label = "pyparsing.RecursiveGrammarException\ncalls: 1\ntime: 0.000007s"];
    "pyparsing._ParseResultsWithOffset" [color = "#e5e5e5ff", label = "pyparsing._ParseResultsWithOffset\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.ParseResults" [color = "#e5e5e5ff", label = "pyparsing.ParseResults\ncalls: 1\ntime: 0.000058s"];
    "pyparsing.ParserElement" [color = "#e5e5e5ff", label = "pyparsing.ParserElement\ncalls: 1\ntime: 0.000212s"];
    "pyparsing._UnboundedCache" [color = "#e5e5e5ff", label = "pyparsing._UnboundedCache\ncalls: 1\ntime: 0.000005s"];
    "pyparsing._FifoCache" [color = "#e5e5e5ff", label = "pyparsing._FifoCache\ncalls: 1\ntime: 0.000005s"];
    "pyparsing._PendingSkip" [color = "#e5e5e5ff", label = "pyparsing._PendingSkip\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.Token" [color = "#e5e5e5ff", label = "pyparsing.Token\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Empty" [color = "#e5e5e5ff", label = "pyparsing.Empty\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.NoMatch" [color = "#e5e5e5ff", label = "pyparsing.NoMatch\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Literal" [color = "#e5e5e5ff", label = "pyparsing.Literal\ncalls: 1\ntime: 0.000008s"];
    "pyparsing._SingleCharLiteral" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.Keyword" [color = "#e5e5e5ff", label = "pyparsing.Keyword\ncalls: 1\ntime: 0.000013s"];
    "pyparsing.CaselessLiteral" [color = "#e5e5e5ff", label = "pyparsing.CaselessLiteral\ncalls: 1\ntime: 0.000009s"];
    "pyparsing.CaselessKeyword" [color = "#e5e5e5ff", label = "pyparsing.CaselessKeyword\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.CloseMatch" [color = "#e5e5e5ff", label = "pyparsing.CloseMatch\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Word" [color = "#e5e5e5ff", label = "pyparsing.Word\ncalls: 1\ntime: 0.000010s"];
    "pyparsing._WordRegex" [color = "#e5e5e5ff", label = "pyparsing._WordRegex\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.Char" [color = "#e5e5e5ff", label = "pyparsing.Char\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Regex" [color = "#e5e5e5ff", label = "pyparsing.Regex\ncalls: 1\ntime: 0.000014s"];
    "pyparsing.QuotedString" [color = "#e5e5e5ff", label = "pyparsing.QuotedString\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.CharsNotIn" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.White" [color = "#e5e5e5ff", label = "pyparsing.White\ncalls: 1\ntime: 0.000034s"];
    "pyparsing._PositionToken" [color = "#e5e5e5ff", label = "pyparsing._PositionToken\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.GoToColumn" [color = "#e5e5e5ff", label = "pyparsing.GoToColumn\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.LineStart" [color = "#e5e5e5ff", label = "pyparsing.LineStart\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.LineEnd" [color = "#e5e5e5ff", label = "pyparsing.LineEnd\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.StringStart" [color = "#e5e5e5ff", label = "pyparsing.StringStart\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.StringEnd" [color = "#e5e5e5ff", label = "pyparsing.StringEnd\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.WordStart" [color = "#e5e5e5ff", label = "pyparsing.WordStart\ncalls: 1\ntime: 0.000009s"];
    "pyparsing.WordEnd" [color = "#e5e5e5ff", label = "pyparsing.WordEnd\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.ParseExpression" [color = "#e5e5e5ff", label = "pyparsing.ParseExpression\ncalls: 1\ntime: 0.000018s"];
    "pyparsing.And" [color = "#e5e5e5ff", label = "pyparsing.And\ncalls: 1\ntime: 0.000073s"];
    "pyparsing._ErrorStop" [color = "#e5e5e5ff", label = "pyparsing._ErrorStop\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Or" [color = "#e5e5e5ff", label = "pyparsing.Or\ncalls: 1\ntime: 0.000064s"];
    "pyparsing.MatchFirst" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst\ncalls: 1\ntime: 0.000015s"];
    "pyparsing.Each" [color = "#e5e5e5ff", label = "pyparsing.Each\ncalls: 1\ntime: 0.000012s"];
    "pyparsing.ParseElementEnhance" [color = "#e5e5e5ff", label = "pyparsing.ParseElementEnhance\ncalls: 1\ntime: 0.000016s"];
    "pyparsing.FollowedBy" [color = "#e5e5e5ff", label = "pyparsing.FollowedBy\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.PrecededBy" [color = "#e5e5e5ff", label = "pyparsing.PrecededBy\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.NotAny" [color = "#e5e5e5ff", label = "pyparsing.NotAny\ncalls: 1\ntime: 0.000010s"];
    "pyparsing._MultipleMatch" [color = "#e5e5e5ff", label = "pyparsing._MultipleMatch\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.OneOrMore" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.ZeroOrMore" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore\ncalls: 1\ntime: 0.000009s"];
    "pyparsing._NullToken" [color = "#e5e5e5ff", label = "pyparsing._NullToken\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Optional" [color = "#e5e5e5ff", label = "pyparsing.Optional\ncalls: 1\ntime: 0.000011s"];
    "pyparsing.SkipTo" [color = "#e5e5e5ff", label = "pyparsing.SkipTo\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Forward" [color = "#e5e5e5ff", label = "pyparsing.Forward\ncalls: 1\ntime: 0.000017s"];
    "pyparsing.TokenConverter" [color = "#e5e5e5ff", label = "pyparsing.TokenConverter\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Combine" [color = "#e5e5e5ff", label = "pyparsing.Combine\ncalls: 1\ntime: 0.000009s"];
    "pyparsing.Group" [color = "#e5e5e5ff", label = "pyparsing.Group\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Dict" [color = "#e5e5e5ff", label = "pyparsing.Dict\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Suppress" [color = "#e5e5e5ff", label = "pyparsing.Suppress\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.OnlyOnce" [color = "#e5e5e5ff", label = "pyparsing.OnlyOnce\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Empty.__init__" [color = "#e5e5e5ff", label = "pyparsing.Empty.__init__\ncalls: 3\ntime: 0.000211s"];
    "pyparsing.Empty.setName" [color = "#e5e5e5ff", label = "pyparsing.Empty.setName\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.LineStart.__init__" [color = "#e5e5e5ff", label = "pyparsing.LineStart.__init__\ncalls: 4\ntime: 0.000279s"];
    "pyparsing.LineStart.setName" [color = "#e5e5e5ff", label = "pyparsing.LineStart.setName\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.LineEnd.__init__" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.__init__\ncalls: 12\ntime: 0.000763s"];
    "pyparsing.LineEnd.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.setWhitespaceChars\ncalls: 3\ntime: 0.000022s"];
    "pyparsing.LineEnd.setName" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.setName\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.StringStart.__init__" [color = "#e5e5e5ff", label = "pyparsing.StringStart.__init__\ncalls: 4\ntime: 0.000235s"];
    "pyparsing.StringStart.setName" [color = "#e5e5e5ff", label = "pyparsing.StringStart.setName\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.StringEnd.__init__" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.__init__\ncalls: 8\ntime: 0.000448s"];
    "pyparsing.StringEnd.setName" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.setName\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Word.__init__" [color = "#e5e5e5ff", label = "pyparsing.Word.__init__\ncalls: 30\ntime: 0.093377s"];
    "pyparsing.Word.__str__" [color = "#e5e5e5ff", label = "pyparsing.Word.__str__\ncalls: 36\ntime: 0.000924s"];
    "pyparsing.charsAsStr" [color = "#e5e5e5ff", label = "pyparsing.charsAsStr\ncalls: 14\ntime: 0.000073s"];
    "pyparsing.Word.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.Word.setParseAction\ncalls: 1\ntime: 0.004148s"];
    "pyparsing._trim_arity" [color = "#e5e5e5ff", label = "pyparsing._trim_arity\ncalls: 25\ntime: 0.019333s"];
    "pyparsing.extract_stack" [color = "#e5e5e5ff", label = "pyparsing.extract_stack\ncalls: 24\ntime: 0.017966s"];
    "traceback.extract_stack" [color = "#e5e5e5ff", label = "traceback.extract_stack\ncalls: 24\ntime: 0.016555s"];
    "traceback.extract" [color = "#e5e5e5ff", label = "traceback.extract\ncalls: 24\ntime: 0.015455s"];
    "traceback.walk_stack" [color = "#e4e5e5ff", label = "traceback.walk_stack\ncalls: 96\ntime: 0.000524s"];
    "linecache.lazycache" [color = "#e4e5e5ff", label = "linecache.lazycache\ncalls: 72\ntime: 0.000632s"];
    "traceback.FrameSummary.__init__" [color = "#e4e5e5ff", label = "traceback.FrameSummary.__init__\ncalls: 72\ntime: 0.000751s"];
    "linecache.checkcache" [color = "#e5e5e5ff", label = "linecache.checkcache\ncalls: 24\ntime: 0.000751s"];
    "traceback.FrameSummary.line" [color = "#e4e5e5ff", label = "traceback.FrameSummary.line\ncalls: 96\ntime: 0.006469s"];
    "linecache.getline" [color = "#e4e5e5ff", label = "linecache.getline\ncalls: 72\ntime: 0.004969s"];
    "linecache.getlines" [color = "#e4e5e5ff", label = "linecache.getlines\ncalls: 72\ntime: 0.003558s"];
    "linecache.updatecache" [color = "#e5e5e5ff", label = "linecache.updatecache\ncalls: 1\ntime: 0.002972s"];
    "tokenize.open" [color = "#e5e5e5ff", label = "tokenize.open\ncalls: 1\ntime: 0.000891s"];
    "tokenize.detect_encoding" [color = "#e5e5e5ff", label = "tokenize.detect_encoding\ncalls: 1\ntime: 0.000708s"];
    "tokenize.read_or_stop" [color = "#e5e5e5ff", label = "tokenize.read_or_stop\ncalls: 1\ntime: 0.000154s"];
    "tokenize.find_cookie" [color = "#e5e5e5ff", label = "tokenize.find_cookie\ncalls: 1\ntime: 0.000416s"];
    "tokenize._get_normal_name" [color = "#e5e5e5ff", label = "tokenize._get_normal_name\ncalls: 1\ntime: 0.000008s"];
    "encodings.search_function" [color = "#e5e5e5ff", label = "encodings.search_function\ncalls: 1\ntime: 0.000291s"];
    "encodings.normalize_encoding" [color = "#e5e5e5ff", label = "encodings.normalize_encoding\ncalls: 1\ntime: 0.000041s"];
    "encodings.utf_8.getregentry" [color = "#e5e5e5ff", label = "encodings.utf_8.getregentry\ncalls: 1\ntime: 0.000077s"];
    "codecs.__new__" [color = "#e5e5e5ff", label = "codecs.__new__\ncalls: 1\ntime: 0.000021s"];
    "codecs.IncrementalDecoder.__init__" [color = "#e5e5e5ff", label = "codecs.IncrementalDecoder.__init__\ncalls: 30\ntime: 0.000164s"];
    "codecs.IncrementalDecoder.decode" [color = "#e5e5e5ff", label = "codecs.IncrementalDecoder.decode\ncalls: 35\ntime: 0.000365s"];
    "traceback.FrameSummary.__getitem__" [color = "#e5e5e5ff", label = "traceback.FrameSummary.__getitem__\ncalls: 24\ntime: 0.000493s"];
    "pyparsing.Regex.__init__" [color = "#e4e5e5ff", label = "pyparsing.Regex.__init__\ncalls: 81\ntime: 0.178277s"];
    "pyparsing.Regex.__str__" [color = "#e4e5e5ff", label = "pyparsing.Regex.__str__\ncalls: 108\ntime: 0.001658s"];
    "pyparsing.Regex.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.Regex.setParseAction\ncalls: 12\ntime: 0.008813s"];
    "pyparsing.Word.__or__" [color = "#e5e5e5ff", label = "pyparsing.Word.__or__\ncalls: 1\ntime: 0.000557s"];
    "pyparsing.MatchFirst.__init__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__init__\ncalls: 48\ntime: 0.006727s"];
    "pyparsing.MatchFirst.__or__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__or__\ncalls: 4\ntime: 0.000930s"];
    "pyparsing.CharsNotIn.__init__" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn.__init__\ncalls: 3\ntime: 0.000245s"];
    "pyparsing.CharsNotIn.__str__" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn.__str__\ncalls: 10\ntime: 0.000139s"];
    "pyparsing.Suppress.__init__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__init__\ncalls: 39\ntime: 0.004482s"];
    "pyparsing.Literal.__init__" [color = "#e4e5e5ff", label = "pyparsing.Literal.__init__\ncalls: 108\ntime: 0.005126s"];
    "pyparsing.Suppress.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.Suppress.setWhitespaceChars\ncalls: 13\ntime: 0.000088s"];
    "pyparsing.MatchFirst.__add__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__add__\ncalls: 1\ntime: 0.000379s"];
    "pyparsing.And.__init__" [color = "#e3e5e5ff", label = "pyparsing.And.__init__\ncalls: 201\ntime: 0.030326s"];
    "pyparsing.MatchFirst.__eq__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__eq__\ncalls: 4\ntime: 0.000028s"];
    "pyparsing.Suppress.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__eq__\ncalls: 9\ntime: 0.000062s"];
    "pyparsing.And.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.And.setWhitespaceChars\ncalls: 67\ntime: 0.000457s"];
    "pyparsing.And.__add__" [color = "#e5e5e5ff", label = "pyparsing.And.__add__\ncalls: 26\ntime: 0.007920s"];
    "pyparsing.And.__eq__" [color = "#e5e5e5ff", label = "pyparsing.And.__eq__\ncalls: 36\ntime: 0.000247s"];
    "pyparsing.Group.__init__" [color = "#e5e5e5ff", label = "pyparsing.Group.__init__\ncalls: 12\ntime: 0.000963s"];
    "pyparsing.Group.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.Group.setWhitespaceChars\ncalls: 3\ntime: 0.000021s"];
    "pyparsing.Optional.__init__" [color = "#e4e5e5ff", label = "pyparsing.Optional.__init__\ncalls: 75\ntime: 0.005552s"];
    "pyparsing.Optional.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.Optional.setWhitespaceChars\ncalls: 25\ntime: 0.000171s"];
    "pyparsing.Optional.setResultsName" [color = "#e5e5e5ff", label = "pyparsing.Optional.setResultsName\ncalls: 1\ntime: 0.000331s"];
    "pyparsing.Optional._setResultsName" [color = "#e5e5e5ff", label = "pyparsing.Optional._setResultsName\ncalls: 2\ntime: 0.000443s"];
    "pyparsing.Optional.copy" [color = "#e5e5e5ff", label = "pyparsing.Optional.copy\ncalls: 37\ntime: 0.004472s"];
    "copyreg._slotnames" [color = "#e5e5e5ff", label = "copyreg._slotnames\ncalls: 14\ntime: 0.000348s"];
    "copy._reconstruct" [color = "#e2e5e5ff", label = "copy._reconstruct\ncalls: 410\ntime: 0.021483s"];
    "copyreg.__newobj__" [color = "#e2e5e5ff", label = "copyreg.__newobj__\ncalls: 410\ntime: 0.001610s"];
    "pyparsing._SingleCharLiteral.__add__" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.__add__\ncalls: 9\ntime: 0.002634s"];
    "pyparsing._SingleCharLiteral.__eq__" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.__eq__\ncalls: 16\ntime: 0.000110s"];
    "pyparsing.Optional.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Optional.__eq__\ncalls: 26\ntime: 0.000176s"];
    "pyparsing.Group.__or__" [color = "#e5e5e5ff", label = "pyparsing.Group.__or__\ncalls: 1\ntime: 0.000234s"];
    "pyparsing.OneOrMore.__init__" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.__init__\ncalls: 9\ntime: 0.000711s"];
    "pyparsing.OneOrMore.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.setWhitespaceChars\ncalls: 3\ntime: 0.000020s"];
    "pyparsing.OneOrMore.stopOn" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.stopOn\ncalls: 3\ntime: 0.000020s"];
    "pyparsing.Group.setResultsName" [color = "#e5e5e5ff", label = "pyparsing.Group.setResultsName\ncalls: 1\ntime: 0.000206s"];
    "pyparsing.Group._setResultsName" [color = "#e5e5e5ff", label = "pyparsing.Group._setResultsName\ncalls: 1\ntime: 0.000189s"];
    "pyparsing.Group.copy" [color = "#e5e5e5ff", label = "pyparsing.Group.copy\ncalls: 1\ntime: 0.000166s"];
    "pyparsing.Group.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Group.__eq__\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.tokenMap" [color = "#e5e5e5ff", label = "pyparsing.tokenMap\ncalls: 7\ntime: 0.000091s"];
    "pyparsing.Regex.__add__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__add__\ncalls: 14\ntime: 0.004778s"];
    "pyparsing.Regex.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__eq__\ncalls: 23\ntime: 0.000159s"];
    "pyparsing.Combine.__init__" [color = "#e5e5e5ff", label = "pyparsing.Combine.__init__\ncalls: 40\ntime: 0.064625s"];
    "pyparsing.Combine.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.Combine.setWhitespaceChars\ncalls: 10\ntime: 0.000069s"];
    "pyparsing.Combine.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.Combine.leaveWhitespace\ncalls: 10\ntime: 0.063946s"];
    "pyparsing.And.copy" [color = "#e3e5e5ff", label = "pyparsing.And.copy\ncalls: 216\ntime: 0.083297s"];
    "pyparsing.Regex.copy" [color = "#e4e5e5ff", label = "pyparsing.Regex.copy\ncalls: 113\ntime: 0.013477s"];
    "pyparsing._SingleCharLiteral.copy" [color = "#e4e5e5ff", label = "pyparsing._SingleCharLiteral.copy\ncalls: 96\ntime: 0.011407s"];
    "pyparsing.And.leaveWhitespace" [color = "#e4e5e5ff", label = "pyparsing.And.leaveWhitespace\ncalls: 51\ntime: 0.136786s"];
    "pyparsing.Regex.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.Regex.leaveWhitespace\ncalls: 33\ntime: 0.000144s"];
    "pyparsing._SingleCharLiteral.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.leaveWhitespace\ncalls: 28\ntime: 0.000122s"];
    "pyparsing.Combine.setName" [color = "#e5e5e5ff", label = "pyparsing.Combine.setName\ncalls: 10\ntime: 0.000076s"];
    "pyparsing.And.__or__" [color = "#e5e5e5ff", label = "pyparsing.And.__or__\ncalls: 5\ntime: 0.001156s"];
    "pyparsing.MatchFirst.copy" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.copy\ncalls: 12\ntime: 0.016676s"];
    "pyparsing.MatchFirst.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.leaveWhitespace\ncalls: 5\ntime: 0.056011s"];
    "pyparsing.Combine.copy" [color = "#e5e5e5ff", label = "pyparsing.Combine.copy\ncalls: 9\ntime: 0.001147s"];
    "pyparsing.Combine.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Combine.__eq__\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.srange" [color = "#e5e5e5ff", label = "pyparsing.srange\ncalls: 2\ntime: 0.025426s"];
    "pyparsing.And.parseString" [color = "#e5e5e5ff", label = "pyparsing.And.parseString\ncalls: 11\ntime: 0.068904s"];
    "pyparsing.resetCache" [color = "#e5e5e5ff", label = "pyparsing.resetCache\ncalls: 20\ntime: 0.000304s"];
    "pyparsing.And.streamline" [color = "#e4e5e5ff", label = "pyparsing.And.streamline\ncalls: 72\ntime: 0.070555s"];
    "pyparsing._SingleCharLiteral.streamline" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.streamline\ncalls: 12\ntime: 0.000065s"];
    "pyparsing.Optional.streamline" [color = "#e5e5e5ff", label = "pyparsing.Optional.streamline\ncalls: 10\ntime: 0.002573s"];
    "pyparsing.And.__str__" [color = "#e5e5e5ff", label = "pyparsing.And.__str__\ncalls: 34\ntime: 0.003705s"];
    "pyparsing._SingleCharLiteral.__str__" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.__str__\ncalls: 16\ntime: 0.000056s"];
    "pyparsing.Optional.__str__" [color = "#e5e5e5ff", label = "pyparsing.Optional.__str__\ncalls: 15\ntime: 0.000459s"];
    "pyparsing.Group.streamline" [color = "#e5e5e5ff", label = "pyparsing.Group.streamline\ncalls: 4\ntime: 0.005551s"];
    "pyparsing.OneOrMore.streamline" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.streamline\ncalls: 6\ntime: 0.005620s"];
    "pyparsing.MatchFirst.streamline" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.streamline\ncalls: 27\ntime: 0.017019s"];
    "pyparsing.Word.streamline" [color = "#e5e5e5ff", label = "pyparsing.Word.streamline\ncalls: 4\ntime: 0.000022s"];
    "pyparsing.Regex.streamline" [color = "#e5e5e5ff", label = "pyparsing.Regex.streamline\ncalls: 17\ntime: 0.000091s"];
    "pyparsing.MatchFirst.__str__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__str__\ncalls: 16\ntime: 0.001926s"];
    "pyparsing.CharsNotIn.streamline" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn.streamline\ncalls: 3\ntime: 0.000016s"];
    "pyparsing.Suppress.streamline" [color = "#e5e5e5ff", label = "pyparsing.Suppress.streamline\ncalls: 6\ntime: 0.000144s"];
    "pyparsing.Suppress.__str__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__str__\ncalls: 12\ntime: 0.000257s"];
    "pyparsing.Group.__str__" [color = "#e5e5e5ff", label = "pyparsing.Group.__str__\ncalls: 6\ntime: 0.000193s"];
    "pyparsing.OneOrMore.__str__" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.__str__\ncalls: 1\ntime: 0.000029s"];
    "pyparsing.And._parseNoCache" [color = "#e4e5e5ff", label = "pyparsing.And._parseNoCache\ncalls: 63\ntime: 0.098876s"];
    "pyparsing.And.preParse" [color = "#e5e5e5ff", label = "pyparsing.And.preParse\ncalls: 19\ntime: 0.000222s"];
    "pyparsing.And.parseImpl" [color = "#e4e5e5ff", label = "pyparsing.And.parseImpl\ncalls: 63\ntime: 0.092271s"];
    "pyparsing._SingleCharLiteral._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral._parseNoCache\ncalls: 47\ntime: 0.004459s"];
    "pyparsing._SingleCharLiteral.parseImpl" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.parseImpl\ncalls: 47\ntime: 0.000588s"];
    "pyparsing._SingleCharLiteral.postParse" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.postParse\ncalls: 12\ntime: 0.000044s"];
    "pyparsing.__new__" [color = "#e3e5e5ff", label = "pyparsing.__new__\ncalls: 263\ntime: 0.001966s"];
    "pyparsing.ParseResults.__init__" [color = "#e3e5e5ff", label = "pyparsing.ParseResults.__init__\ncalls: 263\ntime: 0.004025s"];
    "pyparsing.Optional._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.Optional._parseNoCache\ncalls: 20\ntime: 0.019014s"];
    "pyparsing.Optional.preParse" [color = "#e5e5e5ff", label = "pyparsing.Optional.preParse\ncalls: 11\ntime: 0.000127s"];
    "pyparsing.Optional.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.Optional.parseImpl\ncalls: 20\ntime: 0.016402s"];
    "pyparsing.ParseException.__init__" [color = "#e4e5e5ff", label = "pyparsing.ParseException.__init__\ncalls: 93\ntime: 0.000961s"];
    "pyparsing.Optional.postParse" [color = "#e5e5e5ff", label = "pyparsing.Optional.postParse\ncalls: 20\ntime: 0.000071s"];
    "pyparsing.ParseResults.__bool__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__bool__\ncalls: 58\ntime: 0.000204s"];
    "pyparsing.ParseResults.haskeys" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.haskeys\ncalls: 42\ntime: 0.000157s"];
    "pyparsing.Group._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.Group._parseNoCache\ncalls: 10\ntime: 0.027605s"];
    "pyparsing.Group.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.Group.parseImpl\ncalls: 10\ntime: 0.026091s"];
    "pyparsing.OneOrMore._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore._parseNoCache\ncalls: 2\ntime: 0.015357s"];
    "pyparsing.OneOrMore.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.parseImpl\ncalls: 2\ntime: 0.015116s"];
    "pyparsing.MatchFirst._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst._parseNoCache\ncalls: 24\ntime: 0.029062s"];
    "pyparsing.MatchFirst.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.parseImpl\ncalls: 24\ntime: 0.025990s"];
    "pyparsing.Group.preParse" [color = "#e5e5e5ff", label = "pyparsing.Group.preParse\ncalls: 8\ntime: 0.000092s"];
    "pyparsing.Word._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.Word._parseNoCache\ncalls: 16\ntime: 0.001830s"];
    "pyparsing.Word.preParse" [color = "#e5e5e5ff", label = "pyparsing.Word.preParse\ncalls: 16\ntime: 0.000181s"];
    "pyparsing.Word.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.Word.parseImpl\ncalls: 16\ntime: 0.000752s"];
    "pyparsing.Regex._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.Regex._parseNoCache\ncalls: 37\ntime: 0.011296s"];
    "pyparsing.Regex.preParse" [color = "#e5e5e5ff", label = "pyparsing.Regex.preParse\ncalls: 24\ntime: 0.000269s"];
    "pyparsing.Regex.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.Regex.parseImpl\ncalls: 37\ntime: 0.002483s"];
    "pyparsing.Regex.postParse" [color = "#e5e5e5ff", label = "pyparsing.Regex.postParse\ncalls: 29\ntime: 0.000104s"];
    "pyparsing.wrapper" [color = "#e5e5e5ff", label = "pyparsing.wrapper\ncalls: 42\ntime: 0.003161s"];
    "pyparsing.<lambda>" [color = "#e5e5e5ff", label = "pyparsing.<lambda>\ncalls: 20\ntime: 0.001982s"];
    "pyparsing.ParseResults.__getitem__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__getitem__\ncalls: 49\ntime: 0.000328s"];
    "pyparsing.MatchFirst.postParse" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.postParse\ncalls: 20\ntime: 0.000070s"];
    "pyparsing.Suppress._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.Suppress._parseNoCache\ncalls: 10\ntime: 0.002504s"];
    "pyparsing.Suppress.preParse" [color = "#e5e5e5ff", label = "pyparsing.Suppress.preParse\ncalls: 10\ntime: 0.000115s"];
    "pyparsing.Suppress.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.Suppress.parseImpl\ncalls: 10\ntime: 0.001453s"];
    "pyparsing.Suppress.postParse" [color = "#e5e5e5ff", label = "pyparsing.Suppress.postParse\ncalls: 4\ntime: 0.000015s"];
    "pyparsing.ParseResults.__iadd__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__iadd__\ncalls: 16\ntime: 0.000598s"];
    "pyparsing.And.postParse" [color = "#e5e5e5ff", label = "pyparsing.And.postParse\ncalls: 28\ntime: 0.000098s"];
    "pyparsing.Group.postParse" [color = "#e5e5e5ff", label = "pyparsing.Group.postParse\ncalls: 6\ntime: 0.000021s"];
    "pyparsing.CharsNotIn._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn._parseNoCache\ncalls: 4\ntime: 0.000403s"];
    "pyparsing.CharsNotIn.preParse" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn.preParse\ncalls: 4\ntime: 0.000028s"];
    "pyparsing.CharsNotIn.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.CharsNotIn.parseImpl\ncalls: 4\ntime: 0.000125s"];
    "pyparsing.OneOrMore.postParse" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.postParse\ncalls: 2\ntime: 0.000007s"];
    "pyparsing._ParseResultsWithOffset.__init__" [color = "#e5e5e5ff", label = "pyparsing._ParseResultsWithOffset.__init__\ncalls: 4\ntime: 0.000016s"];
    "pyparsing.ParseResults.__setitem__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__setitem__\ncalls: 4\ntime: 0.000131s"];
    "pyparsing._ParseResultsWithOffset.__getitem__" [color = "#e5e5e5ff", label = "pyparsing._ParseResultsWithOffset.__getitem__\ncalls: 16\ntime: 0.000056s"];
    "pyparsing._SingleCharLiteral.preParse" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.preParse\ncalls: 2\ntime: 0.000023s"];
    "pyparsing.ParseResults.__getattr__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__getattr__\ncalls: 2\ntime: 0.000084s"];
    "pyparsing.ParseResults.__iter__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__iter__\ncalls: 11\ntime: 0.000041s"];
    "pyparsing._escapeRegexRangeChars" [color = "#e5e5e5ff", label = "pyparsing._escapeRegexRangeChars\ncalls: 11\ntime: 0.000227s"];
    "pyparsing._WordRegex.setName" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.setName\ncalls: 4\ntime: 0.000031s"];
    "pyparsing.makeHTMLTags" [color = "#e5e5e5ff", label = "pyparsing.makeHTMLTags\ncalls: 1\ntime: 0.040781s"];
    "pyparsing._makeTags" [color = "#e5e5e5ff", label = "pyparsing._makeTags\ncalls: 1\ntime: 0.040735s"];
    "pyparsing.Combine.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.Combine.setParseAction\ncalls: 1\ntime: 0.000736s"];
    "pyparsing.Combine.__or__" [color = "#e5e5e5ff", label = "pyparsing.Combine.__or__\ncalls: 3\ntime: 0.000723s"];
    "pyparsing._WordRegex.__call__" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.__call__\ncalls: 1\ntime: 0.000217s"];
    "pyparsing._WordRegex._setResultsName" [color = "#e5e5e5ff", label = "pyparsing._WordRegex._setResultsName\ncalls: 1\ntime: 0.000197s"];
    "pyparsing._WordRegex.copy" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.copy\ncalls: 6\ntime: 0.000785s"];
    "pyparsing.Suppress.__add__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__add__\ncalls: 6\ntime: 0.001778s"];
    "pyparsing._WordRegex.__eq__" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.__eq__\ncalls: 5\ntime: 0.000034s"];
    "pyparsing._WordRegex.setParseAction" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.setParseAction\ncalls: 3\ntime: 0.002191s"];
    "pyparsing._WordRegex.__add__" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.__add__\ncalls: 2\ntime: 0.000575s"];
    "pyparsing.ZeroOrMore.__init__" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.__init__\ncalls: 28\ntime: 0.002493s"];
    "pyparsing.ZeroOrMore.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.setWhitespaceChars\ncalls: 7\ntime: 0.000048s"];
    "pyparsing.ZeroOrMore.stopOn" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.stopOn\ncalls: 7\ntime: 0.000042s"];
    "pyparsing.Dict.__init__" [color = "#e5e5e5ff", label = "pyparsing.Dict.__init__\ncalls: 4\ntime: 0.000326s"];
    "pyparsing.Dict.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.Dict.setWhitespaceChars\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Dict.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Dict.__eq__\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Optional.__call__" [color = "#e5e5e5ff", label = "pyparsing.Optional.__call__\ncalls: 1\ntime: 0.000170s"];
    "pyparsing.Optional.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.Optional.setParseAction\ncalls: 1\ntime: 0.000726s"];
    "pyparsing.Literal.__add__" [color = "#e5e5e5ff", label = "pyparsing.Literal.__add__\ncalls: 2\ntime: 0.000580s"];
    "pyparsing.Literal.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Literal.__eq__\ncalls: 5\ntime: 0.000034s"];
    "pyparsing.And.setName" [color = "#e5e5e5ff", label = "pyparsing.And.setName\ncalls: 9\ntime: 0.000070s"];
    "pyparsing.And.addParseAction" [color = "#e5e5e5ff", label = "pyparsing.And.addParseAction\ncalls: 2\ntime: 0.001369s"];
    "pyparsing.Combine.__call__" [color = "#e5e5e5ff", label = "pyparsing.Combine.__call__\ncalls: 2\ntime: 0.000309s"];
    "pyparsing.Combine._setResultsName" [color = "#e5e5e5ff", label = "pyparsing.Combine._setResultsName\ncalls: 1\ntime: 0.000151s"];
    "pyparsing.SkipTo.__init__" [color = "#e5e5e5ff", label = "pyparsing.SkipTo.__init__\ncalls: 3\ntime: 0.000265s"];
    "pyparsing.SkipTo.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.SkipTo.setWhitespaceChars\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.Combine.__str__" [color = "#e5e5e5ff", label = "pyparsing.Combine.__str__\ncalls: 10\ntime: 0.000118s"];
    "pyparsing.Regex.setName" [color = "#e5e5e5ff", label = "pyparsing.Regex.setName\ncalls: 15\ntime: 0.000111s"];
    "pyparsing.Literal.copy" [color = "#e5e5e5ff", label = "pyparsing.Literal.copy\ncalls: 13\ntime: 0.001577s"];
    "pyparsing.Literal.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.Literal.leaveWhitespace\ncalls: 4\ntime: 0.000019s"];
    "pyparsing._SingleCharLiteral.__invert__" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.__invert__\ncalls: 2\ntime: 0.000300s"];
    "pyparsing.NotAny.__init__" [color = "#e5e5e5ff", label = "pyparsing.NotAny.__init__\ncalls: 12\ntime: 0.000886s"];
    "pyparsing.NotAny.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.NotAny.setWhitespaceChars\ncalls: 4\ntime: 0.000027s"];
    "pyparsing.Word.__add__" [color = "#e5e5e5ff", label = "pyparsing.Word.__add__\ncalls: 1\ntime: 0.000304s"];
    "pyparsing.Word.__eq__" [color = "#e5e5e5ff", label = "pyparsing.Word.__eq__\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.NotAny.__eq__" [color = "#e5e5e5ff", label = "pyparsing.NotAny.__eq__\ncalls: 4\ntime: 0.000027s"];
    "pyparsing.LineEnd.__invert__" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.__invert__\ncalls: 2\ntime: 0.000254s"];
    "pyparsing.LineEnd.__str__" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.__str__\ncalls: 4\ntime: 0.000013s"];
    "pyparsing.OneOrMore.copy" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.copy\ncalls: 2\ntime: 0.000299s"];
    "pyparsing.OneOrMore.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.OneOrMore.leaveWhitespace\ncalls: 2\ntime: 0.006544s"];
    "pyparsing._WordRegex.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.leaveWhitespace\ncalls: 2\ntime: 0.000009s"];
    "pyparsing.Optional.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.Optional.leaveWhitespace\ncalls: 16\ntime: 0.082553s"];
    "pyparsing.Word.copy" [color = "#e5e5e5ff", label = "pyparsing.Word.copy\ncalls: 3\ntime: 0.000396s"];
    "pyparsing.NotAny.copy" [color = "#e5e5e5ff", label = "pyparsing.NotAny.copy\ncalls: 13\ntime: 0.001655s"];
    "pyparsing.Word.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.Word.leaveWhitespace\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.NotAny.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.NotAny.leaveWhitespace\ncalls: 4\ntime: 0.000671s"];
    "pyparsing.LineEnd.copy" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.copy\ncalls: 2\ntime: 0.000273s"];
    "pyparsing.LineEnd.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.leaveWhitespace\ncalls: 2\ntime: 0.000009s"];
    "pyparsing.Combine.streamline" [color = "#e5e5e5ff", label = "pyparsing.Combine.streamline\ncalls: 4\ntime: 0.002481s"];
    "pyparsing._WordRegex.streamline" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.streamline\ncalls: 2\ntime: 0.000011s"];
    "pyparsing.NotAny.streamline" [color = "#e5e5e5ff", label = "pyparsing.NotAny.streamline\ncalls: 8\ntime: 0.000189s"];
    "pyparsing.NotAny.__str__" [color = "#e5e5e5ff", label = "pyparsing.NotAny.__str__\ncalls: 9\ntime: 0.000125s"];
    "pyparsing.LineEnd.streamline" [color = "#e5e5e5ff", label = "pyparsing.LineEnd.streamline\ncalls: 2\ntime: 0.000011s"];
    "pyparsing._WordRegex.__str__" [color = "#e5e5e5ff", label = "pyparsing._WordRegex.__str__\ncalls: 6\ntime: 0.000074s"];
    "pyparsing.delimitedList" [color = "#e5e5e5ff", label = "pyparsing.delimitedList\ncalls: 2\ntime: 0.002331s"];
    "pyparsing.Optional.__add__" [color = "#e5e5e5ff", label = "pyparsing.Optional.__add__\ncalls: 4\ntime: 0.001286s"];
    "pyparsing.ZeroOrMore.__eq__" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.__eq__\ncalls: 6\ntime: 0.000040s"];
    "pyparsing.pyparsing_common" [color = "#e4e5e5ff", label = "pyparsing.pyparsing_common\ncalls: 1\ntime: 0.205461s"];
    "pyparsing.Regex.__call__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__call__\ncalls: 2\ntime: 0.000292s"];
    "pyparsing.Optional.suppress" [color = "#e5e5e5ff", label = "pyparsing.Optional.suppress\ncalls: 1\ntime: 0.000113s"];
    "pyparsing.MatchFirst.setName" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.setName\ncalls: 2\ntime: 0.000015s"];
    "pyparsing.MatchFirst.addParseAction" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.addParseAction\ncalls: 1\ntime: 0.000038s"];
    "pyparsing.Regex.__or__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__or__\ncalls: 1\ntime: 0.000241s"];
    "pyparsing.Regex.__radd__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__radd__\ncalls: 4\ntime: 0.001596s"];
    "pyparsing.And.__mul__" [color = "#e5e5e5ff", label = "pyparsing.And.__mul__\ncalls: 3\ntime: 0.005427s"];
    "pyparsing.And.makeOptionalList" [color = "#e5e5e5ff", label = "pyparsing.And.makeOptionalList\ncalls: 12\ntime: 0.014499s"];
    "pyparsing.And.addCondition" [color = "#e5e5e5ff", label = "pyparsing.And.addCondition\ncalls: 1\ntime: 0.000848s"];
    "pyparsing.conditionAsParseAction" [color = "#e5e5e5ff", label = "pyparsing.conditionAsParseAction\ncalls: 1\ntime: 0.000794s"];
    "sre_parse.Pattern.checkgroup" [color = "#e5e5e5ff", label = "sre_parse.Pattern.checkgroup\ncalls: 1\ntime: 0.000021s"];
    "sre_parse.Pattern.checklookbehindgroup" [color = "#e5e5e5ff", label = "sre_parse.Pattern.checklookbehindgroup\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.And.suppress" [color = "#e5e5e5ff", label = "pyparsing.And.suppress\ncalls: 1\ntime: 0.000115s"];
    "pyparsing.Combine.suppress" [color = "#e5e5e5ff", label = "pyparsing.Combine.suppress\ncalls: 1\ntime: 0.000113s"];
    "pyparsing.Suppress.__or__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__or__\ncalls: 1\ntime: 0.000239s"];
    "pyparsing.NotAny.__add__" [color = "#e5e5e5ff", label = "pyparsing.NotAny.__add__\ncalls: 1\ntime: 0.000309s"];
    "pyparsing.White.__init__" [color = "#e5e5e5ff", label = "pyparsing.White.__init__\ncalls: 3\ntime: 0.000333s"];
    "pyparsing.White.<genexpr>" [color = "#e5e5e5ff", label = "pyparsing.White.<genexpr>\ncalls: 3\ntime: 0.000014s"];
    "pyparsing.White.setWhitespaceChars" [color = "#e5e5e5ff", label = "pyparsing.White.setWhitespaceChars\ncalls: 1\ntime: 0.000007s"];
    "pyparsing.White.copy" [color = "#e5e5e5ff", label = "pyparsing.White.copy\ncalls: 1\ntime: 0.000237s"];
    "pyparsing.White.leaveWhitespace" [color = "#e5e5e5ff", label = "pyparsing.White.leaveWhitespace\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.White.streamline" [color = "#e5e5e5ff", label = "pyparsing.White.streamline\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.White.__str__" [color = "#e5e5e5ff", label = "pyparsing.White.__str__\ncalls: 1\ntime: 0.000004s"];
    "pyparsing._lazyclassproperty" [color = "#e5e5e5ff", label = "pyparsing._lazyclassproperty\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.unicode_set" [color = "#e5e5e5ff", label = "pyparsing.unicode_set\ncalls: 1\ntime: 0.000110s"];
    "pyparsing._lazyclassproperty.__init__" [color = "#e5e5e5ff", label = "pyparsing._lazyclassproperty.__init__\ncalls: 4\ntime: 0.000025s"];
    "pyparsing.pyparsing_unicode" [color = "#e5e5e5ff", label = "pyparsing.pyparsing_unicode\ncalls: 1\ntime: 0.000878s"];
    "pyparsing.Latin1" [color = "#e5e5e5ff", label = "pyparsing.Latin1\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.LatinA" [color = "#e5e5e5ff", label = "pyparsing.LatinA\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.LatinB" [color = "#e5e5e5ff", label = "pyparsing.LatinB\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Greek" [color = "#e5e5e5ff", label = "pyparsing.Greek\ncalls: 1\ntime: 0.000008s"];
    "pyparsing.Cyrillic" [color = "#e5e5e5ff", label = "pyparsing.Cyrillic\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Chinese" [color = "#e5e5e5ff", label = "pyparsing.Chinese\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Japanese" [color = "#e5e5e5ff", label = "pyparsing.Japanese\ncalls: 1\ntime: 0.000163s"];
    "pyparsing.Kanji" [color = "#e5e5e5ff", label = "pyparsing.Kanji\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Hiragana" [color = "#e5e5e5ff", label = "pyparsing.Hiragana\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.Katakana" [color = "#e5e5e5ff", label = "pyparsing.Katakana\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.Korean" [color = "#e5e5e5ff", label = "pyparsing.Korean\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.CJK" [color = "#e5e5e5ff", label = "pyparsing.CJK\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.Thai" [color = "#e5e5e5ff", label = "pyparsing.Thai\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Arabic" [color = "#e5e5e5ff", label = "pyparsing.Arabic\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Hebrew" [color = "#e5e5e5ff", label = "pyparsing.Hebrew\ncalls: 1\ntime: 0.000006s"];
    "pyparsing.Devanagari" [color = "#e5e5e5ff", label = "pyparsing.Devanagari\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.pyparsing_test" [color = "#e5e5e5ff", label = "pyparsing.pyparsing_test\ncalls: 1\ntime: 0.000239s"];
    "pyparsing.reset_pyparsing_context" [color = "#e5e5e5ff", label = "pyparsing.reset_pyparsing_context\ncalls: 1\ntime: 0.000010s"];
    "pyparsing.TestParseResultsAsserts" [color = "#e5e5e5ff", label = "pyparsing.TestParseResultsAsserts\ncalls: 1\ntime: 0.000112s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser\ncalls: 1\ntime: 0.000039s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__\ncalls: 1\ntime: 0.033035s"];
    "pyparsing.And.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.And.setParseAction\ncalls: 2\ntime: 0.001422s"];
    "pyparsing.MatchFirst.setParseAction" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.setParseAction\ncalls: 1\ntime: 0.000719s"];
    "pyparsing.StringEnd.__eq__" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.__eq__\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.colors.<module>" [color = "#e5e5e5ff", label = "matplotlib.colors.<module>\ncalls: 1\ntime: 0.020074s"];
    "matplotlib.docstring.<module>" [color = "#e5e5e5ff", label = "matplotlib.docstring.<module>\ncalls: 1\ntime: 0.001337s"];
    "matplotlib.docstring.Substitution" [color = "#e5e5e5ff", label = "matplotlib.docstring.Substitution\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.docstring.Appender" [color = "#e5e5e5ff", label = "matplotlib.docstring.Appender\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.docstring.Substitution.__init__" [color = "#e5e5e5ff", label = "matplotlib.docstring.Substitution.__init__\ncalls: 4\ntime: 0.000023s"];
    "matplotlib._color_data.<module>" [color = "#e5e5e5ff", label = "matplotlib._color_data.<module>\ncalls: 1\ntime: 0.003188s"];
    "matplotlib._color_data.<genexpr>" [color = "#e5e5e5ff", label = "matplotlib._color_data.<genexpr>\ncalls: 11\ntime: 0.000041s"];
    "matplotlib._color_data.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib._color_data.<dictcomp>\ncalls: 1\ntime: 0.001230s"];
    "matplotlib.colors._ColorMapping" [color = "#e5e5e5ff", label = "matplotlib.colors._ColorMapping\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.colors.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.colors.<dictcomp>\ncalls: 2\ntime: 0.003035s"];
    "matplotlib.colors._ColorMapping.__init__" [color = "#e5e5e5ff", label = "matplotlib.colors._ColorMapping.__init__\ncalls: 1\ntime: 0.000055s"];
    "matplotlib.colors.ColorConverter" [color = "#e5e5e5ff", label = "matplotlib.colors.ColorConverter\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.docstring.copy" [color = "#e4e5e5ff", label = "matplotlib.docstring.copy\ncalls: 91\ntime: 0.000460s"];
    "matplotlib.docstring.do_copy" [color = "#e4e5e5ff", label = "matplotlib.docstring.do_copy\ncalls: 91\ntime: 0.000540s"];
    "matplotlib.colors.Colormap" [color = "#e5e5e5ff", label = "matplotlib.colors.Colormap\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.colors.LinearSegmentedColormap" [color = "#e5e5e5ff", label = "matplotlib.colors.LinearSegmentedColormap\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.colors.ListedColormap" [color = "#e5e5e5ff", label = "matplotlib.colors.ListedColormap\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.colors.Normalize" [color = "#e5e5e5ff", label = "matplotlib.colors.Normalize\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.colors.TwoSlopeNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.TwoSlopeNorm\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.colors.DivergingNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.DivergingNorm\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.colors.LogNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.LogNorm\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.colors.SymLogNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.SymLogNorm\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.colors.PowerNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.PowerNorm\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.colors.BoundaryNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.BoundaryNorm\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.colors.NoNorm" [color = "#e5e5e5ff", label = "matplotlib.colors.NoNorm\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.colors.LightSource" [color = "#e5e5e5ff", label = "matplotlib.colors.LightSource\ncalls: 1\ntime: 0.000015s"];
    "cycler.<module>" [color = "#e5e5e5ff", label = "cycler.<module>\ncalls: 1\ntime: 0.000408s"];
    "six.MovedAttribute.__get__" [color = "#e5e5e5ff", label = "six.MovedAttribute.__get__\ncalls: 3\ntime: 0.000204s"];
    "six.MovedAttribute._resolve" [color = "#e5e5e5ff", label = "six.MovedAttribute._resolve\ncalls: 3\ntime: 0.000091s"];
    "cycler.Cycler" [color = "#e5e5e5ff", label = "cycler.Cycler\ncalls: 1\ntime: 0.000030s"];
    "logging.getLogger" [color = "#e5e5e5ff", label = "logging.getLogger\ncalls: 30\ntime: 0.005702s"];
    "logging.Manager.getLogger" [color = "#e5e5e5ff", label = "logging.Manager.getLogger\ncalls: 30\ntime: 0.005064s"];
    "logging.Logger.__init__" [color = "#e5e5e5ff", label = "logging.Logger.__init__\ncalls: 60\ntime: 0.001575s"];
    "logging.Manager._fixupParents" [color = "#e5e5e5ff", label = "logging.Manager._fixupParents\ncalls: 30\ntime: 0.000953s"];
    "logging.PlaceHolder.__init__" [color = "#e5e5e5ff", label = "logging.PlaceHolder.__init__\ncalls: 4\ntime: 0.000020s"];
    "matplotlib.rcsetup.ValidateInStrings" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.ValidateInStrings\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.rcsetup._listify_validator" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._listify_validator\ncalls: 12\ntime: 0.000143s"];
    "matplotlib.rcsetup._make_type_validator" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._make_type_validator\ncalls: 6\ntime: 0.000032s"];
    "matplotlib.rcsetup.ValidateInStrings.__init__" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.ValidateInStrings.__init__\ncalls: 26\ntime: 0.003940s"];
    "matplotlib.rcsetup.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.<dictcomp>\ncalls: 26\ntime: 0.003348s"];
    "matplotlib.rcsetup.func" [color = "#e4e5e5ff", label = "matplotlib.rcsetup.func\ncalls: 183\ntime: 0.000802s"];
    "matplotlib.rcsetup.ValidateInterval" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.ValidateInterval\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.rcsetup._make_nseq_validator" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._make_nseq_validator\ncalls: 10\ntime: 0.000060s"];
    "cycler.cycler" [color = "#e5e5e5ff", label = "cycler.cycler\ncalls: 16\ntime: 0.004005s"];
    "cycler._cycler" [color = "#e5e5e5ff", label = "cycler._cycler\ncalls: 16\ntime: 0.003619s"];
    "cycler._from_iter" [color = "#e5e5e5ff", label = "cycler._from_iter\ncalls: 16\ntime: 0.003253s"];
    "cycler.Cycler.__init__" [color = "#e5e5e5ff", label = "cycler.Cycler.__init__\ncalls: 16\ntime: 0.000732s"];
    "cycler._process_keys" [color = "#e5e5e5ff", label = "cycler._process_keys\ncalls: 16\ntime: 0.000262s"];
    "cycler.<genexpr>" [color = "#e3e5e5ff", label = "cycler.<genexpr>\ncalls: 318\ntime: 0.001213s"];
    "matplotlib._version.<module>" [color = "#e5e5e5ff", label = "matplotlib._version.<module>\ncalls: 1\ntime: 0.000012s"];
    "matplotlib._version.get_versions" [color = "#e5e5e5ff", label = "matplotlib._version.get_versions\ncalls: 1\ntime: 0.000091s"];
    "logging.Manager._fixupChildren" [color = "#e5e5e5ff", label = "logging.Manager._fixupChildren\ncalls: 1\ntime: 0.000016s"];
    "matplotlib._check_versions" [color = "#e5e5e5ff", label = "matplotlib._check_versions\ncalls: 1\ntime: 0.009050s"];
    "_ExecInfo" [color = "#e5e5e5ff", label = "_ExecInfo\ncalls: 1\ntime: 0.000027s"];
    "matplotlib.ExecutableNotFoundError" [color = "#e5e5e5ff", label = "matplotlib.ExecutableNotFoundError\ncalls: 1\ntime: 0.000006s"];
    "matplotlib._logged_cached" [color = "#e5e5e5ff", label = "matplotlib._logged_cached\ncalls: 10\ntime: 0.000421s"];
    "matplotlib.RcParams" [color = "#e5e5e5ff", label = "matplotlib.RcParams\ncalls: 1\ntime: 0.001073s"];
    "matplotlib.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.<dictcomp>\ncalls: 1\ntime: 0.001017s"];
    "sre_parse.SubPattern.__delitem__" [color = "#e5e5e5ff", label = "sre_parse.SubPattern.__delitem__\ncalls: 6\ntime: 0.000024s"];
    "matplotlib.rc_params" [color = "#e5e5e5ff", label = "matplotlib.rc_params\ncalls: 1\ntime: 0.104636s"];
    "matplotlib.matplotlib_fname" [color = "#e5e5e5ff", label = "matplotlib.matplotlib_fname\ncalls: 1\ntime: 0.003826s"];
    "matplotlib.gen_candidates" [color = "#e5e5e5ff", label = "matplotlib.gen_candidates\ncalls: 4\ntime: 0.003222s"];
    "genericpath.exists" [color = "#e5e5e5ff", label = "genericpath.exists\ncalls: 4\ntime: 0.000383s"];
    "matplotlib.wrapper" [color = "#e4e5e5ff", label = "matplotlib.wrapper\ncalls: 106\ntime: 0.006114s"];
    "matplotlib.get_configdir" [color = "#e5e5e5ff", label = "matplotlib.get_configdir\ncalls: 1\ntime: 0.001852s"];
    "matplotlib._get_xdg_config_dir" [color = "#e5e5e5ff", label = "matplotlib._get_xdg_config_dir\ncalls: 1\ntime: 0.001078s"];
    "pathlib.home" [color = "#e5e5e5ff", label = "pathlib.home\ncalls: 7\ntime: 0.002873s"];
    "pathlib.__new__" [color = "#e5e5e5ff", label = "pathlib.__new__\ncalls: 22\ntime: 0.003796s"];
    "pathlib._from_parts" [color = "#e5e5e5ff", label = "pathlib._from_parts\ncalls: 22\ntime: 0.002771s"];
    "pathlib._parse_args" [color = "#e5e5e5ff", label = "pathlib._parse_args\ncalls: 30\ntime: 0.002838s"];
    "pathlib._PosixFlavour.parse_parts" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.parse_parts\ncalls: 32\ntime: 0.002100s"];
    "pathlib.PosixPath._init" [color = "#e5e5e5ff", label = "pathlib.PosixPath._init\ncalls: 57\ntime: 0.000350s"];
    "pathlib._PosixFlavour.gethomedir" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.gethomedir\ncalls: 7\ntime: 0.000459s"];
    "os.decode" [color = "#e5e5e5ff", label = "os.decode\ncalls: 7\ntime: 0.000029s"];
    "pathlib._PosixFlavour.splitroot" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.splitroot\ncalls: 31\ntime: 0.000220s"];
    "pathlib.PosixPath.__truediv__" [color = "#e5e5e5ff", label = "pathlib.PosixPath.__truediv__\ncalls: 8\ntime: 0.001583s"];
    "pathlib.PosixPath._make_child" [color = "#e5e5e5ff", label = "pathlib.PosixPath._make_child\ncalls: 8\ntime: 0.001431s"];
    "pathlib._PosixFlavour.join_parsed_parts" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.join_parsed_parts\ncalls: 8\ntime: 0.000052s"];
    "pathlib._from_parsed_parts" [color = "#e5e5e5ff", label = "pathlib._from_parsed_parts\ncalls: 35\ntime: 0.001153s"];
    "pathlib.PosixPath.__str__" [color = "#e5e5e5ff", label = "pathlib.PosixPath.__str__\ncalls: 54\ntime: 0.001366s"];
    "pathlib._format_parsed_parts" [color = "#e5e5e5ff", label = "pathlib._format_parsed_parts\ncalls: 40\ntime: 0.000265s"];
    "matplotlib._get_config_or_cache_dir" [color = "#e5e5e5ff", label = "matplotlib._get_config_or_cache_dir\ncalls: 2\ntime: 0.001601s"];
    "pathlib.PosixPath.mkdir" [color = "#e5e5e5ff", label = "pathlib.PosixPath.mkdir\ncalls: 3\ntime: 0.000906s"];
    "pathlib.wrapped" [color = "#e5e5e5ff", label = "pathlib.wrapped\ncalls: 12\ntime: 0.000834s"];
    "pathlib.PosixPath.is_dir" [color = "#e5e5e5ff", label = "pathlib.PosixPath.is_dir\ncalls: 8\ntime: 0.000648s"];
    "pathlib.PosixPath.stat" [color = "#e5e5e5ff", label = "pathlib.PosixPath.stat\ncalls: 8\ntime: 0.000467s"];
    "logging.Logger.debug" [color = "#e5e5e5ff", label = "logging.Logger.debug\ncalls: 13\ntime: 0.000649s"];
    "logging.Logger.isEnabledFor" [color = "#e5e5e5ff", label = "logging.Logger.isEnabledFor\ncalls: 13\ntime: 0.000410s"];
    "logging.Logger.getEffectiveLevel" [color = "#e5e5e5ff", label = "logging.Logger.getEffectiveLevel\ncalls: 13\ntime: 0.000155s"];
    "matplotlib._get_data_path" [color = "#e5e5e5ff", label = "matplotlib._get_data_path\ncalls: 1\ntime: 0.000689s"];
    "pathlib.PosixPath.with_name" [color = "#e5e5e5ff", label = "pathlib.PosixPath.with_name\ncalls: 1\ntime: 0.000176s"];
    "pathlib.PosixPath.name" [color = "#e5e5e5ff", label = "pathlib.PosixPath.name\ncalls: 27\ntime: 0.000192s"];
    "genericpath.isdir" [color = "#e5e5e5ff", label = "genericpath.isdir\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.rc_params_from_file" [color = "#e4e5e5ff", label = "matplotlib.rc_params_from_file\ncalls: 27\ntime: 0.333106s"];
    "matplotlib._rc_params_in_file" [color = "#e4e5e5ff", label = "matplotlib._rc_params_in_file\ncalls: 27\ntime: 0.240314s"];
    "matplotlib._open_file_or_url" [color = "#e5e5e5ff", label = "matplotlib._open_file_or_url\ncalls: 54\ntime: 0.006271s"];
    "matplotlib.is_url" [color = "#e5e5e5ff", label = "matplotlib.is_url\ncalls: 1\ntime: 0.000005s"];
    "posixpath.expanduser" [color = "#e5e5e5ff", label = "posixpath.expanduser\ncalls: 31\ntime: 0.002131s"];
    "locale.getpreferredencoding" [color = "#e5e5e5ff", label = "locale.getpreferredencoding\ncalls: 27\ntime: 0.000962s"];
    "_bootlocale.getpreferredencoding" [color = "#e5e5e5ff", label = "_bootlocale.getpreferredencoding\ncalls: 28\ntime: 0.000272s"];
    "encodings.ascii.IncrementalDecoder.decode" [color = "#e5e5e5ff", label = "encodings.ascii.IncrementalDecoder.decode\ncalls: 62\ntime: 0.000483s"];
    "matplotlib.RcParams.__init__" [color = "#e4e5e5ff", label = "matplotlib.RcParams.__init__\ncalls: 30\ntime: 0.151485s"];
    "collections.abc.update" [color = "#e4e5e5ff", label = "collections.abc.update\ncalls: 31\ntime: 0.151350s"];
    "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning\ncalls: 10\ntime: 0.000653s"];
    "matplotlib.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.<listcomp>\ncalls: 2\ntime: 0.001409s"];
    "matplotlib.RcParams.__setitem__" [color = "#d9e3e5ff", label = "matplotlib.RcParams.__setitem__\ncalls: 1548\ntime: 0.307821s"];
    "collections.abc.RcParams.__contains__" [color = "#e5e5e5ff", label = "collections.abc.RcParams.__contains__\ncalls: 3\ntime: 0.000140s"];
    "matplotlib.RcParams.__getitem__" [color = "#e4e5e5ff", label = "matplotlib.RcParams.__getitem__\ncalls: 80\ntime: 0.238909s"];
    "matplotlib.rcsetup.validate_backend" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_backend\ncalls: 11\ntime: 0.000231s"];
    "matplotlib.rcsetup.validate_bool" [color = "#e3e5e5ff", label = "matplotlib.rcsetup.validate_bool\ncalls: 306\ntime: 0.002075s"];
    "matplotlib.rcsetup.validator" [color = "#dee4e5ff", label = "matplotlib.rcsetup.validator\ncalls: 924\ntime: 0.006666s"];
    "matplotlib.rcsetup.validate_webagg_address" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_webagg_address\ncalls: 3\ntime: 0.000036s"];
    "matplotlib.rcsetup.ValidateInStrings.__call__" [color = "#e4e5e5ff", label = "matplotlib.rcsetup.ValidateInStrings.__call__\ncalls: 158\ntime: 0.001082s"];
    "matplotlib.cbook.deprecation.warn_deprecated" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation.warn_deprecated\ncalls: 17\ntime: 0.014473s"];
    "matplotlib.cbook._warn_external" [color = "#e5e5e5ff", label = "matplotlib.cbook._warn_external\ncalls: 17\ntime: 0.012521s"];
    "matplotlib.rcsetup.validate_any" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_any\ncalls: 7\ntime: 0.000025s"];
    "matplotlib.rcsetup._validate_linestyle" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._validate_linestyle\ncalls: 46\ntime: 0.001168s"];
    "matplotlib.rcsetup.validate_color" [color = "#e1e5e5ff", label = "matplotlib.rcsetup.validate_color\ncalls: 453\ntime: 0.109624s"];
    "matplotlib.colors.is_color_like" [color = "#e2e5e5ff", label = "matplotlib.colors.is_color_like\ncalls: 451\ntime: 0.097661s"];
    "matplotlib.colors._is_nth_color" [color = "#dde4e5ff", label = "matplotlib.colors._is_nth_color\ncalls: 1170\ntime: 0.039841s"];
    "matplotlib.rcsetup.validate_color_or_auto" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_color_or_auto\ncalls: 15\ntime: 0.000135s"];
    "matplotlib.rcsetup.<listcomp>" [color = "#e3e5e5ff", label = "matplotlib.rcsetup.<listcomp>\ncalls: 181\ntime: 0.086477s"];
    "matplotlib.colors.to_rgba" [color = "#e0e5e5ff", label = "matplotlib.colors.to_rgba\ncalls: 719\ntime: 0.114455s"];
    "matplotlib.colors._to_rgba_no_colorcycle" [color = "#e2e5e5ff", label = "matplotlib.colors._to_rgba_no_colorcycle\ncalls: 371\ntime: 0.068233s"];
    "matplotlib.colors.<genexpr>" [color = "#d9e3e5ff", label = "matplotlib.colors.<genexpr>\ncalls: 1692\ntime: 0.007209s"];
    "matplotlib.rcsetup.validate_hist_bins" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_hist_bins\ncalls: 4\ntime: 0.000035s"];
    "matplotlib.rcsetup.validate_whiskers" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_whiskers\ncalls: 4\ntime: 0.000267s"];
    "matplotlib.rcsetup.f" [color = "#e4e5e5ff", label = "matplotlib.rcsetup.f\ncalls: 144\ntime: 0.100807s"];
    "matplotlib.rcsetup.validate_fontweight" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_fontweight\ncalls: 16\ntime: 0.000117s"];
    "matplotlib.rcsetup._validate_tex_preamble" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._validate_tex_preamble\ncalls: 8\ntime: 0.000055s"];
    "matplotlib.rcsetup.validate_hinting" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_hinting\ncalls: 4\ntime: 0.000025s"];
    "matplotlib.rcsetup.validate_font_properties" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_font_properties\ncalls: 24\ntime: 0.046421s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse\ncalls: 9\ntime: 0.046153s"];
    "pyparsing.ZeroOrMore.streamline" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.streamline\ncalls: 8\ntime: 0.003140s"];
    "pyparsing.ZeroOrMore.__str__" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.__str__\ncalls: 5\ntime: 0.000112s"];
    "pyparsing.StringEnd.streamline" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.streamline\ncalls: 1\ntime: 0.000005s"];
    "pyparsing.StringEnd.__str__" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.__str__\ncalls: 1\ntime: 0.000003s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser._family\ncalls: 9\ntime: 0.000842s"];
    "pyparsing.ZeroOrMore._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore._parseNoCache\ncalls: 18\ntime: 0.017897s"];
    "pyparsing.ZeroOrMore.preParse" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.preParse\ncalls: 18\ntime: 0.000203s"];
    "pyparsing.ZeroOrMore.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.parseImpl\ncalls: 36\ntime: 0.030075s"];
    "pyparsing.ZeroOrMore.postParse" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.postParse\ncalls: 18\ntime: 0.000065s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._families" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser._families\ncalls: 9\ntime: 0.000379s"];
    "matplotlib.fontconfig_pattern.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.<listcomp>\ncalls: 9\ntime: 0.000049s"];
    "pyparsing.StringEnd._parseNoCache" [color = "#e5e5e5ff", label = "pyparsing.StringEnd._parseNoCache\ncalls: 9\ntime: 0.001415s"];
    "pyparsing.StringEnd.preParse" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.preParse\ncalls: 9\ntime: 0.000100s"];
    "pyparsing.StringEnd.parseImpl" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.parseImpl\ncalls: 9\ntime: 0.000059s"];
    "pyparsing.StringEnd.postParse" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.postParse\ncalls: 9\ntime: 0.000031s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._name" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser._name\ncalls: 8\ntime: 0.000182s"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._property" [color = "#e5e5e5ff", label = "matplotlib.fontconfig_pattern.FontconfigPatternParser._property\ncalls: 4\ntime: 0.000279s"];
    "pyparsing.ParseResults.__len__" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.__len__\ncalls: 4\ntime: 0.000016s"];
    "matplotlib.rcsetup.validate_mathtext_default" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_mathtext_default\ncalls: 4\ntime: 0.001132s"];
    "matplotlib.rcsetup.validate_aspect" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_aspect\ncalls: 4\ntime: 0.000018s"];
    "matplotlib.rcsetup.validate_axisbelow" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_axisbelow\ncalls: 13\ntime: 0.000363s"];
    "matplotlib.rcsetup.validate_fontsize" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_fontsize\ncalls: 57\ntime: 0.000643s"];
    "matplotlib.rcsetup.validate_cycler" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_cycler\ncalls: 18\ntime: 0.112407s"];
    "cycler.Cycler.keys" [color = "#e4e5e5ff", label = "cycler.Cycler.keys\ncalls: 90\ntime: 0.000335s"];
    "cycler.Cycler.change_key" [color = "#e5e5e5ff", label = "cycler.Cycler.change_key\ncalls: 18\ntime: 0.000095s"];
    "cycler.Cycler.by_key" [color = "#e5e5e5ff", label = "cycler.Cycler.by_key\ncalls: 18\ntime: 0.004639s"];
    "cycler.Cycler.__iter__" [color = "#e5e5e5ff", label = "cycler.Cycler.__iter__\ncalls: 18\ntime: 0.000098s"];
    "matplotlib.rcsetup.validate_color_for_prop_cycle" [color = "#e3e5e5ff", label = "matplotlib.rcsetup.validate_color_for_prop_cycle\ncalls: 239\ntime: 0.074365s"];
    "matplotlib.rcsetup._validate_greaterequal0_lessequal1" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._validate_greaterequal0_lessequal1\ncalls: 32\ntime: 0.000795s"];
    "matplotlib.rcsetup.validate_fontsize_None" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_fontsize_None\ncalls: 3\ntime: 0.000014s"];
    "matplotlib.rcsetup.validate_color_or_inherit" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_color_or_inherit\ncalls: 8\ntime: 0.011718s"];
    "matplotlib.rcsetup._validate_greaterequal0_lessthan1" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._validate_greaterequal0_lessthan1\ncalls: 14\ntime: 0.000339s"];
    "matplotlib.rcsetup.validate_dpi" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_dpi\ncalls: 4\ntime: 0.000020s"];
    "matplotlib.rcsetup._update_savefig_format" [color = "#e5e5e5ff", label = "matplotlib.rcsetup._update_savefig_format\ncalls: 4\ntime: 0.000099s"];
    "matplotlib.rcsetup.validate_bbox" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_bbox\ncalls: 4\ntime: 0.000030s"];
    "matplotlib.rcsetup.validate_ps_distiller" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_ps_distiller\ncalls: 4\ntime: 0.000024s"];
    "matplotlib.rcsetup.validate_fonttype" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_fonttype\ncalls: 8\ntime: 0.000248s"];
    "matplotlib.rcsetup.validate_sketch" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.validate_sketch\ncalls: 4\ntime: 0.000029s"];
    "matplotlib.RcParams.__iter__" [color = "#e3e5e5ff", label = "matplotlib.RcParams.__iter__\ncalls: 304\ntime: 0.001268s"];
    "matplotlib.get_data_path" [color = "#e5e5e5ff", label = "matplotlib.get_data_path\ncalls: 1\ntime: 0.000864s"];
    "matplotlib.RcParams.copy" [color = "#e5e5e5ff", label = "matplotlib.RcParams.copy\ncalls: 1\ntime: 0.004853s"];
    "matplotlib.RcParams.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.RcParams.<dictcomp>\ncalls: 1\ntime: 0.004807s"];
    "matplotlib.rc_context" [color = "#e5e5e5ff", label = "matplotlib.rc_context\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.cbook.deprecation._rename_parameter" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._rename_parameter\ncalls: 20\ntime: 0.011500s"];
    "matplotlib.cbook.deprecation._delete_parameter" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._delete_parameter\ncalls: 24\ntime: 0.026516s"];
    "inspect.signature" [color = "#dfe5e5ff", label = "inspect.signature\ncalls: 654\ntime: 0.463747s"];
    "inspect.from_callable" [color = "#dfe5e5ff", label = "inspect.from_callable\ncalls: 654\ntime: 0.453048s"];
    "inspect._signature_from_callable" [color = "#dfe4e5ff", label = "inspect._signature_from_callable\ncalls: 710\ntime: 0.475836s"];
    "inspect.unwrap" [color = "#e0e5e5ff", label = "inspect.unwrap\ncalls: 710\ntime: 0.027330s"];
    "inspect._is_wrapper" [color = "#dfe5e5ff", label = "inspect._is_wrapper\ncalls: 782\ntime: 0.004954s"];
    "inspect.isfunction" [color = "#d9e3e5ff", label = "inspect.isfunction\ncalls: 1641\ntime: 0.005862s"];
    "inspect._signature_from_function" [color = "#e0e5e5ff", label = "inspect._signature_from_function\ncalls: 645\ntime: 0.301514s"];
    "inspect.<genexpr>" [color = "#d3e1e5ff", label = "inspect.<genexpr>\ncalls: 2513\ntime: 0.039135s"];
    "inspect.Signature.parameters" [color = "#e0e5e5ff", label = "inspect.Signature.parameters\ncalls: 764\ntime: 0.002579s"];
    "matplotlib.cbook.deprecation.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation.<listcomp>\ncalls: 28\ntime: 0.004580s"];
    "inspect.Parameter.replace" [color = "#e5e5e5ff", label = "inspect.Parameter.replace\ncalls: 20\ntime: 0.001680s"];
    "inspect.Signature.replace" [color = "#e4e5e5ff", label = "inspect.Signature.replace\ncalls: 112\ntime: 0.044230s"];
    "inspect.<lambda>" [color = "#e4e5e5ff", label = "inspect.<lambda>\ncalls: 81\ntime: 0.000345s"];
    "matplotlib.is_interactive" [color = "#e5e5e5ff", label = "matplotlib.is_interactive\ncalls: 1\ntime: 0.000033s"];
    "matplotlib.pyplot.<module>" [color = "#dde4e5ff", label = "matplotlib.pyplot.<module>\ncalls: 1\ntime: 2.815376s"];
    "matplotlib.colorbar.<module>" [color = "#e1e5e5ff", label = "matplotlib.colorbar.<module>\ncalls: 1\ntime: 1.378264s"];
    "matplotlib.artist.<module>" [color = "#e5e5e5ff", label = "matplotlib.artist.<module>\ncalls: 1\ntime: 0.136365s"];
    "matplotlib.path.<module>" [color = "#e5e5e5ff", label = "matplotlib.path.<module>\ncalls: 1\ntime: 0.003228s"];
    "matplotlib.path.Path" [color = "#e5e5e5ff", label = "matplotlib.path.Path\ncalls: 1\ntime: 0.000712s"];
    "matplotlib.cbook.deprecation._deprecated_property" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._deprecated_property\ncalls: 15\ntime: 0.000130s"];
    "matplotlib.transforms.<module>" [color = "#e5e5e5ff", label = "matplotlib.transforms.<module>\ncalls: 1\ntime: 0.006182s"];
    "matplotlib.transforms.TransformNode" [color = "#e5e5e5ff", label = "matplotlib.transforms.TransformNode\ncalls: 1\ntime: 0.000026s"];
    "matplotlib.transforms.BboxBase" [color = "#e5e5e5ff", label = "matplotlib.transforms.BboxBase\ncalls: 1\ntime: 0.000362s"];
    "matplotlib.transforms.Bbox" [color = "#e5e5e5ff", label = "matplotlib.transforms.Bbox\ncalls: 1\ntime: 0.000088s"];
    "matplotlib.transforms.TransformedBbox" [color = "#e5e5e5ff", label = "matplotlib.transforms.TransformedBbox\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.transforms.LockableBbox" [color = "#e5e5e5ff", label = "matplotlib.transforms.LockableBbox\ncalls: 1\ntime: 0.000021s"];
    "matplotlib.transforms.Transform" [color = "#e5e5e5ff", label = "matplotlib.transforms.Transform\ncalls: 1\ntime: 0.000045s"];
    "matplotlib.transforms.TransformWrapper" [color = "#e5e5e5ff", label = "matplotlib.transforms.TransformWrapper\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.transforms.__init_subclass__" [color = "#e5e5e5ff", label = "matplotlib.transforms.__init_subclass__\ncalls: 42\ntime: 0.008379s"];
    "matplotlib.transforms.<genexpr>" [color = "#e1e5e5ff", label = "matplotlib.transforms.<genexpr>\ncalls: 502\ntime: 0.001888s"];
    "matplotlib.transforms.AffineBase" [color = "#e5e5e5ff", label = "matplotlib.transforms.AffineBase\ncalls: 1\ntime: 0.000019s"];
    "matplotlib.transforms.Affine2DBase" [color = "#e5e5e5ff", label = "matplotlib.transforms.Affine2DBase\ncalls: 1\ntime: 0.000354s"];
    "matplotlib.transforms.Affine2D" [color = "#e5e5e5ff", label = "matplotlib.transforms.Affine2D\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.transforms.IdentityTransform" [color = "#e5e5e5ff", label = "matplotlib.transforms.IdentityTransform\ncalls: 1\ntime: 0.000178s"];
    "numpy.core.numeric.identity" [color = "#e5e5e5ff", label = "numpy.core.numeric.identity\ncalls: 1\ntime: 0.000115s"];
    "numpy.lib.twodim_base.eye" [color = "#e5e5e5ff", label = "numpy.lib.twodim_base.eye\ncalls: 1\ntime: 0.000035s"];
    "matplotlib.transforms._BlendedMixin" [color = "#e5e5e5ff", label = "matplotlib.transforms._BlendedMixin\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.transforms.BlendedGenericTransform" [color = "#e5e5e5ff", label = "matplotlib.transforms.BlendedGenericTransform\ncalls: 1\ntime: 0.000021s"];
    "matplotlib.transforms.BlendedAffine2D" [color = "#e5e5e5ff", label = "matplotlib.transforms.BlendedAffine2D\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.transforms.CompositeGenericTransform" [color = "#e5e5e5ff", label = "matplotlib.transforms.CompositeGenericTransform\ncalls: 1\ntime: 0.000028s"];
    "matplotlib.transforms.CompositeAffine2D" [color = "#e5e5e5ff", label = "matplotlib.transforms.CompositeAffine2D\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.transforms.BboxTransform" [color = "#e5e5e5ff", label = "matplotlib.transforms.BboxTransform\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.transforms.BboxTransformTo" [color = "#e5e5e5ff", label = "matplotlib.transforms.BboxTransformTo\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.transforms.BboxTransformToMaxOnly" [color = "#e5e5e5ff", label = "matplotlib.transforms.BboxTransformToMaxOnly\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.transforms.BboxTransformFrom" [color = "#e5e5e5ff", label = "matplotlib.transforms.BboxTransformFrom\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.transforms.ScaledTranslation" [color = "#e5e5e5ff", label = "matplotlib.transforms.ScaledTranslation\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.transforms.TransformedPath" [color = "#e5e5e5ff", label = "matplotlib.transforms.TransformedPath\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.transforms.TransformedPatchPath" [color = "#e5e5e5ff", label = "matplotlib.transforms.TransformedPatchPath\ncalls: 1\ntime: 0.000007s"];
    "_XYPair" [color = "#e5e5e5ff", label = "_XYPair\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.artist.Artist" [color = "#e5e5e5ff", label = "matplotlib.artist.Artist\ncalls: 1\ntime: 0.000353s"];
    "matplotlib.artist.ArtistInspector" [color = "#e5e5e5ff", label = "matplotlib.artist.ArtistInspector\ncalls: 1\ntime: 0.011912s"];
    "matplotlib.artist.kwdoc" [color = "#e2e5e5ff", label = "matplotlib.artist.kwdoc\ncalls: 11\ntime: 1.105153s"];
    "matplotlib.artist.ArtistInspector.__init__" [color = "#e4e5e5ff", label = "matplotlib.artist.ArtistInspector.__init__\ncalls: 12\ntime: 0.197515s"];
    "numpy.lib.function_base.iterable" [color = "#e5e5e5ff", label = "numpy.lib.function_base.iterable\ncalls: 67\ntime: 0.000455s"];
    "matplotlib.artist.ArtistInspector.get_aliases" [color = "#e4e5e5ff", label = "matplotlib.artist.ArtistInspector.get_aliases\ncalls: 12\ntime: 0.196841s"];
    "matplotlib.artist.ArtistInspector.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.artist.ArtistInspector.<listcomp>\ncalls: 12\ntime: 0.007038s"];
    "matplotlib.artist.ArtistInspector.is_alias" [color = "#d8e3e5ff", label = "matplotlib.artist.ArtistInspector.is_alias\ncalls: 1689\ntime: 0.229335s"];
    "inspect.getdoc" [color = "#d4e1e5ff", label = "inspect.getdoc\ncalls: 2326\ntime: 0.304979s"];
    "inspect._finddoc" [color = "#e4e5e5ff", label = "inspect._finddoc\ncalls: 91\ntime: 0.012078s"];
    "inspect.isclass" [color = "#e3e5e5ff", label = "inspect.isclass\ncalls: 293\ntime: 0.001032s"];
    "inspect.ismethod" [color = "#e4e5e5ff", label = "inspect.ismethod\ncalls: 91\ntime: 0.000328s"];
    "inspect._findclass" [color = "#e4e5e5ff", label = "inspect._findclass\ncalls: 91\ntime: 0.002589s"];
    "matplotlib.artist.ArtistInspector.pprint_setters" [color = "#e2e5e5ff", label = "matplotlib.artist.ArtistInspector.pprint_setters\ncalls: 11\ntime: 0.924073s"];
    "matplotlib.artist.ArtistInspector._get_setters_and_targets" [color = "#e4e5e5ff", label = "matplotlib.artist.ArtistInspector._get_setters_and_targets\ncalls: 12\ntime: 0.428210s"];
    "matplotlib.artist.ArtistInspector.get_valid_values" [color = "#e1e5e5ff", label = "matplotlib.artist.ArtistInspector.get_valid_values\ncalls: 412\ntime: 0.510512s"];
    "matplotlib.artist.ArtistInspector.aliased_name" [color = "#e2e5e5ff", label = "matplotlib.artist.ArtistInspector.aliased_name\ncalls: 412\ntime: 0.010913s"];
    "matplotlib.artist.<genexpr>" [color = "#e2e5e5ff", label = "matplotlib.artist.<genexpr>\ncalls: 471\ntime: 0.001820s"];
    "re.search" [color = "#e0e5e5ff", label = "re.search\ncalls: 507\ntime: 0.440689s"];
    "matplotlib.docstring.Substitution.update" [color = "#e5e5e5ff", label = "matplotlib.docstring.Substitution.update\ncalls: 45\ntime: 0.000195s"];
    "matplotlib.collections.<module>" [color = "#e4e5e5ff", label = "matplotlib.collections.<module>\ncalls: 1\ntime: 0.496041s"];
    "matplotlib.cm.<module>" [color = "#e5e5e5ff", label = "matplotlib.cm.<module>\ncalls: 1\ntime: 0.111456s"];
    "matplotlib._cm.<module>" [color = "#e5e5e5ff", label = "matplotlib._cm.<module>\ncalls: 1\ntime: 0.000835s"];
    "matplotlib._cm.cubehelix" [color = "#e5e5e5ff", label = "matplotlib._cm.cubehelix\ncalls: 1\ntime: 0.000012s"];
    "matplotlib._cm.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib._cm.<dictcomp>\ncalls: 1\ntime: 0.000062s"];
    "matplotlib._cm_listed.<module>" [color = "#e5e5e5ff", label = "matplotlib._cm_listed.<module>\ncalls: 1\ntime: 0.004635s"];
    "matplotlib._cm_listed.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib._cm_listed.<dictcomp>\ncalls: 1\ntime: 0.000429s"];
    "matplotlib.colors.ListedColormap.__init__" [color = "#e4e5e5ff", label = "matplotlib.colors.ListedColormap.__init__\ncalls: 76\ntime: 0.002445s"];
    "matplotlib.cm._gen_cmap_d" [color = "#e5e5e5ff", label = "matplotlib.cm._gen_cmap_d\ncalls: 1\ntime: 0.097732s"];
    "matplotlib.colors.from_list" [color = "#e5e5e5ff", label = "matplotlib.colors.from_list\ncalls: 32\ntime: 0.080752s"];
    "linspace" [color = "#e5e5e5ff", label = "linspace\ncalls: 30\ntime: 0.015142s"];
    "numpy.core.function_base._linspace_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.function_base._linspace_dispatcher\ncalls: 30\ntime: 0.000125s"];
    "numpy.core.function_base.linspace" [color = "#e5e5e5ff", label = "numpy.core.function_base.linspace\ncalls: 30\ntime: 0.013847s"];
    "numpy.core._asarray.asanyarray" [color = "#e5e5e5ff", label = "numpy.core._asarray.asanyarray\ncalls: 66\ntime: 0.000409s"];
    "result_type" [color = "#e5e5e5ff", label = "result_type\ncalls: 30\ntime: 0.000846s"];
    "numpy.core.multiarray.result_type" [color = "#e5e5e5ff", label = "numpy.core.multiarray.result_type\ncalls: 30\ntime: 0.000107s"];
    "ndim" [color = "#e5e5e5ff", label = "ndim\ncalls: 30\ntime: 0.001312s"];
    "numpy.core.fromnumeric._ndim_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric._ndim_dispatcher\ncalls: 30\ntime: 0.000102s"];
    "numpy.core.fromnumeric.ndim" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.ndim\ncalls: 30\ntime: 0.000143s"];
    "numpy.core.numeric.isscalar" [color = "#e5e5e5ff", label = "numpy.core.numeric.isscalar\ncalls: 30\ntime: 0.000114s"];
    "any" [color = "#e5e5e5ff", label = "any\ncalls: 30\ntime: 0.003659s"];
    "numpy.core.fromnumeric._any_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric._any_dispatcher\ncalls: 30\ntime: 0.000112s"];
    "numpy.core.fromnumeric.any" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.any\ncalls: 30\ntime: 0.002482s"];
    "numpy.core.fromnumeric._wrapreduction" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric._wrapreduction\ncalls: 31\ntime: 0.001915s"];
    "numpy.core.fromnumeric.<dictcomp>" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.<dictcomp>\ncalls: 31\ntime: 0.000221s"];
    "numpy.core._methods._any" [color = "#e5e5e5ff", label = "numpy.core._methods._any\ncalls: 59\ntime: 0.000601s"];
    "can_cast" [color = "#e3e5e5ff", label = "can_cast\ncalls: 252\ntime: 0.006086s"];
    "numpy.core.multiarray.can_cast" [color = "#e3e5e5ff", label = "numpy.core.multiarray.can_cast\ncalls: 252\ntime: 0.000907s"];
    "matplotlib.colors.LinearSegmentedColormap.__init__" [color = "#e3e5e5ff", label = "matplotlib.colors.LinearSegmentedColormap.__init__\ncalls: 252\ntime: 0.006109s"];
    "matplotlib.colors.ListedColormap.reversed" [color = "#e5e5e5ff", label = "matplotlib.colors.ListedColormap.reversed\ncalls: 19\ntime: 0.001653s"];
    "matplotlib.colors.LinearSegmentedColormap.reversed" [color = "#e5e5e5ff", label = "matplotlib.colors.LinearSegmentedColormap.reversed\ncalls: 63\ntime: 0.010911s"];
    "matplotlib.colors.LinearSegmentedColormap.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib.colors.LinearSegmentedColormap.<dictcomp>\ncalls: 63\ntime: 0.006547s"];
    "matplotlib.colors.<listcomp>" [color = "#e4e5e5ff", label = "matplotlib.colors.<listcomp>\ncalls: 188\ntime: 0.003138s"];
    "matplotlib.cm.ScalarMappable" [color = "#e5e5e5ff", label = "matplotlib.cm.ScalarMappable\ncalls: 1\ntime: 0.000022s"];
    "matplotlib.lines.<module>" [color = "#e5e5e5ff", label = "matplotlib.lines.<module>\ncalls: 1\ntime: 0.170817s"];
    "matplotlib.markers.<module>" [color = "#e5e5e5ff", label = "matplotlib.markers.<module>\ncalls: 1\ntime: 0.003507s"];
    "matplotlib.path.Path.__init__" [color = "#e5e5e5ff", label = "matplotlib.path.Path.__init__\ncalls: 19\ntime: 0.002857s"];
    "matplotlib.cbook._to_unmasked_float_array" [color = "#e5e5e5ff", label = "matplotlib.cbook._to_unmasked_float_array\ncalls: 19\ntime: 0.000613s"];
    "numpy.core._asarray.asarray" [color = "#e4e5e5ff", label = "numpy.core._asarray.asarray\ncalls: 104\ntime: 0.002021s"];
    "matplotlib.path.Path._update_values" [color = "#e5e5e5ff", label = "matplotlib.path.Path._update_values\ncalls: 19\ntime: 0.001106s"];
    "matplotlib.markers.MarkerStyle" [color = "#e5e5e5ff", label = "matplotlib.markers.MarkerStyle\ncalls: 1\ntime: 0.002928s"];
    "matplotlib.cbook._define_aliases" [color = "#e5e5e5ff", label = "matplotlib.cbook._define_aliases\ncalls: 8\ntime: 0.007655s"];
    "matplotlib.lines.Line2D" [color = "#e5e5e5ff", label = "matplotlib.lines.Line2D\ncalls: 1\ntime: 0.000729s"];
    "matplotlib.artist.allow_rasterization" [color = "#e5e5e5ff", label = "matplotlib.artist.allow_rasterization\ncalls: 27\ntime: 0.002150s"];
    "matplotlib.docstring.dedent_interpd" [color = "#e4e5e5ff", label = "matplotlib.docstring.dedent_interpd\ncalls: 83\ntime: 0.040042s"];
    "matplotlib.docstring.Substitution.__call__" [color = "#e4e5e5ff", label = "matplotlib.docstring.Substitution.__call__\ncalls: 87\ntime: 0.000876s"];
    "matplotlib.cbook.make_alias" [color = "#e4e5e5ff", label = "matplotlib.cbook.make_alias\ncalls: 72\ntime: 0.005291s"];
    "matplotlib.lines.VertexSelector" [color = "#e5e5e5ff", label = "matplotlib.lines.VertexSelector\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.collections.Collection" [color = "#e5e5e5ff", label = "matplotlib.collections.Collection\ncalls: 1\ntime: 0.000261s"];
    "matplotlib.transforms.IdentityTransform.__init__" [color = "#e5e5e5ff", label = "matplotlib.transforms.IdentityTransform.__init__\ncalls: 2\ntime: 0.000060s"];
    "matplotlib.collections._CollectionWithSizes" [color = "#e5e5e5ff", label = "matplotlib.collections._CollectionWithSizes\ncalls: 1\ntime: 0.000103s"];
    "matplotlib.collections.PathCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.PathCollection\ncalls: 1\ntime: 0.000170s"];
    "matplotlib.collections.PolyCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.PolyCollection\ncalls: 1\ntime: 0.000262s"];
    "matplotlib.collections.BrokenBarHCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.BrokenBarHCollection\ncalls: 1\ntime: 0.000177s"];
    "matplotlib.collections.RegularPolyCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.RegularPolyCollection\ncalls: 1\ntime: 0.000448s"];
    "matplotlib.collections.StarPolygonCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.StarPolygonCollection\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.collections.AsteriskPolygonCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.AsteriskPolygonCollection\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.collections.LineCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.LineCollection\ncalls: 1\ntime: 0.000019s"];
    "matplotlib.collections.EventCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.EventCollection\ncalls: 1\ntime: 0.000028s"];
    "matplotlib.collections.CircleCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.CircleCollection\ncalls: 1\ntime: 0.000156s"];
    "matplotlib.collections.EllipseCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.EllipseCollection\ncalls: 1\ntime: 0.000452s"];
    "matplotlib.collections.PatchCollection" [color = "#e5e5e5ff", label = "matplotlib.collections.PatchCollection\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.collections.TriMesh" [color = "#e5e5e5ff", label = "matplotlib.collections.TriMesh\ncalls: 1\ntime: 0.000104s"];
    "matplotlib.collections.QuadMesh" [color = "#e5e5e5ff", label = "matplotlib.collections.QuadMesh\ncalls: 1\ntime: 0.000107s"];
    "matplotlib.contour.<module>" [color = "#e3e5e5ff", label = "matplotlib.contour.<module>\ncalls: 1\ntime: 0.716736s"];
    "matplotlib.ticker.<module>" [color = "#e5e5e5ff", label = "matplotlib.ticker.<module>\ncalls: 1\ntime: 0.004388s"];
    "matplotlib.ticker._DummyAxis" [color = "#e5e5e5ff", label = "matplotlib.ticker._DummyAxis\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.ticker.TickHelper" [color = "#e5e5e5ff", label = "matplotlib.ticker.TickHelper\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.ticker.Formatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.Formatter\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.ticker.IndexFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.IndexFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.ticker.NullFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.NullFormatter\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.ticker.FixedFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.FixedFormatter\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.ticker.FuncFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.FuncFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.ticker.FormatStrFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.FormatStrFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.ticker.StrMethodFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.StrMethodFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.ticker.OldScalarFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.OldScalarFormatter\ncalls: 1\ntime: 0.000318s"];
    "matplotlib.ticker.ScalarFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.ScalarFormatter\ncalls: 1\ntime: 0.000311s"];
    "matplotlib.ticker.LogFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogFormatter\ncalls: 1\ntime: 0.000291s"];
    "matplotlib.ticker.LogFormatterExponent" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogFormatterExponent\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.ticker.LogFormatterMathtext" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogFormatterMathtext\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.ticker.LogFormatterSciNotation" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogFormatterSciNotation\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.ticker.LogitFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogitFormatter\ncalls: 1\ntime: 0.000021s"];
    "matplotlib.ticker.EngFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.EngFormatter\ncalls: 1\ntime: 0.000039s"];
    "matplotlib.ticker.PercentFormatter" [color = "#e5e5e5ff", label = "matplotlib.ticker.PercentFormatter\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.ticker.Locator" [color = "#e5e5e5ff", label = "matplotlib.ticker.Locator\ncalls: 1\ntime: 0.000311s"];
    "matplotlib.ticker.IndexLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.IndexLocator\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.ticker.FixedLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.FixedLocator\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.ticker.NullLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.NullLocator\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.ticker.LinearLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.LinearLocator\ncalls: 1\ntime: 0.000019s"];
    "matplotlib.ticker.MultipleLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.MultipleLocator\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.ticker._Edge_integer" [color = "#e5e5e5ff", label = "matplotlib.ticker._Edge_integer\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.ticker.MaxNLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.MaxNLocator\ncalls: 1\ntime: 0.000021s"];
    "matplotlib.ticker.LogLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogLocator\ncalls: 1\ntime: 0.000016s"];
    "matplotlib.ticker.SymmetricalLogLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.SymmetricalLogLocator\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.ticker.LogitLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.LogitLocator\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.ticker.AutoLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.AutoLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.ticker.AutoMinorLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.AutoMinorLocator\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.ticker.OldAutoLocator" [color = "#e5e5e5ff", label = "matplotlib.ticker.OldAutoLocator\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.font_manager.<module>" [color = "#e5e5e5ff", label = "matplotlib.font_manager.<module>\ncalls: 1\ntime: 0.042065s"];
    "matplotlib.afm.<module>" [color = "#e5e5e5ff", label = "matplotlib.afm.<module>\ncalls: 1\ntime: 0.016981s"];
    "matplotlib._mathtext_data.<module>" [color = "#e5e5e5ff", label = "matplotlib._mathtext_data.<module>\ncalls: 1\ntime: 0.006952s"];
    "matplotlib._mathtext_data.<dictcomp>" [color = "#e5e5e5ff", label = "matplotlib._mathtext_data.<dictcomp>\ncalls: 1\ntime: 0.001528s"];
    "CharMetrics" [color = "#e5e5e5ff", label = "CharMetrics\ncalls: 1\ntime: 0.000026s"];
    "CompositePart" [color = "#e5e5e5ff", label = "CompositePart\ncalls: 1\ntime: 0.000025s"];
    "matplotlib.afm.AFM" [color = "#e5e5e5ff", label = "matplotlib.afm.AFM\ncalls: 1\ntime: 0.000030s"];
    "matplotlib.font_manager.FontEntry" [color = "#e5e5e5ff", label = "matplotlib.font_manager.FontEntry\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.font_manager.FontProperties" [color = "#e5e5e5ff", label = "matplotlib.font_manager.FontProperties\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.font_manager._JSONEncoder" [color = "#e5e5e5ff", label = "matplotlib.font_manager._JSONEncoder\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.font_manager.JSONEncoder" [color = "#e5e5e5ff", label = "matplotlib.font_manager.JSONEncoder\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.font_manager.FontManager" [color = "#e5e5e5ff", label = "matplotlib.font_manager.FontManager\ncalls: 1\ntime: 0.000119s"];
    "matplotlib.get_cachedir" [color = "#e5e5e5ff", label = "matplotlib.get_cachedir\ncalls: 1\ntime: 0.001672s"];
    "matplotlib._get_xdg_cache_dir" [color = "#e5e5e5ff", label = "matplotlib._get_xdg_cache_dir\ncalls: 1\ntime: 0.000714s"];
    "matplotlib.font_manager.json_load" [color = "#e5e5e5ff", label = "matplotlib.font_manager.json_load\ncalls: 1\ntime: 0.014120s"];
    "json.load" [color = "#e5e5e5ff", label = "json.load\ncalls: 1\ntime: 0.013772s"];
    "matplotlib.font_manager._json_decode" [color = "#e4e5e5ff", label = "matplotlib.font_manager._json_decode\ncalls: 100\ntime: 0.011279s"];
    "posixpath.isabs" [color = "#e4e5e5ff", label = "posixpath.isabs\ncalls: 99\ntime: 0.002243s"];
    "matplotlib.text.<module>" [color = "#e3e5e5ff", label = "matplotlib.text.<module>\ncalls: 1\ntime: 0.639124s"];
    "matplotlib.patches.<module>" [color = "#e5e5e5ff", label = "matplotlib.patches.<module>\ncalls: 1\ntime: 0.171106s"];
    "matplotlib.bezier.<module>" [color = "#e5e5e5ff", label = "matplotlib.bezier.<module>\ncalls: 1\ntime: 0.005949s"];
    "matplotlib.bezier.NonIntersectingPathException" [color = "#e5e5e5ff", label = "matplotlib.bezier.NonIntersectingPathException\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.bezier.BezierSegment" [color = "#e5e5e5ff", label = "matplotlib.bezier.BezierSegment\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.patches.Patch" [color = "#e5e5e5ff", label = "matplotlib.patches.Patch\ncalls: 1\ntime: 0.000249s"];
    "matplotlib.patches.Shadow" [color = "#e5e5e5ff", label = "matplotlib.patches.Shadow\ncalls: 1\ntime: 0.000196s"];
    "matplotlib.patches.Rectangle" [color = "#e5e5e5ff", label = "matplotlib.patches.Rectangle\ncalls: 1\ntime: 0.000298s"];
    "matplotlib.patches.RegularPolygon" [color = "#e5e5e5ff", label = "matplotlib.patches.RegularPolygon\ncalls: 1\ntime: 0.000273s"];
    "matplotlib.patches.PathPatch" [color = "#e5e5e5ff", label = "matplotlib.patches.PathPatch\ncalls: 1\ntime: 0.000161s"];
    "matplotlib.patches.Polygon" [color = "#e5e5e5ff", label = "matplotlib.patches.Polygon\ncalls: 1\ntime: 0.000194s"];
    "matplotlib.patches.Wedge" [color = "#e5e5e5ff", label = "matplotlib.patches.Wedge\ncalls: 2\ntime: 0.000204s"];
    "matplotlib.patches.Arrow" [color = "#e5e5e5ff", label = "matplotlib.patches.Arrow\ncalls: 1\ntime: 0.000541s"];
    "matplotlib.patches.FancyArrow" [color = "#e5e5e5ff", label = "matplotlib.patches.FancyArrow\ncalls: 1\ntime: 0.000338s"];
    "matplotlib.patches.CirclePolygon" [color = "#e5e5e5ff", label = "matplotlib.patches.CirclePolygon\ncalls: 1\ntime: 0.000195s"];
    "matplotlib.patches.Ellipse" [color = "#e5e5e5ff", label = "matplotlib.patches.Ellipse\ncalls: 1\ntime: 0.000263s"];
    "matplotlib.patches.Circle" [color = "#e5e5e5ff", label = "matplotlib.patches.Circle\ncalls: 2\ntime: 0.000201s"];
    "matplotlib.patches.Arc" [color = "#e5e5e5ff", label = "matplotlib.patches.Arc\ncalls: 2\ntime: 0.000495s"];
    "matplotlib.patches._Style" [color = "#e5e5e5ff", label = "matplotlib.patches._Style\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.patches.BoxStyle" [color = "#e5e5e5ff", label = "matplotlib.patches.BoxStyle\ncalls: 1\ntime: 0.016193s"];
    "matplotlib.patches._Base" [color = "#e5e5e5ff", label = "matplotlib.patches._Base\ncalls: 3\ntime: 0.000087s"];
    "matplotlib.patches._register_style" [color = "#e5e5e5ff", label = "matplotlib.patches._register_style\ncalls: 56\ntime: 0.000315s"];
    "matplotlib.patches.Square" [color = "#e5e5e5ff", label = "matplotlib.patches.Square\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.patches.LArrow" [color = "#e5e5e5ff", label = "matplotlib.patches.LArrow\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.RArrow" [color = "#e5e5e5ff", label = "matplotlib.patches.RArrow\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.DArrow" [color = "#e5e5e5ff", label = "matplotlib.patches.DArrow\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.patches.Round" [color = "#e5e5e5ff", label = "matplotlib.patches.Round\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.Round4" [color = "#e5e5e5ff", label = "matplotlib.patches.Round4\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.Sawtooth" [color = "#e5e5e5ff", label = "matplotlib.patches.Sawtooth\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.patches.Roundtooth" [color = "#e5e5e5ff", label = "matplotlib.patches.Roundtooth\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches._pprint_styles" [color = "#e5e5e5ff", label = "matplotlib.patches._pprint_styles\ncalls: 6\ntime: 0.100530s"];
    "matplotlib.patches.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.patches.<listcomp>\ncalls: 18\ntime: 0.096092s"];
    "inspect._signature_is_functionlike" [color = "#e5e5e5ff", label = "inspect._signature_is_functionlike\ncalls: 56\ntime: 0.001284s"];
    "inspect._signature_is_builtin" [color = "#e5e5e5ff", label = "inspect._signature_is_builtin\ncalls: 56\ntime: 0.003155s"];
    "inspect.isbuiltin" [color = "#e5e5e5ff", label = "inspect.isbuiltin\ncalls: 56\ntime: 0.000201s"];
    "inspect.ismethoddescriptor" [color = "#e5e5e5ff", label = "inspect.ismethoddescriptor\ncalls: 56\ntime: 0.001128s"];
    "inspect._signature_get_user_defined_method" [color = "#e4e5e5ff", label = "inspect._signature_get_user_defined_method\ncalls: 168\ntime: 0.001197s"];
    "inspect._signature_bound_method" [color = "#e5e5e5ff", label = "inspect._signature_bound_method\ncalls: 56\ntime: 0.014475s"];
    "inspect.Signature.__str__" [color = "#e5e5e5ff", label = "inspect.Signature.__str__\ncalls: 56\ntime: 0.011738s"];
    "inspect.Parameter.__str__" [color = "#e4e5e5ff", label = "inspect.Parameter.__str__\ncalls: 128\ntime: 0.003594s"];
    "inspect.Signature.return_annotation" [color = "#e5e5e5ff", label = "inspect.Signature.return_annotation\ncalls: 56\ntime: 0.000185s"];
    "matplotlib.patches.<genexpr>" [color = "#e2e5e5ff", label = "matplotlib.patches.<genexpr>\ncalls: 476\ntime: 0.001763s"];
    "matplotlib.patches._simpleprint_styles" [color = "#e5e5e5ff", label = "matplotlib.patches._simpleprint_styles\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.patches.FancyBboxPatch" [color = "#e5e5e5ff", label = "matplotlib.patches.FancyBboxPatch\ncalls: 1\ntime: 0.000816s"];
    "matplotlib.patches.ConnectionStyle" [color = "#e5e5e5ff", label = "matplotlib.patches.ConnectionStyle\ncalls: 1\ntime: 0.010962s"];
    "matplotlib.patches.SimpleEvent" [color = "#e5e5e5ff", label = "matplotlib.patches.SimpleEvent\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.patches.Arc3" [color = "#e5e5e5ff", label = "matplotlib.patches.Arc3\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.Angle3" [color = "#e5e5e5ff", label = "matplotlib.patches.Angle3\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.Angle" [color = "#e5e5e5ff", label = "matplotlib.patches.Angle\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.Bar" [color = "#e5e5e5ff", label = "matplotlib.patches.Bar\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.ArrowStyle" [color = "#e5e5e5ff", label = "matplotlib.patches.ArrowStyle\ncalls: 1\ntime: 0.027807s"];
    "matplotlib.patches._Curve" [color = "#e5e5e5ff", label = "matplotlib.patches._Curve\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.patches.Curve" [color = "#e5e5e5ff", label = "matplotlib.patches.Curve\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveA" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveA\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveB" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveAB" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveAB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveFilledA" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveFilledA\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveFilledB" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveFilledB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.CurveFilledAB" [color = "#e5e5e5ff", label = "matplotlib.patches.CurveFilledAB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches._Bracket" [color = "#e5e5e5ff", label = "matplotlib.patches._Bracket\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.patches.BracketAB" [color = "#e5e5e5ff", label = "matplotlib.patches.BracketAB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.BracketA" [color = "#e5e5e5ff", label = "matplotlib.patches.BracketA\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.BracketB" [color = "#e5e5e5ff", label = "matplotlib.patches.BracketB\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.patches.BarAB" [color = "#e5e5e5ff", label = "matplotlib.patches.BarAB\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.patches.Simple" [color = "#e5e5e5ff", label = "matplotlib.patches.Simple\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.Fancy" [color = "#e5e5e5ff", label = "matplotlib.patches.Fancy\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.patches.FancyArrowPatch" [color = "#e5e5e5ff", label = "matplotlib.patches.FancyArrowPatch\ncalls: 1\ntime: 0.000769s"];
    "matplotlib.patches.ConnectionPatch" [color = "#e5e5e5ff", label = "matplotlib.patches.ConnectionPatch\ncalls: 1\ntime: 0.000619s"];
    "matplotlib.textpath.<module>" [color = "#e4e5e5ff", label = "matplotlib.textpath.<module>\ncalls: 1\ntime: 0.210264s"];
    "matplotlib._text_layout.<module>" [color = "#e5e5e5ff", label = "matplotlib._text_layout.<module>\ncalls: 1\ntime: 0.000057s"];
    "matplotlib.dviread.<module>" [color = "#e5e5e5ff", label = "matplotlib.dviread.<module>\ncalls: 1\ntime: 0.019725s"];
    "enum._generate_next_value_" [color = "#e5e5e5ff", label = "enum._generate_next_value_\ncalls: 5\ntime: 0.000033s"];
    "Page" [color = "#e5e5e5ff", label = "Page\ncalls: 1\ntime: 0.000029s"];
    "Text" [color = "#e5e5e5ff", label = "Text\ncalls: 1\ntime: 0.000028s"];
    "Box" [color = "#e5e5e5ff", label = "Box\ncalls: 1\ntime: 0.000027s"];
    "matplotlib.dviread.Dvi" [color = "#e5e5e5ff", label = "matplotlib.dviread.Dvi\ncalls: 1\ntime: 0.004463s"];
    "matplotlib.dviread._dispatch" [color = "#e5e5e5ff", label = "matplotlib.dviread._dispatch\ncalls: 24\ntime: 0.000151s"];
    "matplotlib.dviread.decorate" [color = "#e5e5e5ff", label = "matplotlib.dviread.decorate\ncalls: 24\ntime: 0.003397s"];
    "matplotlib.dviread.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.dviread.<listcomp>\ncalls: 24\ntime: 0.000140s"];
    "matplotlib.dviread.DviFont" [color = "#e5e5e5ff", label = "matplotlib.dviread.DviFont\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.dviread.Vf" [color = "#e5e5e5ff", label = "matplotlib.dviread.Vf\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.dviread.Tfm" [color = "#e5e5e5ff", label = "matplotlib.dviread.Tfm\ncalls: 1\ntime: 0.000007s"];
    "Font" [color = "#e5e5e5ff", label = "Font\ncalls: 1\ntime: 0.000029s"];
    "matplotlib.dviread.PsfontsMap" [color = "#e5e5e5ff", label = "matplotlib.dviread.PsfontsMap\ncalls: 1\ntime: 0.000111s"];
    "matplotlib.dviread.Encoding" [color = "#e5e5e5ff", label = "matplotlib.dviread.Encoding\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.<module>" [color = "#e4e5e5ff", label = "matplotlib.mathtext.<module>\ncalls: 1\ntime: 0.175895s"];
    "pyparsing.enablePackrat" [color = "#e5e5e5ff", label = "pyparsing.enablePackrat\ncalls: 1\ntime: 0.000092s"];
    "pyparsing._FifoCache.__init__" [color = "#e5e5e5ff", label = "pyparsing._FifoCache.__init__\ncalls: 1\ntime: 0.000026s"];
    "matplotlib.mathtext.MathtextBackend" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackend\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.mathtext.MathtextBackendAgg" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendAgg\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.mathtext.MathtextBackendBitmap" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendBitmap\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.MathtextBackendPs" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendPs\ncalls: 1\ntime: 0.003113s"];
    "_PSResult" [color = "#e5e5e5ff", label = "_PSResult\ncalls: 1\ntime: 0.000030s"];
    "matplotlib.mathtext.MathtextBackendPdf" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendPdf\ncalls: 1\ntime: 0.003151s"];
    "_PDFResult" [color = "#e5e5e5ff", label = "_PDFResult\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.mathtext.MathtextBackendSvg" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendSvg\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.MathtextBackendPath" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendPath\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.MathtextBackendCairo" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathtextBackendCairo\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.mathtext.Fonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Fonts\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.mathtext.TruetypeFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.TruetypeFonts\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.mathtext.BakomaFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.BakomaFonts\ncalls: 1\ntime: 0.000080s"];
    "matplotlib.mathtext.UnicodeFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.UnicodeFonts\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.mathtext.DejaVuFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.DejaVuFonts\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.mathtext.DejaVuSerifFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.DejaVuSerifFonts\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.mathtext.DejaVuSansFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.DejaVuSansFonts\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.mathtext.StixFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.StixFonts\ncalls: 1\ntime: 0.000132s"];
    "matplotlib.mathtext.StixSansFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.StixSansFonts\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.StandardPsFonts" [color = "#e5e5e5ff", label = "matplotlib.mathtext.StandardPsFonts\ncalls: 1\ntime: 0.000406s"];
    "matplotlib.cbook._get_data_path" [color = "#e5e5e5ff", label = "matplotlib.cbook._get_data_path\ncalls: 1\ntime: 0.000300s"];
    "matplotlib.mathtext.FontConstantsBase" [color = "#e5e5e5ff", label = "matplotlib.mathtext.FontConstantsBase\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.mathtext.ComputerModernFontConstants" [color = "#e5e5e5ff", label = "matplotlib.mathtext.ComputerModernFontConstants\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.mathtext.STIXFontConstants" [color = "#e5e5e5ff", label = "matplotlib.mathtext.STIXFontConstants\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.STIXSansFontConstants" [color = "#e5e5e5ff", label = "matplotlib.mathtext.STIXSansFontConstants\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.mathtext.DejaVuSerifFontConstants" [color = "#e5e5e5ff", label = "matplotlib.mathtext.DejaVuSerifFontConstants\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.DejaVuSansFontConstants" [color = "#e5e5e5ff", label = "matplotlib.mathtext.DejaVuSansFontConstants\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.MathTextWarning" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathTextWarning\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.Node" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Node\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.mathtext.Box" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Box\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.mathtext.Vbox" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Vbox\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Hbox" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Hbox\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Char" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Char\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.mathtext.Accent" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Accent\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.List" [color = "#e5e5e5ff", label = "matplotlib.mathtext.List\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.mathtext.Hlist" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Hlist\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.mathtext.Vlist" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Vlist\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.mathtext.Rule" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Rule\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.mathtext.Hrule" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Hrule\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Vrule" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Vrule\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Glue" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Glue\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.mathtext.GlueSpec" [color = "#e5e5e5ff", label = "matplotlib.mathtext.GlueSpec\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.mathtext.GlueSpec.__init__" [color = "#e5e5e5ff", label = "matplotlib.mathtext.GlueSpec.__init__\ncalls: 8\ntime: 0.000069s"];
    "matplotlib.mathtext.Fil" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Fil\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.Fill" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Fill\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.Filll" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Filll\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.NegFil" [color = "#e5e5e5ff", label = "matplotlib.mathtext.NegFil\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.NegFill" [color = "#e5e5e5ff", label = "matplotlib.mathtext.NegFill\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.NegFilll" [color = "#e5e5e5ff", label = "matplotlib.mathtext.NegFilll\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.SsGlue" [color = "#e5e5e5ff", label = "matplotlib.mathtext.SsGlue\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mathtext.HCentered" [color = "#e5e5e5ff", label = "matplotlib.mathtext.HCentered\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.VCentered" [color = "#e5e5e5ff", label = "matplotlib.mathtext.VCentered\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Kern" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Kern\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.mathtext.SubSuperCluster" [color = "#e5e5e5ff", label = "matplotlib.mathtext.SubSuperCluster\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.AutoHeightChar" [color = "#e5e5e5ff", label = "matplotlib.mathtext.AutoHeightChar\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.AutoWidthChar" [color = "#e5e5e5ff", label = "matplotlib.mathtext.AutoWidthChar\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.mathtext.Ship" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Ship\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.mathtext.Parser" [color = "#e5e5e5ff", label = "matplotlib.mathtext.Parser\ncalls: 1\ntime: 0.164544s"];
    "matplotlib.mathtext.State" [color = "#e5e5e5ff", label = "matplotlib.mathtext.State\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.mathtext.<lambda>" [color = "#e5e5e5ff", label = "matplotlib.mathtext.<lambda>\ncalls: 1\ntime: 0.163957s"];
    "matplotlib.mathtext.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.mathtext.<listcomp>\ncalls: 1\ntime: 0.163917s"];
    "matplotlib.mathtext.<genexpr>" [color = "#9998e5ff", label = "matplotlib.mathtext.<genexpr>\ncalls: 10762\ntime: 0.039171s"];
    "matplotlib.mathtext.MathTextParser" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathTextParser\ncalls: 1\ntime: 0.000127s"];
    "matplotlib.textpath.TextToPath" [color = "#e5e5e5ff", label = "matplotlib.textpath.TextToPath\ncalls: 1\ntime: 0.002217s"];
    "matplotlib.textpath.TextToPath.__init__" [color = "#e5e5e5ff", label = "matplotlib.textpath.TextToPath.__init__\ncalls: 1\ntime: 0.000131s"];
    "matplotlib.mathtext.MathTextParser.__init__" [color = "#e5e5e5ff", label = "matplotlib.mathtext.MathTextParser.__init__\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.textpath.TextPath" [color = "#e5e5e5ff", label = "matplotlib.textpath.TextPath\ncalls: 1\ntime: 0.000611s"];
    "matplotlib.text.Text" [color = "#e5e5e5ff", label = "matplotlib.text.Text\ncalls: 1\ntime: 0.000580s"];
    "matplotlib.cbook.maxdict.__init__" [color = "#e5e5e5ff", label = "matplotlib.cbook.maxdict.__init__\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.text.TextWithDash" [color = "#e5e5e5ff", label = "matplotlib.text.TextWithDash\ncalls: 1\ntime: 0.000034s"];
    "matplotlib.text.OffsetFrom" [color = "#e5e5e5ff", label = "matplotlib.text.OffsetFrom\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.text._AnnotationBase" [color = "#e5e5e5ff", label = "matplotlib.text._AnnotationBase\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.text.Annotation" [color = "#e5e5e5ff", label = "matplotlib.text.Annotation\ncalls: 1\ntime: 0.001746s"];
    "matplotlib.texmanager.<module>" [color = "#e5e5e5ff", label = "matplotlib.texmanager.<module>\ncalls: 1\ntime: 0.011486s"];
    "matplotlib.texmanager.TexManager" [color = "#e5e5e5ff", label = "matplotlib.texmanager.TexManager\ncalls: 1\ntime: 0.011108s"];
    "matplotlib.texmanager.<genexpr>" [color = "#e5e5e5ff", label = "matplotlib.texmanager.<genexpr>\ncalls: 5\ntime: 0.000019s"];
    "matplotlib.blocking_input.<module>" [color = "#e5e5e5ff", label = "matplotlib.blocking_input.<module>\ncalls: 1\ntime: 0.000580s"];
    "matplotlib.blocking_input.BlockingInput" [color = "#e5e5e5ff", label = "matplotlib.blocking_input.BlockingInput\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.blocking_input.BlockingMouseInput" [color = "#e5e5e5ff", label = "matplotlib.blocking_input.BlockingMouseInput\ncalls: 1\ntime: 0.000024s"];
    "matplotlib.blocking_input.BlockingContourLabeler" [color = "#e5e5e5ff", label = "matplotlib.blocking_input.BlockingContourLabeler\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.blocking_input.BlockingKeyMouseInput" [color = "#e5e5e5ff", label = "matplotlib.blocking_input.BlockingKeyMouseInput\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.contour.ClabelText" [color = "#e5e5e5ff", label = "matplotlib.contour.ClabelText\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.contour.ContourLabeler" [color = "#e5e5e5ff", label = "matplotlib.contour.ContourLabeler\ncalls: 1\ntime: 0.000029s"];
    "matplotlib.contour.ContourSet" [color = "#e5e5e5ff", label = "matplotlib.contour.ContourSet\ncalls: 1\ntime: 0.000029s"];
    "matplotlib.contour.QuadContourSet" [color = "#e5e5e5ff", label = "matplotlib.contour.QuadContourSet\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.gridspec.<module>" [color = "#e5e5e5ff", label = "matplotlib.gridspec.<module>\ncalls: 1\ntime: 0.010047s"];
    "matplotlib._pylab_helpers.<module>" [color = "#e5e5e5ff", label = "matplotlib._pylab_helpers.<module>\ncalls: 1\ntime: 0.000101s"];
    "matplotlib._pylab_helpers.Gcf" [color = "#e5e5e5ff", label = "matplotlib._pylab_helpers.Gcf\ncalls: 1\ntime: 0.000022s"];
    "matplotlib.tight_layout.<module>" [color = "#e5e5e5ff", label = "matplotlib.tight_layout.<module>\ncalls: 1\ntime: 0.000104s"];
    "matplotlib._layoutbox.<module>" [color = "#e5e5e5ff", label = "matplotlib._layoutbox.<module>\ncalls: 1\ntime: 0.000366s"];
    "matplotlib._layoutbox.LayoutBox" [color = "#e5e5e5ff", label = "matplotlib._layoutbox.LayoutBox\ncalls: 1\ntime: 0.000048s"];
    "matplotlib.gridspec.GridSpecBase" [color = "#e5e5e5ff", label = "matplotlib.gridspec.GridSpecBase\ncalls: 1\ntime: 0.000025s"];
    "matplotlib.gridspec.GridSpec" [color = "#e5e5e5ff", label = "matplotlib.gridspec.GridSpec\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.gridspec.GridSpecFromSubplotSpec" [color = "#e5e5e5ff", label = "matplotlib.gridspec.GridSpecFromSubplotSpec\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.gridspec.SubplotSpec" [color = "#e5e5e5ff", label = "matplotlib.gridspec.SubplotSpec\ncalls: 1\ntime: 0.000027s"];
    "matplotlib._constrained_layout.<module>" [color = "#e5e5e5ff", label = "matplotlib._constrained_layout.<module>\ncalls: 1\ntime: 0.000233s"];
    "matplotlib.colorbar._ColorbarAutoLocator" [color = "#e5e5e5ff", label = "matplotlib.colorbar._ColorbarAutoLocator\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.colorbar._ColorbarAutoMinorLocator" [color = "#e5e5e5ff", label = "matplotlib.colorbar._ColorbarAutoMinorLocator\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.colorbar._ColorbarLogLocator" [color = "#e5e5e5ff", label = "matplotlib.colorbar._ColorbarLogLocator\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.colorbar._ColorbarMappableDummy" [color = "#e5e5e5ff", label = "matplotlib.colorbar._ColorbarMappableDummy\ncalls: 1\ntime: 0.001421s"];
    "matplotlib.colorbar.ColorbarBase" [color = "#e5e5e5ff", label = "matplotlib.colorbar.ColorbarBase\ncalls: 1\ntime: 0.000052s"];
    "matplotlib.colorbar.Colorbar" [color = "#e5e5e5ff", label = "matplotlib.colorbar.Colorbar\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.colorbar.ColorbarPatch" [color = "#e5e5e5ff", label = "matplotlib.colorbar.ColorbarPatch\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.image.<module>" [color = "#e5e5e5ff", label = "matplotlib.image.<module>\ncalls: 1\ntime: 0.042511s"];
    "matplotlib.backend_bases.<module>" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.<module>\ncalls: 1\ntime: 0.032276s"];
    "matplotlib.backend_tools.<module>" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.<module>\ncalls: 1\ntime: 0.004989s"];
    "matplotlib.backend_tools.Cursors" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.Cursors\ncalls: 1\ntime: 0.000650s"];
    "matplotlib.backend_tools.ToolBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolBase\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.backend_tools.ToolToggleBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolToggleBase\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.backend_tools.SetCursorBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.SetCursorBase\ncalls: 1\ntime: 0.000016s"];
    "matplotlib.backend_tools.ToolCursorPosition" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolCursorPosition\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.backend_tools.RubberbandBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.RubberbandBase\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.backend_tools.ToolQuit" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolQuit\ncalls: 1\ntime: 0.000043s"];
    "matplotlib.backend_tools.ToolQuitAll" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolQuitAll\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ToolEnableAllNavigation" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolEnableAllNavigation\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ToolEnableNavigation" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolEnableNavigation\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.backend_tools._ToolGridBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools._ToolGridBase\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.backend_tools.ToolGrid" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolGrid\ncalls: 1\ntime: 0.000037s"];
    "matplotlib.backend_tools.ToolMinorGrid" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolMinorGrid\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ToolFullScreen" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolFullScreen\ncalls: 1\ntime: 0.000037s"];
    "matplotlib.backend_tools.AxisScaleBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.AxisScaleBase\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.backend_tools.ToolYScale" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolYScale\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ToolXScale" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolXScale\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ToolViewsPositions" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolViewsPositions\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.backend_tools.ViewsPositionsBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ViewsPositionsBase\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.backend_tools.ToolHome" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolHome\ncalls: 1\ntime: 0.000038s"];
    "matplotlib.backend_tools.ToolBack" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolBack\ncalls: 1\ntime: 0.000037s"];
    "matplotlib.backend_tools.ToolForward" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolForward\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.backend_tools.ConfigureSubplotsBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ConfigureSubplotsBase\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.backend_tools.SaveFigureBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.SaveFigureBase\ncalls: 1\ntime: 0.000035s"];
    "matplotlib.backend_tools.ZoomPanBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ZoomPanBase\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.backend_tools.ToolZoom" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolZoom\ncalls: 1\ntime: 0.000048s"];
    "matplotlib.backend_tools.ToolPan" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolPan\ncalls: 1\ntime: 0.000051s"];
    "matplotlib.backend_tools.ToolHelpBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolHelpBase\ncalls: 1\ntime: 0.000041s"];
    "matplotlib.backend_tools.ToolCopyToClipboardBase" [color = "#e5e5e5ff", label = "matplotlib.backend_tools.ToolCopyToClipboardBase\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.tight_bbox.<module>" [color = "#e5e5e5ff", label = "matplotlib.tight_bbox.<module>\ncalls: 1\ntime: 0.000037s"];
    "matplotlib.widgets.<module>" [color = "#e5e5e5ff", label = "matplotlib.widgets.<module>\ncalls: 1\ntime: 0.001932s"];
    "matplotlib.widgets.LockDraw" [color = "#e5e5e5ff", label = "matplotlib.widgets.LockDraw\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.widgets.Widget" [color = "#e5e5e5ff", label = "matplotlib.widgets.Widget\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.widgets.AxesWidget" [color = "#e5e5e5ff", label = "matplotlib.widgets.AxesWidget\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.widgets.Button" [color = "#e5e5e5ff", label = "matplotlib.widgets.Button\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.widgets.Slider" [color = "#e5e5e5ff", label = "matplotlib.widgets.Slider\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.widgets.CheckButtons" [color = "#e5e5e5ff", label = "matplotlib.widgets.CheckButtons\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.widgets.TextBox" [color = "#e5e5e5ff", label = "matplotlib.widgets.TextBox\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.widgets.RadioButtons" [color = "#e5e5e5ff", label = "matplotlib.widgets.RadioButtons\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.widgets.SubplotTool" [color = "#e5e5e5ff", label = "matplotlib.widgets.SubplotTool\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.widgets.Cursor" [color = "#e5e5e5ff", label = "matplotlib.widgets.Cursor\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.widgets.MultiCursor" [color = "#e5e5e5ff", label = "matplotlib.widgets.MultiCursor\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.widgets._SelectorWidget" [color = "#e5e5e5ff", label = "matplotlib.widgets._SelectorWidget\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.widgets.SpanSelector" [color = "#e5e5e5ff", label = "matplotlib.widgets.SpanSelector\ncalls: 1\ntime: 0.000279s"];
    "matplotlib.widgets.ToolHandles" [color = "#e5e5e5ff", label = "matplotlib.widgets.ToolHandles\ncalls: 1\ntime: 0.000016s"];
    "matplotlib.widgets.RectangleSelector" [color = "#e5e5e5ff", label = "matplotlib.widgets.RectangleSelector\ncalls: 1\ntime: 0.000024s"];
    "matplotlib.widgets.EllipseSelector" [color = "#e5e5e5ff", label = "matplotlib.widgets.EllipseSelector\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.widgets.LassoSelector" [color = "#e5e5e5ff", label = "matplotlib.widgets.LassoSelector\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.widgets.PolygonSelector" [color = "#e5e5e5ff", label = "matplotlib.widgets.PolygonSelector\ncalls: 1\ntime: 0.000019s"];
    "matplotlib.widgets.Lasso" [color = "#e5e5e5ff", label = "matplotlib.widgets.Lasso\ncalls: 1\ntime: 0.000008s"];
    "PIL.<module>" [color = "#e5e5e5ff", label = "PIL.<module>\ncalls: 1\ntime: 0.003630s"];
    "PIL._version.<module>" [color = "#e5e5e5ff", label = "PIL._version.<module>\ncalls: 1\ntime: 0.000005s"];
    "PIL._Deprecated_Version" [color = "#e5e5e5ff", label = "PIL._Deprecated_Version\ncalls: 1\ntime: 0.000016s"];
    "PIL.UnidentifiedImageError" [color = "#e5e5e5ff", label = "PIL.UnidentifiedImageError\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.RendererBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.RendererBase\ncalls: 1\ntime: 0.000327s"];
    "matplotlib.backend_bases.GraphicsContextBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.GraphicsContextBase\ncalls: 1\ntime: 0.000049s"];
    "matplotlib.backend_bases.TimerBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.TimerBase\ncalls: 1\ntime: 0.000082s"];
    "matplotlib.backend_bases.Event" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.Event\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.DrawEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.DrawEvent\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.ResizeEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.ResizeEvent\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.CloseEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.CloseEvent\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.backend_bases.LocationEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.LocationEvent\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.backend_bases.MouseButton" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.MouseButton\ncalls: 1\ntime: 0.000556s"];
    "matplotlib.backend_bases.MouseEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.MouseEvent\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.backend_bases.PickEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.PickEvent\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.KeyEvent" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.KeyEvent\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.FigureCanvasBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.FigureCanvasBase\ncalls: 1\ntime: 0.000727s"];
    "matplotlib.backend_bases.register_backend" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.register_backend\ncalls: 4\ntime: 0.000024s"];
    "matplotlib.cbook._classproperty.__init__" [color = "#e5e5e5ff", label = "matplotlib.cbook._classproperty.__init__\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.backend_bases.NonGuiException" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.NonGuiException\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.FigureManagerBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.FigureManagerBase\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.backend_bases.NavigationToolbar2" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.NavigationToolbar2\ncalls: 1\ntime: 0.000136s"];
    "matplotlib.backend_bases.ToolContainerBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.ToolContainerBase\ncalls: 1\ntime: 0.000016s"];
    "matplotlib.backend_bases.StatusbarBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.StatusbarBase\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.backend_bases._Backend" [color = "#e5e5e5ff", label = "matplotlib.backend_bases._Backend\ncalls: 1\ntime: 0.001341s"];
    "matplotlib.cbook.deprecation._make_keyword_only" [color = "#e5e5e5ff", label = "matplotlib.cbook.deprecation._make_keyword_only\ncalls: 16\ntime: 0.010121s"];
    "matplotlib.backend_bases.ShowBase" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.ShowBase\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.image._ImageBase" [color = "#e5e5e5ff", label = "matplotlib.image._ImageBase\ncalls: 1\ntime: 0.000146s"];
    "matplotlib.image.AxesImage" [color = "#e5e5e5ff", label = "matplotlib.image.AxesImage\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.image.NonUniformImage" [color = "#e5e5e5ff", label = "matplotlib.image.NonUniformImage\ncalls: 1\ntime: 0.000022s"];
    "matplotlib.image.PcolorImage" [color = "#e5e5e5ff", label = "matplotlib.image.PcolorImage\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.image.FigureImage" [color = "#e5e5e5ff", label = "matplotlib.image.FigureImage\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.image.BboxImage" [color = "#e5e5e5ff", label = "matplotlib.image.BboxImage\ncalls: 1\ntime: 0.003024s"];
    "matplotlib.style.<module>" [color = "#e4e5e5ff", label = "matplotlib.style.<module>\ncalls: 1\ntime: 0.256086s"];
    "matplotlib.style.core.<module>" [color = "#e4e5e5ff", label = "matplotlib.style.core.<module>\ncalls: 1\ntime: 0.252852s"];
    "matplotlib.style.core.load_base_library" [color = "#e4e5e5ff", label = "matplotlib.style.core.load_base_library\ncalls: 1\ntime: 0.247068s"];
    "matplotlib.style.core.read_style_directory" [color = "#e4e5e5ff", label = "matplotlib.style.core.read_style_directory\ncalls: 1\ntime: 0.247019s"];
    "pathlib.PosixPath.glob" [color = "#e5e5e5ff", label = "pathlib.PosixPath.glob\ncalls: 27\ntime: 0.010015s"];
    "pathlib._PosixFlavour.casefold" [color = "#e5e5e5ff", label = "pathlib._PosixFlavour.casefold\ncalls: 27\ntime: 0.000096s"];
    "pathlib._make_selector" [color = "#e5e5e5ff", label = "pathlib._make_selector\ncalls: 1\ntime: 0.005217s"];
    "pathlib._is_wildcard_pattern" [color = "#e5e5e5ff", label = "pathlib._is_wildcard_pattern\ncalls: 1\ntime: 0.000004s"];
    "pathlib._WildcardSelector.__init__" [color = "#e5e5e5ff", label = "pathlib._WildcardSelector.__init__\ncalls: 2\ntime: 0.005136s"];
    "fnmatch.translate" [color = "#e5e5e5ff", label = "fnmatch.translate\ncalls: 1\ntime: 0.000523s"];
    "pathlib._WildcardSelector.select_from" [color = "#e5e5e5ff", label = "pathlib._WildcardSelector.select_from\ncalls: 1\ntime: 0.000144s"];
    "pathlib._WildcardSelector._select_from" [color = "#e5e5e5ff", label = "pathlib._WildcardSelector._select_from\ncalls: 27\ntime: 0.003878s"];
    "pathlib.PosixPath._make_child_relpath" [color = "#e5e5e5ff", label = "pathlib.PosixPath._make_child_relpath\ncalls: 26\ntime: 0.001414s"];
    "pathlib._TerminatingSelector._select_from" [color = "#e5e5e5ff", label = "pathlib._TerminatingSelector._select_from\ncalls: 52\ntime: 0.000171s"];
    "pathlib.PosixPath.__fspath__" [color = "#e5e5e5ff", label = "pathlib.PosixPath.__fspath__\ncalls: 26\ntime: 0.001291s"];
    "matplotlib.rcsetup.cycler" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.cycler\ncalls: 15\ntime: 0.049734s"];
    "matplotlib.rcsetup.<genexpr>" [color = "#e5e5e5ff", label = "matplotlib.rcsetup.<genexpr>\ncalls: 30\ntime: 0.003942s"];
    "pathlib.PosixPath.stem" [color = "#e5e5e5ff", label = "pathlib.PosixPath.stem\ncalls: 26\ntime: 0.000789s"];
    "pyparsing._FifoCache.clear" [color = "#e5e5e5ff", label = "pyparsing._FifoCache.clear\ncalls: 8\ntime: 0.000047s"];
    "pyparsing.And._parseCache" [color = "#e5e5e5ff", label = "pyparsing.And._parseCache\ncalls: 24\ntime: 0.045507s"];
    "pyparsing._FifoCache.get" [color = "#e4e5e5ff", label = "pyparsing._FifoCache.get\ncalls: 72\ntime: 0.001440s"];
    "pyparsing.And.__hash__" [color = "#e5e5e5ff", label = "pyparsing.And.__hash__\ncalls: 48\ntime: 0.000166s"];
    "pyparsing.Optional._parseCache" [color = "#e5e5e5ff", label = "pyparsing.Optional._parseCache\ncalls: 8\ntime: 0.012084s"];
    "pyparsing.Optional.__hash__" [color = "#e5e5e5ff", label = "pyparsing.Optional.__hash__\ncalls: 16\ntime: 0.000056s"];
    "pyparsing.Regex._parseCache" [color = "#e5e5e5ff", label = "pyparsing.Regex._parseCache\ncalls: 8\ntime: 0.004364s"];
    "pyparsing.Regex.__hash__" [color = "#e5e5e5ff", label = "pyparsing.Regex.__hash__\ncalls: 16\ntime: 0.000056s"];
    "pyparsing.ParseResults.copy" [color = "#e5e5e5ff", label = "pyparsing.ParseResults.copy\ncalls: 42\ntime: 0.002702s"];
    "pyparsing._FifoCache.set" [color = "#e4e5e5ff", label = "pyparsing._FifoCache.set\ncalls: 72\ntime: 0.001548s"];
    "pyparsing.ZeroOrMore._parseCache" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore._parseCache\ncalls: 8\ntime: 0.012341s"];
    "pyparsing.ZeroOrMore.__hash__" [color = "#e5e5e5ff", label = "pyparsing.ZeroOrMore.__hash__\ncalls: 16\ntime: 0.000055s"];
    "pyparsing._SingleCharLiteral._parseCache" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral._parseCache\ncalls: 16\ntime: 0.003587s"];
    "pyparsing._SingleCharLiteral.__hash__" [color = "#e5e5e5ff", label = "pyparsing._SingleCharLiteral.__hash__\ncalls: 32\ntime: 0.000110s"];
    "pyparsing.StringEnd._parseCache" [color = "#e5e5e5ff", label = "pyparsing.StringEnd._parseCache\ncalls: 4\ntime: 0.001349s"];
    "pyparsing.StringEnd.__hash__" [color = "#e5e5e5ff", label = "pyparsing.StringEnd.__hash__\ncalls: 8\ntime: 0.000028s"];
    "pyparsing.MatchFirst._parseCache" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst._parseCache\ncalls: 2\ntime: 0.004462s"];
    "pyparsing.MatchFirst.__hash__" [color = "#e5e5e5ff", label = "pyparsing.MatchFirst.__hash__\ncalls: 4\ntime: 0.000014s"];
    "pyparsing.Suppress._parseCache" [color = "#e5e5e5ff", label = "pyparsing.Suppress._parseCache\ncalls: 2\ntime: 0.000883s"];
    "pyparsing.Suppress.__hash__" [color = "#e5e5e5ff", label = "pyparsing.Suppress.__hash__\ncalls: 4\ntime: 0.000014s"];
    "re.filter" [color = "#e5e5e5ff", label = "re.filter\ncalls: 1\ntime: 0.000066s"];
    "sre_parse.expand_template" [color = "#e5e5e5ff", label = "sre_parse.expand_template\ncalls: 1\ntime: 0.000020s"];
    "matplotlib.style.core.reload_library" [color = "#e5e5e5ff", label = "matplotlib.style.core.reload_library\ncalls: 1\ntime: 0.000180s"];
    "matplotlib.style.core.update_user_library" [color = "#e5e5e5ff", label = "matplotlib.style.core.update_user_library\ncalls: 1\ntime: 0.000126s"];
    "matplotlib.style.core.iter_user_libraries" [color = "#e5e5e5ff", label = "matplotlib.style.core.iter_user_libraries\ncalls: 1\ntime: 0.000081s"];
    "matplotlib.figure.<module>" [color = "#e3e5e5ff", label = "matplotlib.figure.<module>\ncalls: 1\ntime: 0.845684s"];
    "matplotlib.backends.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.<module>\ncalls: 1\ntime: 0.000275s"];
    "matplotlib.projections.<module>" [color = "#e3e5e5ff", label = "matplotlib.projections.<module>\ncalls: 1\ntime: 0.764126s"];
    "matplotlib.axes.<module>" [color = "#e3e5e5ff", label = "matplotlib.axes.<module>\ncalls: 1\ntime: 0.710074s"];
    "matplotlib.axes._subplots.<module>" [color = "#e3e5e5ff", label = "matplotlib.axes._subplots.<module>\ncalls: 1\ntime: 0.706718s"];
    "uuid.<module>" [color = "#e5e5e5ff", label = "uuid.<module>\ncalls: 1\ntime: 0.021677s"];
    "uuid.UUID" [color = "#e5e5e5ff", label = "uuid.UUID\ncalls: 1\ntime: 0.000042s"];
    "ctypes.util.<module>" [color = "#e5e5e5ff", label = "ctypes.util.<module>\ncalls: 1\ntime: 0.000029s"];
    "ctypes.util.find_library" [color = "#e5e5e5ff", label = "ctypes.util.find_library\ncalls: 1\ntime: 0.017155s"];
    "ctypes.util._findSoname_ldconfig" [color = "#e5e5e5ff", label = "ctypes.util._findSoname_ldconfig\ncalls: 1\ntime: 0.016991s"];
    "os.fsencode" [color = "#e5e5e5ff", label = "os.fsencode\ncalls: 6\ntime: 0.000041s"];
    "subprocess.Popen.__init__" [color = "#e5e5e5ff", label = "subprocess.Popen.__init__\ncalls: 1\ntime: 0.007016s"];
    "subprocess._cleanup" [color = "#e5e5e5ff", label = "subprocess._cleanup\ncalls: 1\ntime: 0.000005s"];
    "subprocess.Popen._get_handles" [color = "#e5e5e5ff", label = "subprocess.Popen._get_handles\ncalls: 1\ntime: 0.000117s"];
    "subprocess.Popen._get_devnull" [color = "#e5e5e5ff", label = "subprocess.Popen._get_devnull\ncalls: 2\ntime: 0.000025s"];
    "subprocess.Popen._execute_child" [color = "#e5e5e5ff", label = "subprocess.Popen._execute_child\ncalls: 1\ntime: 0.006595s"];
    "subprocess.Popen.__enter__" [color = "#e5e5e5ff", label = "subprocess.Popen.__enter__\ncalls: 1\ntime: 0.000007s"];
    "os.fsdecode" [color = "#e5e5e5ff", label = "os.fsdecode\ncalls: 1\ntime: 0.000011s"];
    "subprocess.Popen.__exit__" [color = "#e5e5e5ff", label = "subprocess.Popen.__exit__\ncalls: 1\ntime: 0.000259s"];
    "subprocess.Popen.wait" [color = "#e5e5e5ff", label = "subprocess.Popen.wait\ncalls: 1\ntime: 0.000171s"];
    "subprocess.Popen._try_wait" [color = "#e5e5e5ff", label = "subprocess.Popen._try_wait\ncalls: 1\ntime: 0.000032s"];
    "subprocess.Popen._handle_exitstatus" [color = "#e5e5e5ff", label = "subprocess.Popen._handle_exitstatus\ncalls: 1\ntime: 0.000013s"];
    "subprocess.Popen.__del__" [color = "#e5e5e5ff", label = "subprocess.Popen.__del__\ncalls: 1\ntime: 0.000064s"];
    "subprocess.Popen._internal_poll" [color = "#e5e5e5ff", label = "subprocess.Popen._internal_poll\ncalls: 1\ntime: 0.000008s"];
    "ctypes.CDLL.__init__" [color = "#e5e5e5ff", label = "ctypes.CDLL.__init__\ncalls: 1\ntime: 0.000437s"];
    "ctypes.CDLL.__getattr__" [color = "#e5e5e5ff", label = "ctypes.CDLL.__getattr__\ncalls: 1\ntime: 0.000084s"];
    "ctypes.CDLL.__getitem__" [color = "#e5e5e5ff", label = "ctypes.CDLL.__getitem__\ncalls: 1\ntime: 0.000023s"];
    "uuid.UUID.__init__" [color = "#e5e5e5ff", label = "uuid.UUID.__init__\ncalls: 4\ntime: 0.000174s"];
    "matplotlib.axes._axes.<module>" [color = "#e4e5e5ff", label = "matplotlib.axes._axes.<module>\ncalls: 1\ntime: 0.425709s"];
    "matplotlib.category.<module>" [color = "#e5e5e5ff", label = "matplotlib.category.<module>\ncalls: 1\ntime: 0.004698s"];
    "matplotlib.units.<module>" [color = "#e5e5e5ff", label = "matplotlib.units.<module>\ncalls: 1\ntime: 0.000634s"];
    "matplotlib.units.ConversionError" [color = "#e5e5e5ff", label = "matplotlib.units.ConversionError\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.units.AxisInfo" [color = "#e5e5e5ff", label = "matplotlib.units.AxisInfo\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.units.ConversionInterface" [color = "#e5e5e5ff", label = "matplotlib.units.ConversionInterface\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.units.DecimalConverter" [color = "#e5e5e5ff", label = "matplotlib.units.DecimalConverter\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.units.Registry" [color = "#e5e5e5ff", label = "matplotlib.units.Registry\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.category.StrCategoryConverter" [color = "#e5e5e5ff", label = "matplotlib.category.StrCategoryConverter\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.category.StrCategoryLocator" [color = "#e5e5e5ff", label = "matplotlib.category.StrCategoryLocator\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.category.StrCategoryFormatter" [color = "#e5e5e5ff", label = "matplotlib.category.StrCategoryFormatter\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.category.UnitData" [color = "#e5e5e5ff", label = "matplotlib.category.UnitData\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.dates.<module>" [color = "#e5e5e5ff", label = "matplotlib.dates.<module>\ncalls: 1\ntime: 0.017214s"];
    "dateutil.rrule.<module>" [color = "#e5e5e5ff", label = "dateutil.rrule.<module>\ncalls: 1\ntime: 0.002699s"];
    "dateutil.rrule.weekday" [color = "#e5e5e5ff", label = "dateutil.rrule.weekday\ncalls: 1\ntime: 0.000009s"];
    "dateutil.rrule.<genexpr>" [color = "#e5e5e5ff", label = "dateutil.rrule.<genexpr>\ncalls: 8\ntime: 0.000328s"];
    "dateutil.rrule.weekday.__init__" [color = "#e5e5e5ff", label = "dateutil.rrule.weekday.__init__\ncalls: 7\ntime: 0.000173s"];
    "dateutil.rrule.rrulebase" [color = "#e5e5e5ff", label = "dateutil.rrule.rrulebase\ncalls: 1\ntime: 0.000018s"];
    "dateutil.rrule.rrule" [color = "#e5e5e5ff", label = "dateutil.rrule.rrule\ncalls: 1\ntime: 0.000015s"];
    "dateutil.rrule._iterinfo" [color = "#e5e5e5ff", label = "dateutil.rrule._iterinfo\ncalls: 1\ntime: 0.000026s"];
    "dateutil.rrule.rruleset" [color = "#e5e5e5ff", label = "dateutil.rrule.rruleset\ncalls: 1\ntime: 0.000198s"];
    "dateutil.rrule._genitem" [color = "#e5e5e5ff", label = "dateutil.rrule._genitem\ncalls: 1\ntime: 0.000012s"];
    "dateutil.rrule._invalidates_cache" [color = "#e5e5e5ff", label = "dateutil.rrule._invalidates_cache\ncalls: 4\ntime: 0.000022s"];
    "dateutil.rrule._rrulestr" [color = "#e5e5e5ff", label = "dateutil.rrule._rrulestr\ncalls: 1\ntime: 0.000044s"];
    "numpy.lib.function_base.vectorize.__init__" [color = "#e5e5e5ff", label = "numpy.lib.function_base.vectorize.__init__\ncalls: 4\ntime: 0.000223s"];
    "matplotlib.dates.strpdate2num" [color = "#e5e5e5ff", label = "matplotlib.dates.strpdate2num\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.dates.bytespdate2num" [color = "#e5e5e5ff", label = "matplotlib.dates.bytespdate2num\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.dates.DateFormatter" [color = "#e5e5e5ff", label = "matplotlib.dates.DateFormatter\ncalls: 1\ntime: 0.005841s"];
    "matplotlib.dates.IndexDateFormatter" [color = "#e5e5e5ff", label = "matplotlib.dates.IndexDateFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.dates.ConciseDateFormatter" [color = "#e5e5e5ff", label = "matplotlib.dates.ConciseDateFormatter\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.dates.AutoDateFormatter" [color = "#e5e5e5ff", label = "matplotlib.dates.AutoDateFormatter\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.dates.rrulewrapper" [color = "#e5e5e5ff", label = "matplotlib.dates.rrulewrapper\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.dates.DateLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.DateLocator\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.dates.RRuleLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.RRuleLocator\ncalls: 1\ntime: 0.000326s"];
    "matplotlib.dates.AutoDateLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.AutoDateLocator\ncalls: 1\ntime: 0.000285s"];
    "matplotlib.dates.YearLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.YearLocator\ncalls: 1\ntime: 0.000302s"];
    "matplotlib.dates.MonthLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.MonthLocator\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.dates.WeekdayLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.WeekdayLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.dates.DayLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.DayLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.dates.HourLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.HourLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.dates.MinuteLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.MinuteLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.dates.SecondLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.SecondLocator\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.dates.MicrosecondLocator" [color = "#e5e5e5ff", label = "matplotlib.dates.MicrosecondLocator\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.dates.DateConverter" [color = "#e5e5e5ff", label = "matplotlib.dates.DateConverter\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.dates.ConciseDateConverter" [color = "#e5e5e5ff", label = "matplotlib.dates.ConciseDateConverter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.legend.<module>" [color = "#e5e5e5ff", label = "matplotlib.legend.<module>\ncalls: 1\ntime: 0.014445s"];
    "matplotlib.offsetbox.<module>" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.<module>\ncalls: 1\ntime: 0.001705s"];
    "matplotlib.offsetbox.OffsetBox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.OffsetBox\ncalls: 1\ntime: 0.000035s"];
    "matplotlib.offsetbox.PackerBase" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.PackerBase\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.offsetbox.VPacker" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.VPacker\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.offsetbox.HPacker" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.HPacker\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.offsetbox.PaddedBox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.PaddedBox\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.offsetbox.DrawingArea" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.DrawingArea\ncalls: 1\ntime: 0.000022s"];
    "matplotlib.offsetbox.TextArea" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.TextArea\ncalls: 1\ntime: 0.000019s"];
    "matplotlib.offsetbox.AuxTransformBox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.AuxTransformBox\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.offsetbox.AnchoredOffsetbox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.AnchoredOffsetbox\ncalls: 1\ntime: 0.000089s"];
    "matplotlib.offsetbox.AnchoredText" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.AnchoredText\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.offsetbox.OffsetImage" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.OffsetImage\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.offsetbox.AnnotationBbox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.AnnotationBbox\ncalls: 1\ntime: 0.000277s"];
    "matplotlib.offsetbox.DraggableBase" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.DraggableBase\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.offsetbox.DraggableOffsetBox" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.DraggableOffsetBox\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.offsetbox.DraggableAnnotation" [color = "#e5e5e5ff", label = "matplotlib.offsetbox.DraggableAnnotation\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.container.<module>" [color = "#e5e5e5ff", label = "matplotlib.container.<module>\ncalls: 1\ntime: 0.000330s"];
    "matplotlib.container.Container" [color = "#e5e5e5ff", label = "matplotlib.container.Container\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.container.BarContainer" [color = "#e5e5e5ff", label = "matplotlib.container.BarContainer\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.container.ErrorbarContainer" [color = "#e5e5e5ff", label = "matplotlib.container.ErrorbarContainer\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.container.StemContainer" [color = "#e5e5e5ff", label = "matplotlib.container.StemContainer\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.legend_handler.<module>" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.<module>\ncalls: 1\ntime: 0.000970s"];
    "matplotlib.legend_handler.HandlerBase" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerBase\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.legend_handler.HandlerNpoints" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerNpoints\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.legend_handler.HandlerNpointsYoffsets" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerNpointsYoffsets\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.legend_handler.HandlerLine2D" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerLine2D\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.legend_handler.HandlerPatch" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPatch\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.legend_handler.HandlerLineCollection" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerLineCollection\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.legend_handler.HandlerRegularPolyCollection" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerRegularPolyCollection\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.legend_handler.HandlerPathCollection" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPathCollection\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.legend_handler.HandlerCircleCollection" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerCircleCollection\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.legend_handler.HandlerErrorbar" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerErrorbar\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.legend_handler.HandlerStem" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerStem\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.legend_handler.HandlerTuple" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerTuple\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.legend_handler.HandlerPolyCollection" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPolyCollection\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.legend.DraggableLegend" [color = "#e5e5e5ff", label = "matplotlib.legend.DraggableLegend\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.legend.Legend" [color = "#e5e5e5ff", label = "matplotlib.legend.Legend\ncalls: 1\ntime: 0.001378s"];
    "matplotlib.legend_handler.HandlerStem.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerStem.__init__\ncalls: 4\ntime: 0.000282s"];
    "matplotlib.legend_handler.HandlerErrorbar.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerErrorbar.__init__\ncalls: 4\ntime: 0.000162s"];
    "matplotlib.legend_handler.HandlerLine2D.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerLine2D.__init__\ncalls: 3\ntime: 0.000072s"];
    "matplotlib.legend_handler.HandlerPatch.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPatch.__init__\ncalls: 4\ntime: 0.000059s"];
    "matplotlib.legend_handler.HandlerLineCollection.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerLineCollection.__init__\ncalls: 3\ntime: 0.000073s"];
    "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__\ncalls: 4\ntime: 0.000135s"];
    "matplotlib.legend_handler.HandlerCircleCollection.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerCircleCollection.__init__\ncalls: 4\ntime: 0.000136s"];
    "matplotlib.legend_handler.HandlerTuple.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerTuple.__init__\ncalls: 2\ntime: 0.000031s"];
    "matplotlib.legend_handler.HandlerPathCollection.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPathCollection.__init__\ncalls: 4\ntime: 0.000132s"];
    "matplotlib.legend_handler.HandlerPolyCollection.__init__" [color = "#e5e5e5ff", label = "matplotlib.legend_handler.HandlerPolyCollection.__init__\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.mlab.<module>" [color = "#e5e5e5ff", label = "matplotlib.mlab.<module>\ncalls: 1\ntime: 0.005767s"];
    "matplotlib.mlab.GaussianKDE" [color = "#e5e5e5ff", label = "matplotlib.mlab.GaussianKDE\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.quiver.<module>" [color = "#e5e5e5ff", label = "matplotlib.quiver.<module>\ncalls: 1\ntime: 0.001902s"];
    "matplotlib.quiver.QuiverKey" [color = "#e5e5e5ff", label = "matplotlib.quiver.QuiverKey\ncalls: 1\ntime: 0.000422s"];
    "matplotlib.quiver.Quiver" [color = "#e5e5e5ff", label = "matplotlib.quiver.Quiver\ncalls: 1\ntime: 0.000980s"];
    "matplotlib.quiver.Barbs" [color = "#e5e5e5ff", label = "matplotlib.quiver.Barbs\ncalls: 1\ntime: 0.000043s"];
    "matplotlib.stackplot.<module>" [color = "#e5e5e5ff", label = "matplotlib.stackplot.<module>\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.streamplot.<module>" [color = "#e5e5e5ff", label = "matplotlib.streamplot.<module>\ncalls: 1\ntime: 0.000596s"];
    "matplotlib.streamplot.StreamplotSet" [color = "#e5e5e5ff", label = "matplotlib.streamplot.StreamplotSet\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.streamplot.DomainMap" [color = "#e5e5e5ff", label = "matplotlib.streamplot.DomainMap\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.streamplot.Grid" [color = "#e5e5e5ff", label = "matplotlib.streamplot.Grid\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.streamplot.StreamMask" [color = "#e5e5e5ff", label = "matplotlib.streamplot.StreamMask\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.streamplot.InvalidIndexError" [color = "#e5e5e5ff", label = "matplotlib.streamplot.InvalidIndexError\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.streamplot.TerminateTrajectory" [color = "#e5e5e5ff", label = "matplotlib.streamplot.TerminateTrajectory\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.streamplot.OutOfBounds" [color = "#e5e5e5ff", label = "matplotlib.streamplot.OutOfBounds\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.table.<module>" [color = "#e5e5e5ff", label = "matplotlib.table.<module>\ncalls: 1\ntime: 0.037917s"];
    "matplotlib.table.Cell" [color = "#e5e5e5ff", label = "matplotlib.table.Cell\ncalls: 1\ntime: 0.000295s"];
    "matplotlib.table.CustomCell" [color = "#e5e5e5ff", label = "matplotlib.table.CustomCell\ncalls: 1\ntime: 0.000020s"];
    "matplotlib.table.Table" [color = "#e5e5e5ff", label = "matplotlib.table.Table\ncalls: 1\ntime: 0.000158s"];
    "matplotlib.tri.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.<module>\ncalls: 1\ntime: 0.027253s"];
    "matplotlib.tri.triangulation.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.triangulation.<module>\ncalls: 1\ntime: 0.000119s"];
    "matplotlib.tri.triangulation.Triangulation" [color = "#e5e5e5ff", label = "matplotlib.tri.triangulation.Triangulation\ncalls: 1\ntime: 0.000020s"];
    "matplotlib.tri.tricontour.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.tricontour.<module>\ncalls: 1\ntime: 0.000146s"];
    "matplotlib.tri.tricontour.TriContourSet" [color = "#e5e5e5ff", label = "matplotlib.tri.tricontour.TriContourSet\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.tri.tritools.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.tritools.<module>\ncalls: 1\ntime: 0.000269s"];
    "matplotlib.tri.tritools.TriAnalyzer" [color = "#e5e5e5ff", label = "matplotlib.tri.tritools.TriAnalyzer\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.tri.trifinder.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.trifinder.<module>\ncalls: 1\ntime: 0.000322s"];
    "matplotlib.tri.trifinder.TriFinder" [color = "#e5e5e5ff", label = "matplotlib.tri.trifinder.TriFinder\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.tri.trifinder.TrapezoidMapTriFinder" [color = "#e5e5e5ff", label = "matplotlib.tri.trifinder.TrapezoidMapTriFinder\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.tri.triinterpolate.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate.<module>\ncalls: 1\ntime: 0.001179s"];
    "matplotlib.tri.triinterpolate.TriInterpolator" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate.TriInterpolator\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.tri.triinterpolate.LinearTriInterpolator" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate.LinearTriInterpolator\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.tri.triinterpolate.CubicTriInterpolator" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate.CubicTriInterpolator\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.tri.triinterpolate._ReducedHCT_Element" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._ReducedHCT_Element\ncalls: 1\ntime: 0.000311s"];
    "matplotlib.tri.triinterpolate._DOF_estimator" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._DOF_estimator\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.tri.triinterpolate._DOF_estimator_user" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._DOF_estimator_user\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.tri.triinterpolate._DOF_estimator_geom" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._DOF_estimator_geom\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.tri.triinterpolate._DOF_estimator_min_E" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._DOF_estimator_min_E\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.tri.triinterpolate._Sparse_Matrix_coo" [color = "#e5e5e5ff", label = "matplotlib.tri.triinterpolate._Sparse_Matrix_coo\ncalls: 1\ntime: 0.000012s"];
    "matplotlib.tri.trirefine.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.trirefine.<module>\ncalls: 1\ntime: 0.000212s"];
    "matplotlib.tri.trirefine.TriRefiner" [color = "#e5e5e5ff", label = "matplotlib.tri.trirefine.TriRefiner\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.tri.trirefine.UniformTriRefiner" [color = "#e5e5e5ff", label = "matplotlib.tri.trirefine.UniformTriRefiner\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.tri.tripcolor.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.tripcolor.<module>\ncalls: 1\ntime: 0.000124s"];
    "matplotlib.tri.triplot.<module>" [color = "#e5e5e5ff", label = "matplotlib.tri.triplot.<module>\ncalls: 1\ntime: 0.000036s"];
    "matplotlib.axes._base.<module>" [color = "#e5e5e5ff", label = "matplotlib.axes._base.<module>\ncalls: 1\ntime: 0.095011s"];
    "matplotlib.axis.<module>" [color = "#e5e5e5ff", label = "matplotlib.axis.<module>\ncalls: 1\ntime: 0.078812s"];
    "matplotlib.scale.<module>" [color = "#e5e5e5ff", label = "matplotlib.scale.<module>\ncalls: 1\ntime: 0.011161s"];
    "matplotlib.scale.ScaleBase" [color = "#e5e5e5ff", label = "matplotlib.scale.ScaleBase\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.scale.LinearScale" [color = "#e5e5e5ff", label = "matplotlib.scale.LinearScale\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.scale.FuncTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.FuncTransform\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.scale.FuncScale" [color = "#e5e5e5ff", label = "matplotlib.scale.FuncScale\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.scale.LogTransformBase" [color = "#e5e5e5ff", label = "matplotlib.scale.LogTransformBase\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.scale.InvertedLogTransformBase" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedLogTransformBase\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.scale.Log10Transform" [color = "#e5e5e5ff", label = "matplotlib.scale.Log10Transform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.InvertedLog10Transform" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedLog10Transform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.Log2Transform" [color = "#e5e5e5ff", label = "matplotlib.scale.Log2Transform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.InvertedLog2Transform" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedLog2Transform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.NaturalLogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.NaturalLogTransform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.InvertedNaturalLogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedNaturalLogTransform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.scale.LogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.LogTransform\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.scale.InvertedLogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedLogTransform\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.scale.LogScale" [color = "#e5e5e5ff", label = "matplotlib.scale.LogScale\ncalls: 1\ntime: 0.000022s"];
    "matplotlib.scale.FuncScaleLog" [color = "#e5e5e5ff", label = "matplotlib.scale.FuncScaleLog\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.scale.SymmetricalLogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.SymmetricalLogTransform\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.scale.InvertedSymmetricalLogTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.InvertedSymmetricalLogTransform\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.scale.SymmetricalLogScale" [color = "#e5e5e5ff", label = "matplotlib.scale.SymmetricalLogScale\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.scale.LogitTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.LogitTransform\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.scale.LogisticTransform" [color = "#e5e5e5ff", label = "matplotlib.scale.LogisticTransform\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.scale.LogitScale" [color = "#e5e5e5ff", label = "matplotlib.scale.LogitScale\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.scale.get_scale_names" [color = "#e5e5e5ff", label = "matplotlib.scale.get_scale_names\ncalls: 2\ntime: 0.000012s"];
    "matplotlib.scale.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.scale.<listcomp>\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.scale._get_scale_docs" [color = "#e5e5e5ff", label = "matplotlib.scale._get_scale_docs\ncalls: 1\ntime: 0.003664s"];
    "matplotlib.artist.ArtistInspector.get_setters" [color = "#e5e5e5ff", label = "matplotlib.artist.ArtistInspector.get_setters\ncalls: 1\ntime: 0.040204s"];
    "matplotlib.artist.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.artist.<listcomp>\ncalls: 1\ntime: 0.000052s"];
    "matplotlib.axis.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.axis.<listcomp>\ncalls: 2\ntime: 0.000137s"];
    "matplotlib.axis.Tick" [color = "#e5e5e5ff", label = "matplotlib.axis.Tick\ncalls: 1\ntime: 0.003071s"];
    "matplotlib.axis.XTick" [color = "#e5e5e5ff", label = "matplotlib.axis.XTick\ncalls: 1\ntime: 0.000020s"];
    "matplotlib.axis.YTick" [color = "#e5e5e5ff", label = "matplotlib.axis.YTick\ncalls: 1\ntime: 0.000017s"];
    "matplotlib.axis.Ticker" [color = "#e5e5e5ff", label = "matplotlib.axis.Ticker\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.axis._LazyTickList" [color = "#e5e5e5ff", label = "matplotlib.axis._LazyTickList\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.axis.Axis" [color = "#e5e5e5ff", label = "matplotlib.axis.Axis\ncalls: 1\ntime: 0.002524s"];
    "matplotlib.axis._LazyTickList.__init__" [color = "#e5e5e5ff", label = "matplotlib.axis._LazyTickList.__init__\ncalls: 2\ntime: 0.000008s"];
    "matplotlib.axis.XAxis" [color = "#e5e5e5ff", label = "matplotlib.axis.XAxis\ncalls: 1\ntime: 0.000110s"];
    "matplotlib.axis._make_getset_interval" [color = "#e5e5e5ff", label = "matplotlib.axis._make_getset_interval\ncalls: 10\ntime: 0.000112s"];
    "matplotlib.axis.YAxis" [color = "#e5e5e5ff", label = "matplotlib.axis.YAxis\ncalls: 1\ntime: 0.000089s"];
    "matplotlib.spines.<module>" [color = "#e5e5e5ff", label = "matplotlib.spines.<module>\ncalls: 1\ntime: 0.001389s"];
    "matplotlib.spines.Spine" [color = "#e5e5e5ff", label = "matplotlib.spines.Spine\ncalls: 1\ntime: 0.001205s"];
    "matplotlib.axes._base._process_plot_var_args" [color = "#e5e5e5ff", label = "matplotlib.axes._base._process_plot_var_args\ncalls: 1\ntime: 0.000018s"];
    "matplotlib.axes._base._AxesBase" [color = "#e5e5e5ff", label = "matplotlib.axes._base._AxesBase\ncalls: 1\ntime: 0.006426s"];
    "matplotlib.cbook.Grouper.__init__" [color = "#e5e5e5ff", label = "matplotlib.cbook.Grouper.__init__\ncalls: 4\ntime: 0.000112s"];
    "matplotlib.axes._secondary_axes.<module>" [color = "#e5e5e5ff", label = "matplotlib.axes._secondary_axes.<module>\ncalls: 1\ntime: 0.001551s"];
    "matplotlib.axes._secondary_axes.SecondaryAxis" [color = "#e5e5e5ff", label = "matplotlib.axes._secondary_axes.SecondaryAxis\ncalls: 1\ntime: 0.001410s"];
    "logging.PlaceHolder.append" [color = "#e5e5e5ff", label = "logging.PlaceHolder.append\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.axes._axes.Axes" [color = "#e4e5e5ff", label = "matplotlib.axes._axes.Axes\ncalls: 1\ntime: 0.179289s"];
    "matplotlib._preprocess_data" [color = "#e4e5e5ff", label = "matplotlib._preprocess_data\ncalls: 72\ntime: 0.138090s"];
    "matplotlib._add_data_doc" [color = "#e5e5e5ff", label = "matplotlib._add_data_doc\ncalls: 36\ntime: 0.033575s"];
    "matplotlib.axes._subplots.SubplotBase" [color = "#e5e5e5ff", label = "matplotlib.axes._subplots.SubplotBase\ncalls: 1\ntime: 0.001110s"];
    "matplotlib.axes._subplots.subplot_class_factory" [color = "#e5e5e5ff", label = "matplotlib.axes._subplots.subplot_class_factory\ncalls: 1\ntime: 0.000093s"];
    "matplotlib.axes._subplots.<genexpr>" [color = "#e5e5e5ff", label = "matplotlib.axes._subplots.<genexpr>\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.projections.geo.<module>" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.<module>\ncalls: 1\ntime: 0.003154s"];
    "matplotlib.projections.geo.GeoAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.GeoAxes\ncalls: 1\ntime: 0.000107s"];
    "matplotlib.projections.geo.ThetaFormatter" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.ThetaFormatter\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.projections.geo._GeoTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo._GeoTransform\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.projections.geo.AitoffAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.AitoffAxes\ncalls: 1\ntime: 0.000558s"];
    "matplotlib.projections.geo.AitoffTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.AitoffTransform\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.projections.geo.InvertedAitoffTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.InvertedAitoffTransform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.projections.geo.HammerAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.HammerAxes\ncalls: 1\ntime: 0.000563s"];
    "matplotlib.projections.geo.HammerTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.HammerTransform\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.projections.geo.InvertedHammerTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.InvertedHammerTransform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.projections.geo.MollweideAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.MollweideAxes\ncalls: 1\ntime: 0.000564s"];
    "matplotlib.projections.geo.MollweideTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.MollweideTransform\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.projections.geo.InvertedMollweideTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.InvertedMollweideTransform\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.projections.geo.LambertAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.LambertAxes\ncalls: 1\ntime: 0.000566s"];
    "matplotlib.projections.geo.LambertTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.LambertTransform\ncalls: 1\ntime: 0.000008s"];
    "matplotlib.projections.geo.InvertedLambertTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.geo.InvertedLambertTransform\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.projections.polar.<module>" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.<module>\ncalls: 1\ntime: 0.002770s"];
    "matplotlib.projections.polar.PolarTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.PolarTransform\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.projections.polar.PolarAffine" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.PolarAffine\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.projections.polar.InvertedPolarTransform" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.InvertedPolarTransform\ncalls: 1\ntime: 0.000013s"];
    "matplotlib.projections.polar.ThetaFormatter" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.ThetaFormatter\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.projections.polar._AxisWrapper" [color = "#e5e5e5ff", label = "matplotlib.projections.polar._AxisWrapper\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.projections.polar.ThetaLocator" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.ThetaLocator\ncalls: 1\ntime: 0.000305s"];
    "matplotlib.projections.polar.ThetaTick" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.ThetaTick\ncalls: 1\ntime: 0.000014s"];
    "matplotlib.projections.polar.ThetaAxis" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.ThetaAxis\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.projections.polar.RadialLocator" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.RadialLocator\ncalls: 1\ntime: 0.000290s"];
    "matplotlib.projections.polar._ThetaShift" [color = "#e5e5e5ff", label = "matplotlib.projections.polar._ThetaShift\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.projections.polar.RadialTick" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.RadialTick\ncalls: 1\ntime: 0.000011s"];
    "matplotlib.projections.polar.RadialAxis" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.RadialAxis\ncalls: 1\ntime: 0.000015s"];
    "matplotlib.projections.polar._WedgeBbox" [color = "#e5e5e5ff", label = "matplotlib.projections.polar._WedgeBbox\ncalls: 1\ntime: 0.000009s"];
    "matplotlib.projections.polar.PolarAxes" [color = "#e5e5e5ff", label = "matplotlib.projections.polar.PolarAxes\ncalls: 1\ntime: 0.000076s"];
    "_NamespacePath.__iter__" [color = "#e5e5e5ff", label = "_NamespacePath.__iter__\ncalls: 1\ntime: 0.007190s"];
    "_NamespacePath._recalculate" [color = "#e5e5e5ff", label = "_NamespacePath._recalculate\ncalls: 1\ntime: 0.006091s"];
    "_NamespacePath._get_parent_path" [color = "#e5e5e5ff", label = "_NamespacePath._get_parent_path\ncalls: 1\ntime: 0.001092s"];
    "_NamespacePath._find_parent_path_names" [color = "#e5e5e5ff", label = "_NamespacePath._find_parent_path_names\ncalls: 1\ntime: 0.000010s"];
    "mpl_toolkits.mplot3d.<module>" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.<module>\ncalls: 1\ntime: 0.025045s"];
    "mpl_toolkits.mplot3d.axes3d.<module>" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axes3d.<module>\ncalls: 1\ntime: 0.020449s"];
    "mpl_toolkits.mplot3d.art3d.<module>" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.<module>\ncalls: 1\ntime: 0.008988s"];
    "mpl_toolkits.mplot3d.proj3d.<module>" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.proj3d.<module>\ncalls: 1\ntime: 0.002272s"];
    "mpl_toolkits.mplot3d.art3d.Text3D" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Text3D\ncalls: 1\ntime: 0.000107s"];
    "mpl_toolkits.mplot3d.art3d.Line3D" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Line3D\ncalls: 1\ntime: 0.000106s"];
    "mpl_toolkits.mplot3d.art3d.Line3DCollection" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Line3DCollection\ncalls: 1\ntime: 0.000130s"];
    "mpl_toolkits.mplot3d.art3d.Patch3D" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Patch3D\ncalls: 1\ntime: 0.000012s"];
    "mpl_toolkits.mplot3d.art3d.PathPatch3D" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.PathPatch3D\ncalls: 1\ntime: 0.000013s"];
    "mpl_toolkits.mplot3d.art3d.Patch3DCollection" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Patch3DCollection\ncalls: 1\ntime: 0.000013s"];
    "mpl_toolkits.mplot3d.art3d.Path3DCollection" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Path3DCollection\ncalls: 1\ntime: 0.000012s"];
    "mpl_toolkits.mplot3d.art3d.Poly3DCollection" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.art3d.Poly3DCollection\ncalls: 1\ntime: 0.000033s"];
    "mpl_toolkits.mplot3d.axis3d.<module>" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axis3d.<module>\ncalls: 1\ntime: 0.001464s"];
    "mpl_toolkits.mplot3d.axis3d.Axis" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axis3d.Axis\ncalls: 1\ntime: 0.000464s"];
    "mpl_toolkits.mplot3d.axis3d.XAxis" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axis3d.XAxis\ncalls: 1\ntime: 0.000070s"];
    "mpl_toolkits.mplot3d.axis3d.YAxis" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axis3d.YAxis\ncalls: 1\ntime: 0.000061s"];
    "mpl_toolkits.mplot3d.axis3d.ZAxis" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axis3d.ZAxis\ncalls: 1\ntime: 0.000060s"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" [color = "#e5e5e5ff", label = "mpl_toolkits.mplot3d.axes3d.Axes3D\ncalls: 1\ntime: 0.002569s"];
    "matplotlib.projections.ProjectionRegistry" [color = "#e5e5e5ff", label = "matplotlib.projections.ProjectionRegistry\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.projections.ProjectionRegistry.__init__" [color = "#e5e5e5ff", label = "matplotlib.projections.ProjectionRegistry.__init__\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.projections.ProjectionRegistry.register" [color = "#e5e5e5ff", label = "matplotlib.projections.ProjectionRegistry.register\ncalls: 1\ntime: 0.000030s"];
    "matplotlib.projections.ProjectionRegistry.get_projection_names" [color = "#e5e5e5ff", label = "matplotlib.projections.ProjectionRegistry.get_projection_names\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.figure._AxesStack" [color = "#e5e5e5ff", label = "matplotlib.figure._AxesStack\ncalls: 1\ntime: 0.000023s"];
    "matplotlib.figure.AxesStack" [color = "#e5e5e5ff", label = "matplotlib.figure.AxesStack\ncalls: 1\ntime: 0.000005s"];
    "matplotlib.figure.SubplotParams" [color = "#e5e5e5ff", label = "matplotlib.figure.SubplotParams\ncalls: 1\ntime: 0.000010s"];
    "matplotlib.figure.Figure" [color = "#e5e5e5ff", label = "matplotlib.figure.Figure\ncalls: 1\ntime: 0.007118s"];
    "matplotlib.pyplot.switch_backend" [color = "#e4e5e5ff", label = "matplotlib.pyplot.switch_backend\ncalls: 12\ntime: 0.474742s"];
    "matplotlib.pyplot.close" [color = "#e5e5e5ff", label = "matplotlib.pyplot.close\ncalls: 12\ntime: 0.000957s"];
    "matplotlib._pylab_helpers.destroy_all" [color = "#e5e5e5ff", label = "matplotlib._pylab_helpers.destroy_all\ncalls: 12\ntime: 0.000657s"];
    "matplotlib.backends.backend_macosx.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_macosx.<module>\ncalls: 2\ntime: 0.002352s"];
    "matplotlib.backends.backend_qt5agg.<module>" [color = "#e4e5e5ff", label = "matplotlib.backends.backend_qt5agg.<module>\ncalls: 2\ntime: 0.186622s"];
    "matplotlib.backends.backend_agg.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_agg.<module>\ncalls: 1\ntime: 0.104207s"];
    "PIL.Image.<module>" [color = "#e5e5e5ff", label = "PIL.Image.<module>\ncalls: 1\ntime: 0.064093s"];
    "xml.etree.ElementTree.<module>" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.<module>\ncalls: 1\ntime: 0.025642s"];
    "xml.etree.ElementPath.<module>" [color = "#e5e5e5ff", label = "xml.etree.ElementPath.<module>\ncalls: 1\ntime: 0.018356s"];
    "xml.etree.ElementPath._SelectorContext" [color = "#e5e5e5ff", label = "xml.etree.ElementPath._SelectorContext\ncalls: 1\ntime: 0.000006s"];
    "xml.etree.ElementTree.ParseError" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.ParseError\ncalls: 1\ntime: 0.000006s"];
    "xml.etree.ElementTree.Element" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.Element\ncalls: 1\ntime: 0.000041s"];
    "xml.etree.ElementTree.QName" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.QName\ncalls: 1\ntime: 0.000015s"];
    "xml.etree.ElementTree.ElementTree" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.ElementTree\ncalls: 1\ntime: 0.000023s"];
    "xml.etree.ElementTree._ListDataStream" [color = "#e5e5e5ff", label = "xml.etree.ElementTree._ListDataStream\ncalls: 1\ntime: 0.000010s"];
    "xml.etree.ElementTree.XMLPullParser" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.XMLPullParser\ncalls: 1\ntime: 0.000010s"];
    "xml.etree.ElementTree.TreeBuilder" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.TreeBuilder\ncalls: 1\ntime: 0.000011s"];
    "xml.etree.ElementTree.XMLParser" [color = "#e5e5e5ff", label = "xml.etree.ElementTree.XMLParser\ncalls: 1\ntime: 0.000023s"];
    "PIL.ImageMode.<module>" [color = "#e5e5e5ff", label = "PIL.ImageMode.<module>\ncalls: 1\ntime: 0.000082s"];
    "PIL.ImageMode.ModeDescriptor" [color = "#e5e5e5ff", label = "PIL.ImageMode.ModeDescriptor\ncalls: 1\ntime: 0.000008s"];
    "PIL.TiffTags.<module>" [color = "#e5e5e5ff", label = "PIL.TiffTags.<module>\ncalls: 1\ntime: 0.009155s"];
    "_TagInfo" [color = "#e5e5e5ff", label = "_TagInfo\ncalls: 1\ntime: 0.000048s"];
    "PIL.TiffTags.TagInfo" [color = "#e5e5e5ff", label = "PIL.TiffTags.TagInfo\ncalls: 1\ntime: 0.000010s"];
    "PIL.TiffTags._populate" [color = "#e5e5e5ff", label = "PIL.TiffTags._populate\ncalls: 1\ntime: 0.005245s"];
    "PIL.TiffTags.__new__" [color = "#e4e5e5ff", label = "PIL.TiffTags.__new__\ncalls: 104\ntime: 0.003187s"];
    "PIL._binary.<module>" [color = "#e5e5e5ff", label = "PIL._binary.<module>\ncalls: 1\ntime: 0.000049s"];
    "PIL._util.<module>" [color = "#e5e5e5ff", label = "PIL._util.<module>\ncalls: 1\ntime: 0.000113s"];
    "PIL._util.deferred_error" [color = "#e5e5e5ff", label = "PIL._util.deferred_error\ncalls: 1\ntime: 0.000006s"];
    "PIL.Image.DecompressionBombWarning" [color = "#e5e5e5ff", label = "PIL.Image.DecompressionBombWarning\ncalls: 1\ntime: 0.000005s"];
    "PIL.Image.DecompressionBombError" [color = "#e5e5e5ff", label = "PIL.Image.DecompressionBombError\ncalls: 1\ntime: 0.000005s"];
    "PIL.Image._E" [color = "#e5e5e5ff", label = "PIL.Image._E\ncalls: 1\ntime: 0.000008s"];
    "PIL.Image.Image" [color = "#e5e5e5ff", label = "PIL.Image.Image\ncalls: 1\ntime: 0.000099s"];
    "PIL.Image.ImagePointHandler" [color = "#e5e5e5ff", label = "PIL.Image.ImagePointHandler\ncalls: 1\ntime: 0.000005s"];
    "PIL.Image.ImageTransformHandler" [color = "#e5e5e5ff", label = "PIL.Image.ImageTransformHandler\ncalls: 1\ntime: 0.000005s"];
    "PIL.Image._apply_env_variables" [color = "#e5e5e5ff", label = "PIL.Image._apply_env_variables\ncalls: 1\ntime: 0.000281s"];
    "PIL.Image.Exif" [color = "#e5e5e5ff", label = "PIL.Image.Exif\ncalls: 1\ntime: 0.000024s"];
    "matplotlib.backends.backend_agg.RendererAgg" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_agg.RendererAgg\ncalls: 1\ntime: 0.000057s"];
    "matplotlib.backends.backend_agg.FigureCanvasAgg" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_agg.FigureCanvasAgg\ncalls: 1\ntime: 0.003779s"];
    "matplotlib.backends.backend_agg._BackendAgg" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_agg._BackendAgg\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.backend_bases.export" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.export\ncalls: 1\ntime: 0.000112s"];
    "matplotlib.backend_bases.Show" [color = "#e5e5e5ff", label = "matplotlib.backend_bases.Show\ncalls: 1\ntime: 0.000007s"];
    "matplotlib.backends.backend_qt5.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_qt5.<module>\ncalls: 2\ntime: 0.072239s"];
    "matplotlib.backends.qt_editor.figureoptions.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.qt_editor.figureoptions.<module>\ncalls: 2\ntime: 0.063571s"];
    "matplotlib.backends.qt_compat.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.qt_compat.<module>\ncalls: 2\ntime: 0.058563s"];
    "matplotlib.backends.qt_compat._setup_pyqt5" [color = "#e5e5e5ff", label = "matplotlib.backends.qt_compat._setup_pyqt5\ncalls: 4\ntime: 0.015208s"];
    "matplotlib.backends.qt_compat._setup_pyqt4" [color = "#e5e5e5ff", label = "matplotlib.backends.qt_compat._setup_pyqt4\ncalls: 6\ntime: 0.037762s"];
    "matplotlib.backends.qt_compat._setup_pyqt4_internal" [color = "#e5e5e5ff", label = "matplotlib.backends.qt_compat._setup_pyqt4_internal\ncalls: 4\ntime: 0.030098s"];
    "matplotlib.backends.backend_qt4agg.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_qt4agg.<module>\ncalls: 1\ntime: 0.036435s"];
    "matplotlib.backends.backend_gtk3agg.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_gtk3agg.<module>\ncalls: 1\ntime: 0.011611s"];
    "matplotlib.backends.backend_cairo.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_cairo.<module>\ncalls: 1\ntime: 0.007999s"];
    "matplotlib.backends.backend_tkagg.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_tkagg.<module>\ncalls: 1\ntime: 0.007795s"];
    "matplotlib.backends._backend_tk.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends._backend_tk.<module>\ncalls: 1\ntime: 0.003842s"];
    "matplotlib.backends.backend_wxagg.<module>" [color = "#e5e5e5ff", label = "matplotlib.backends.backend_wxagg.<module>\ncalls: 1\ntime: 0.003790s"];
    "matplotlib.pyplot.install_repl_displayhook" [color = "#e5e5e5ff", label = "matplotlib.pyplot.install_repl_displayhook\ncalls: 1\ntime: 0.000077s"];
    "matplotlib.pyplot._NotIPython" [color = "#e5e5e5ff", label = "matplotlib.pyplot._NotIPython\ncalls: 1\ntime: 0.000006s"];
    "matplotlib.pyplot._setup_pyplot_info_docstrings" [color = "#e5e5e5ff", label = "matplotlib.pyplot._setup_pyplot_info_docstrings\ncalls: 1\ntime: 0.035915s"];
    "matplotlib.pyplot.get_plot_commands" [color = "#e5e5e5ff", label = "matplotlib.pyplot.get_plot_commands\ncalls: 1\ntime: 0.014001s"];
    "matplotlib.pyplot.colormaps" [color = "#e5e5e5ff", label = "matplotlib.pyplot.colormaps\ncalls: 1\ntime: 0.000051s"];
    "inspect.getmodule" [color = "#e4e5e5ff", label = "inspect.getmodule\ncalls: 143\ntime: 0.003691s"];
    "inspect.ismodule" [color = "#e4e5e5ff", label = "inspect.ismodule\ncalls: 143\ntime: 0.000505s"];
    "matplotlib.pyplot.<genexpr>" [color = "#e4e5e5ff", label = "matplotlib.pyplot.<genexpr>\ncalls: 130\ntime: 0.012120s"];
    "matplotlib.pyplot.<listcomp>" [color = "#e5e5e5ff", label = "matplotlib.pyplot.<listcomp>\ncalls: 1\ntime: 0.000429s"];
    "pandas.io.parsers.parser_f" [color = "#e5e5e5ff", label = "pandas.io.parsers.parser_f\ncalls: 1\ntime: 0.099456s"];
    "pandas.io.parsers._read" [color = "#e5e5e5ff", label = "pandas.io.parsers._read\ncalls: 1\ntime: 0.099216s"];
    "pandas.io.common.infer_compression" [color = "#e5e5e5ff", label = "pandas.io.common.infer_compression\ncalls: 1\ntime: 0.000149s"];
    "pandas.io.common.stringify_path" [color = "#e5e5e5ff", label = "pandas.io.common.stringify_path\ncalls: 2\ntime: 0.000137s"];
    "pandas.io.common._expand_user" [color = "#e5e5e5ff", label = "pandas.io.common._expand_user\ncalls: 3\ntime: 0.000109s"];
    "pandas.io.common.get_filepath_or_buffer" [color = "#e5e5e5ff", label = "pandas.io.common.get_filepath_or_buffer\ncalls: 1\ntime: 0.003277s"];
    "pandas.io.common.is_url" [color = "#e5e5e5ff", label = "pandas.io.common.is_url\ncalls: 1\ntime: 0.002666s"];
    "urllib.parse.urlparse" [color = "#e5e5e5ff", label = "urllib.parse.urlparse\ncalls: 3\ntime: 0.002914s"];
    "urllib.parse._coerce_args" [color = "#e5e5e5ff", label = "urllib.parse._coerce_args\ncalls: 6\ntime: 0.000070s"];
    "urllib.parse.urlsplit" [color = "#e5e5e5ff", label = "urllib.parse.urlsplit\ncalls: 3\ntime: 0.001480s"];
    "urllib.parse._checknetloc" [color = "#e5e5e5ff", label = "urllib.parse._checknetloc\ncalls: 1\ntime: 0.000006s"];
    "urllib.parse._noop" [color = "#e5e5e5ff", label = "urllib.parse._noop\ncalls: 6\ntime: 0.000021s"];
    "pandas.io.common.is_s3_url" [color = "#e5e5e5ff", label = "pandas.io.common.is_s3_url\ncalls: 1\ntime: 0.000177s"];
    "pandas.io.common.is_gcs_url" [color = "#e5e5e5ff", label = "pandas.io.common.is_gcs_url\ncalls: 1\ntime: 0.000173s"];
    "pandas.io.parsers._validate_integer" [color = "#e5e5e5ff", label = "pandas.io.parsers._validate_integer\ncalls: 2\ntime: 0.000023s"];
    "pandas.io.parsers._validate_names" [color = "#e5e5e5ff", label = "pandas.io.parsers._validate_names\ncalls: 1\ntime: 0.000004s"];
    "pandas.io.parsers.TextFileReader.__init__" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader.__init__\ncalls: 1\ntime: 0.004227s"];
    "pandas.io.parsers.TextFileReader._get_options_with_defaults" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader._get_options_with_defaults\ncalls: 1\ntime: 0.000247s"];
    "pandas.io.parsers.TextFileReader._check_file_or_buffer" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader._check_file_or_buffer\ncalls: 1\ntime: 0.000055s"];
    "pandas.core.dtypes.inference.is_file_like" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.is_file_like\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.parsers.TextFileReader._clean_options" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader._clean_options\ncalls: 1\ntime: 0.000335s"];
    "pandas.io.common.validate_header_arg" [color = "#e5e5e5ff", label = "pandas.io.common.validate_header_arg\ncalls: 1\ntime: 0.000005s"];
    "pandas.io.parsers._is_index_col" [color = "#e5e5e5ff", label = "pandas.io.parsers._is_index_col\ncalls: 3\ntime: 0.000012s"];
    "pandas.io.parsers._clean_na_values" [color = "#e5e5e5ff", label = "pandas.io.parsers._clean_na_values\ncalls: 1\ntime: 0.000013s"];
    "pandas.io.parsers.TextFileReader._make_engine" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader._make_engine\ncalls: 1\ntime: 0.003369s"];
    "pandas.io.parsers.CParserWrapper.__init__" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper.__init__\ncalls: 2\ntime: 0.003488s"];
    "pandas.io.parsers._validate_parse_dates_arg" [color = "#e5e5e5ff", label = "pandas.io.parsers._validate_parse_dates_arg\ncalls: 1\ntime: 0.000021s"];
    "pandas.io.parsers._make_date_converter" [color = "#e5e5e5ff", label = "pandas.io.parsers._make_date_converter\ncalls: 1\ntime: 0.000009s"];
    "pandas.io.parsers._validate_usecols_arg" [color = "#e5e5e5ff", label = "pandas.io.parsers._validate_usecols_arg\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.parsers.CParserWrapper._set_noconvert_columns" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._set_noconvert_columns\ncalls: 1\ntime: 0.000023s"];
    "pandas.io.parsers.CParserWrapper._has_complex_date_col" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._has_complex_date_col\ncalls: 1\ntime: 0.000007s"];
    "pandas.io.parsers.TextFileReader.read" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader.read\ncalls: 1\ntime: 0.091031s"];
    "pandas.io.parsers.CParserWrapper.read" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper.read\ncalls: 1\ntime: 0.014297s"];
    "pandas.core.dtypes.common.is_categorical_dtype" [color = "#e4e5e5ff", label = "pandas.core.dtypes.common.is_categorical_dtype\ncalls: 84\ntime: 0.005932s"];
    "pandas.core.dtypes.base.is_dtype" [color = "#e3e5e5ff", label = "pandas.core.dtypes.base.is_dtype\ncalls: 221\ntime: 0.013018s"];
    "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#e3e5e5ff", label = "pandas.core.dtypes.common.is_extension_array_dtype\ncalls: 239\ntime: 0.007134s"];
    "pandas.core.dtypes.common.is_integer_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_integer_dtype\ncalls: 41\ntime: 0.002409s"];
    "pandas.core.dtypes.common.classes_and_not_datetimelike" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.classes_and_not_datetimelike\ncalls: 58\ntime: 0.000216s"];
    "pandas.core.dtypes.common._is_dtype_type" [color = "#e3e5e5ff", label = "pandas.core.dtypes.common._is_dtype_type\ncalls: 242\ntime: 0.008005s"];
    "pandas.core.dtypes.common.<lambda>" [color = "#e3e5e5ff", label = "pandas.core.dtypes.common.<lambda>\ncalls: 246\ntime: 0.000941s"];
    "pandas.core.dtypes.common.is_float_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_float_dtype\ncalls: 24\ntime: 0.001334s"];
    "pandas.core.dtypes.common.classes" [color = "#e4e5e5ff", label = "pandas.core.dtypes.common.classes\ncalls: 184\ntime: 0.000679s"];
    "pandas.core.dtypes.common.is_bool_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_bool_dtype\ncalls: 34\ntime: 0.003222s"];
    "pandas.core.dtypes.common._get_dtype" [color = "#e4e5e5ff", label = "pandas.core.dtypes.common._get_dtype\ncalls: 76\ntime: 0.000642s"];
    "pandas.core.dtypes.common.is_object_dtype" [color = "#e4e5e5ff", label = "pandas.core.dtypes.common.is_object_dtype\ncalls: 79\ntime: 0.005922s"];
    "pandas.io.parsers.CParserWrapper._maybe_dedup_names" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._maybe_dedup_names\ncalls: 1\ntime: 0.000168s"];
    "pandas.io.parsers._is_potential_multi_index" [color = "#e5e5e5ff", label = "pandas.io.parsers._is_potential_multi_index\ncalls: 3\ntime: 0.000149s"];
    "pandas.io.parsers.<genexpr>" [color = "#e5e5e5ff", label = "pandas.io.parsers.<genexpr>\ncalls: 6\ntime: 0.000025s"];
    "pandas.io.parsers.<listcomp>" [color = "#e5e5e5ff", label = "pandas.io.parsers.<listcomp>\ncalls: 1\ntime: 0.000011s"];
    "pandas.io.parsers.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.io.parsers.<dictcomp>\ncalls: 1\ntime: 0.000013s"];
    "pandas.io.parsers.CParserWrapper._do_date_conversions" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._do_date_conversions\ncalls: 1\ntime: 0.000094s"];
    "pandas.io.parsers._process_date_conversion" [color = "#e5e5e5ff", label = "pandas.io.parsers._process_date_conversion\ncalls: 1\ntime: 0.000030s"];
    "pandas.io.parsers.CParserWrapper._make_index" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._make_index\ncalls: 1\ntime: 0.000131s"];
    "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns\ncalls: 2\ntime: 0.000118s"];
    "pandas.io.parsers.TextFileReader._create_index" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader._create_index\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.indexes.range.__new__" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.__new__\ncalls: 1\ntime: 0.000588s"];
    "pandas.core.indexes.numeric._validate_dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric._validate_dtype\ncalls: 7\ntime: 0.000043s"];
    "pandas.core.indexes.base.maybe_extract_name" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.maybe_extract_name\ncalls: 37\ntime: 0.001624s"];
    "pandas.core.common.all_none" [color = "#e5e5e5ff", label = "pandas.core.common.all_none\ncalls: 1\ntime: 0.000072s"];
    "pandas.core.common.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.common.<genexpr>\ncalls: 9\ntime: 0.000036s"];
    "pandas.core.dtypes.common.ensure_python_int" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.ensure_python_int\ncalls: 2\ntime: 0.000025s"];
    "pandas.core.indexes.range._simple_new" [color = "#e5e5e5ff", label = "pandas.core.indexes.range._simple_new\ncalls: 1\ntime: 0.000173s"];
    "pandas.core.indexes.base.RangeIndex.name" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex.name\ncalls: 7\ntime: 0.000092s"];
    "pandas.core.indexes.base.RangeIndex._reset_identity" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex._reset_identity\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.frame.DataFrame.__init__" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame.__init__\ncalls: 8\ntime: 0.076525s"];
    "pandas.core.internals.construction.init_dict" [color = "#e5e5e5ff", label = "pandas.core.internals.construction.init_dict\ncalls: 1\ntime: 0.075773s"];
    "pandas.core.series.Series.__init__" [color = "#e5e5e5ff", label = "pandas.core.series.Series.__init__\ncalls: 21\ntime: 0.084418s"];
    "pandas.core.construction.is_empty_data" [color = "#e5e5e5ff", label = "pandas.core.construction.is_empty_data\ncalls: 18\ntime: 0.001307s"];
    "pandas.core.indexes.base.ensure_index" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.ensure_index\ncalls: 42\ntime: 0.015520s"];
    "pandas.core.dtypes.inference.is_iterator" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.is_iterator\ncalls: 10\ntime: 0.001272s"];
    "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike\ncalls: 3\ntime: 0.000052s"];
    "pandas.core.indexes.base.__new__" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.__new__\ncalls: 12\ntime: 0.031161s"];
    "pandas.core.dtypes.common.is_interval_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_interval_dtype\ncalls: 54\ntime: 0.004348s"];
    "pandas.core.dtypes.dtypes.is_dtype" [color = "#e4e5e5ff", label = "pandas.core.dtypes.dtypes.is_dtype\ncalls: 90\ntime: 0.006903s"];
    "pandas.core.dtypes.common.is_datetime64_any_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_datetime64_any_dtype\ncalls: 24\ntime: 0.003057s"];
    "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_datetime64_dtype\ncalls: 37\ntime: 0.002758s"];
    "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_datetime64tz_dtype\ncalls: 56\ntime: 0.004227s"];
    "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_timedelta64_dtype\ncalls: 43\ntime: 0.002735s"];
    "pandas.core.dtypes.common.is_period_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_period_dtype\ncalls: 54\ntime: 0.004274s"];
    "pandas.core.dtypes.common.is_signed_integer_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_signed_integer_dtype\ncalls: 11\ntime: 0.000631s"];
    "pandas.core.dtypes.common.is_unsigned_integer_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_unsigned_integer_dtype\ncalls: 6\ntime: 0.000344s"];
    "pandas.core.common.asarray_tuplesafe" [color = "#e5e5e5ff", label = "pandas.core.common.asarray_tuplesafe\ncalls: 7\ntime: 0.000365s"];
    "pandas.core.indexes.base._maybe_cast_data_without_dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._maybe_cast_data_without_dtype\ncalls: 3\ntime: 0.000424s"];
    "pandas.core.indexes.base._maybe_cast_with_dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._maybe_cast_with_dtype\ncalls: 3\ntime: 0.000435s"];
    "pandas.core.indexes.base._simple_new" [color = "#e5e5e5ff", label = "pandas.core.indexes.base._simple_new\ncalls: 13\ntime: 0.000852s"];
    "pandas.core.indexes.base.Index._reset_identity" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._reset_identity\ncalls: 4\ntime: 0.000020s"];
    "pandas.core.generic.Series._validate_dtype" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._validate_dtype\ncalls: 2\ntime: 0.000110s"];
    "pandas.core.dtypes.inference.is_dict_like" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.is_dict_like\ncalls: 2\ntime: 0.000159s"];
    "pandas.core.dtypes.inference.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.<genexpr>\ncalls: 7\ntime: 0.000030s"];
    "pandas.core.series.Series._init_dict" [color = "#e5e5e5ff", label = "pandas.core.series.Series._init_dict\ncalls: 1\ntime: 0.013040s"];
    "pandas.core.construction.create_series_with_explicit_dtype" [color = "#e5e5e5ff", label = "pandas.core.construction.create_series_with_explicit_dtype\ncalls: 1\ntime: 0.010785s"];
    "pandas.core.indexes.base.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.<genexpr>\ncalls: 2\ntime: 0.000009s"];
    "pandas.core.common.maybe_iterable_to_list" [color = "#e5e5e5ff", label = "pandas.core.common.maybe_iterable_to_list\ncalls: 1\ntime: 0.000255s"];
    "pandas.core.indexes.base.Index.__len__" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.__len__\ncalls: 49\ntime: 0.000180s"];
    "pandas.core.construction.sanitize_array" [color = "#e5e5e5ff", label = "pandas.core.construction.sanitize_array\ncalls: 22\ntime: 0.015506s"];
    "pandas.core.construction.extract_array" [color = "#e5e5e5ff", label = "pandas.core.construction.extract_array\ncalls: 59\ntime: 0.005817s"];
    "pandas.core.construction._try_cast" [color = "#e5e5e5ff", label = "pandas.core.construction._try_cast\ncalls: 22\ntime: 0.007026s"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.maybe_cast_to_datetime\ncalls: 10\ntime: 0.003833s"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.__init__\ncalls: 20\ntime: 0.011995s"];
    "pandas.core.internals.blocks.make_block" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.make_block\ncalls: 36\ntime: 0.014860s"];
    "pandas.core.internals.blocks.get_block_type" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.get_block_type\ncalls: 24\ntime: 0.013212s"];
    "pandas.core.dtypes.common.is_sparse" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_sparse\ncalls: 28\ntime: 0.001096s"];
    "pandas.core.dtypes.common.is_categorical" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_categorical\ncalls: 24\ntime: 0.002721s"];
    "pandas.core.internals.blocks.ObjectBlock.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.__init__\ncalls: 28\ntime: 0.002541s"];
    "pandas.core.internals.blocks.ObjectBlock._check_ndim" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock._check_ndim\ncalls: 14\ntime: 0.000094s"];
    "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.mgr_locs\ncalls: 55\ntime: 0.000341s"];
    "pandas.core.generic.Series.__init__" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.__init__\ncalls: 21\ntime: 0.000363s"];
    "pandas.core.generic.Series.__setattr__" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.__setattr__\ncalls: 43\ntime: 0.002917s"];
    "pandas.core.series.Series.name" [color = "#e4e5e5ff", label = "pandas.core.series.Series.name\ncalls: 123\ntime: 0.001932s"];
    "pandas.core.generic.Series.__getattr__" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.__getattr__\ncalls: 36\ntime: 0.001387s"];
    "pandas.core.series.Series._set_axis" [color = "#e5e5e5ff", label = "pandas.core.series.Series._set_axis\ncalls: 21\ntime: 0.001104s"];
    "pandas.core.indexes.base.Index.is_all_dates" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.is_all_dates\ncalls: 1\ntime: 0.000069s"];
    "pandas.core.indexes.base.Index.values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.values\ncalls: 8\ntime: 0.000039s"];
    "pandas.core.series.Series._set_subtyp" [color = "#e5e5e5ff", label = "pandas.core.series.Series._set_subtyp\ncalls: 21\ntime: 0.000110s"];
    "pandas.core.series.Series.reindex" [color = "#e5e5e5ff", label = "pandas.core.series.Series.reindex\ncalls: 1\ntime: 0.002158s"];
    "pandas.core.generic.Series.reindex" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.reindex\ncalls: 1\ntime: 0.002109s"];
    "pandas.core.generic.Series._construct_axes_from_arguments" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._construct_axes_from_arguments\ncalls: 1\ntime: 0.000062s"];
    "pandas.core.missing.clean_reindex_fill_method" [color = "#e5e5e5ff", label = "pandas.core.missing.clean_reindex_fill_method\ncalls: 1\ntime: 0.000048s"];
    "pandas.core.missing.clean_fill_method" [color = "#e5e5e5ff", label = "pandas.core.missing.clean_fill_method\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.generic.Series._consolidate_inplace" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._consolidate_inplace\ncalls: 1\ntime: 0.000204s"];
    "pandas.core.generic.Series._protect_consolidate" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._protect_consolidate\ncalls: 1\ntime: 0.000159s"];
    "pandas.core.generic.Series.f" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.f\ncalls: 1\ntime: 0.000113s"];
    "pandas.core.internals.managers.SingleBlockManager.consolidate" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.consolidate\ncalls: 1\ntime: 0.000048s"];
    "pandas.core.internals.managers.SingleBlockManager.is_consolidated" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.is_consolidated\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.generic.Series.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.<genexpr>\ncalls: 2\ntime: 0.001482s"];
    "pandas.core.generic.Series._get_axis" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._get_axis\ncalls: 1\ntime: 0.000055s"];
    "pandas.core.generic._get_axis_name" [color = "#e5e5e5ff", label = "pandas.core.generic._get_axis_name\ncalls: 23\ntime: 0.000185s"];
    "pandas.core.indexes.base.Index.identical" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.identical\ncalls: 1\ntime: 0.001335s"];
    "pandas.core.indexes.base.Index.equals" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.equals\ncalls: 5\ntime: 0.002011s"];
    "pandas.core.indexes.base.Index.is_" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.is_\ncalls: 5\ntime: 0.000022s"];
    "pandas.core.indexes.base.Index.dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.dtype\ncalls: 4\ntime: 0.000015s"];
    "pandas.core.indexes.base.Index._internal_get_values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._internal_get_values\ncalls: 4\ntime: 0.000087s"];
    "pandas.core.dtypes.missing.array_equivalent" [color = "#e5e5e5ff", label = "pandas.core.dtypes.missing.array_equivalent\ncalls: 7\ntime: 0.001271s"];
    "pandas.core.dtypes.common.is_string_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_string_dtype\ncalls: 6\ntime: 0.002310s"];
    "pandas.core.dtypes.common._is_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common._is_dtype\ncalls: 10\ntime: 0.002348s"];
    "pandas.core.dtypes.common.condition" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.condition\ncalls: 6\ntime: 0.001835s"];
    "pandas.core.dtypes.common.is_excluded_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_excluded_dtype\ncalls: 6\ntime: 0.001703s"];
    "pandas.core.dtypes.common.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.<genexpr>\ncalls: 18\ntime: 0.001409s"];
    "pandas.core.indexes.base.Index.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.<genexpr>\ncalls: 2\ntime: 0.000084s"];
    "pandas.core.indexes.base.Index.name" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.name\ncalls: 6\ntime: 0.000022s"];
    "pandas.core.series.Series.isna" [color = "#e5e5e5ff", label = "pandas.core.series.Series.isna\ncalls: 1\ntime: 0.004650s"];
    "pandas.core.generic.Series.isna" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.isna\ncalls: 1\ntime: 0.004602s"];
    "pandas.core.dtypes.missing.isna" [color = "#e5e5e5ff", label = "pandas.core.dtypes.missing.isna\ncalls: 22\ntime: 0.007501s"];
    "pandas.core.dtypes.missing._isna_new" [color = "#e5e5e5ff", label = "pandas.core.dtypes.missing._isna_new\ncalls: 22\ntime: 0.007097s"];
    "pandas.core.dtypes.missing._isna_ndarraylike" [color = "#e5e5e5ff", label = "pandas.core.dtypes.missing._isna_ndarraylike\ncalls: 4\ntime: 0.004730s"];
    "pandas.core.series.Series.dtype" [color = "#e5e5e5ff", label = "pandas.core.series.Series.dtype\ncalls: 36\ntime: 0.001935s"];
    "pandas.core.internals.managers.SingleBlockManager.dtype" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.dtype\ncalls: 36\ntime: 0.001330s"];
    "pandas.core.internals.managers.SingleBlockManager._block" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager._block\ncalls: 67\ntime: 0.000244s"];
    "pandas.core.internals.blocks.ObjectBlock.dtype" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.dtype\ncalls: 19\ntime: 0.000072s"];
    "pandas.core.series.Series.values" [color = "#e5e5e5ff", label = "pandas.core.series.Series.values\ncalls: 3\ntime: 0.000208s"];
    "pandas.core.internals.managers.SingleBlockManager.external_values" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.external_values\ncalls: 3\ntime: 0.000135s"];
    "pandas.core.internals.blocks.ObjectBlock.external_values" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.external_values\ncalls: 3\ntime: 0.000011s"];
    "pandas.core.dtypes.common.is_string_like_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_string_like_dtype\ncalls: 4\ntime: 0.000260s"];
    "pandas.core.series.Series._constructor" [color = "#e5e5e5ff", label = "pandas.core.series.Series._constructor\ncalls: 15\ntime: 0.000054s"];
    "pandas.core.dtypes.cast.maybe_castable" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.maybe_castable\ncalls: 21\ntime: 0.001590s"];
    "pandas.core.internals.blocks.BoolBlock.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock.__init__\ncalls: 14\ntime: 0.000908s"];
    "pandas.core.internals.blocks.BoolBlock._check_ndim" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock._check_ndim\ncalls: 14\ntime: 0.000087s"];
    "pandas.core.internals.blocks.BoolBlock.mgr_locs" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock.mgr_locs\ncalls: 28\ntime: 0.000153s"];
    "pandas.core.generic.Series.__finalize__" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.__finalize__\ncalls: 14\ntime: 0.001173s"];
    "pandas.core.generic.Series.attrs" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.attrs\ncalls: 14\ntime: 0.000068s"];
    "pandas.core.generic.Series.logical_func" [color = "#e5e5e5ff", label = "pandas.core.generic.Series.logical_func\ncalls: 1\ntime: 0.001630s"];
    "pandas.compat.numpy.function.CompatValidator.__call__" [color = "#e5e5e5ff", label = "pandas.compat.numpy.function.CompatValidator.__call__\ncalls: 6\ntime: 0.000026s"];
    "pandas.core.series.Series._reduce" [color = "#e5e5e5ff", label = "pandas.core.series.Series._reduce\ncalls: 1\ntime: 0.001526s"];
    "pandas.core.series.Series._values" [color = "#e5e5e5ff", label = "pandas.core.series.Series._values\ncalls: 4\ntime: 0.000249s"];
    "pandas.core.internals.managers.SingleBlockManager.internal_values" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.internal_values\ncalls: 4\ntime: 0.000165s"];
    "pandas.core.internals.blocks.BoolBlock.internal_values" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock.internal_values\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.generic._get_axis_number" [color = "#e5e5e5ff", label = "pandas.core.generic._get_axis_number\ncalls: 8\ntime: 0.000063s"];
    "pandas.core.nanops.nanany" [color = "#e5e5e5ff", label = "pandas.core.nanops.nanany\ncalls: 1\ntime: 0.000843s"];
    "pandas.core.nanops._get_values" [color = "#e5e5e5ff", label = "pandas.core.nanops._get_values\ncalls: 1\ntime: 0.000746s"];
    "pandas.core.nanops._maybe_get_mask" [color = "#e5e5e5ff", label = "pandas.core.nanops._maybe_get_mask\ncalls: 1\ntime: 0.000114s"];
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype\ncalls: 1\ntime: 0.000086s"];
    "pandas.core.nanops._na_ok_dtype" [color = "#e5e5e5ff", label = "pandas.core.nanops._na_ok_dtype\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.nanops._get_fill_value" [color = "#e5e5e5ff", label = "pandas.core.nanops._get_fill_value\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.internals.construction.arrays_to_mgr" [color = "#e5e5e5ff", label = "pandas.core.internals.construction.arrays_to_mgr\ncalls: 1\ntime: 0.021175s"];
    "pandas.core.internals.construction._homogenize" [color = "#e5e5e5ff", label = "pandas.core.internals.construction._homogenize\ncalls: 1\ntime: 0.007888s"];
    "pandas.core.base.Series.__iter__" [color = "#e5e5e5ff", label = "pandas.core.base.Series.__iter__\ncalls: 1\ntime: 0.000308s"];
    "pandas.core.internals.blocks.ObjectBlock.internal_values" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.internal_values\ncalls: 3\ntime: 0.000010s"];
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.maybe_infer_to_datetimelike\ncalls: 7\ntime: 0.001975s"];
    "pandas.core.dtypes.cast.construct_1d_ndarray_preserving_na" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.construct_1d_ndarray_preserving_na\ncalls: 7\ntime: 0.000057s"];
    "pandas.core.indexes.range.RangeIndex.__len__" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.__len__\ncalls: 58\ntime: 0.000218s"];
    "pandas.core.internals.managers.create_block_manager_from_arrays" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.create_block_manager_from_arrays\ncalls: 1\ntime: 0.009122s"];
    "pandas.core.internals.managers.form_blocks" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.form_blocks\ncalls: 1\ntime: 0.007478s"];
    "pandas.core.indexes.base.Index.__getitem__" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.__getitem__\ncalls: 10\ntime: 0.000367s"];
    "pandas.core.common.cast_scalar_indexer" [color = "#e5e5e5ff", label = "pandas.core.common.cast_scalar_indexer\ncalls: 10\ntime: 0.000057s"];
    "pandas.core.internals.managers._multi_blockify" [color = "#e5e5e5ff", label = "pandas.core.internals.managers._multi_blockify\ncalls: 1\ntime: 0.001151s"];
    "pandas.core.internals.managers.<lambda>" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.<lambda>\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.internals.managers._stack_arrays" [color = "#e5e5e5ff", label = "pandas.core.internals.managers._stack_arrays\ncalls: 2\ntime: 0.000779s"];
    "pandas.core.internals.managers._shape_compat" [color = "#e5e5e5ff", label = "pandas.core.internals.managers._shape_compat\ncalls: 2\ntime: 0.000048s"];
    "pandas.core.internals.managers._asarray_compat" [color = "#e5e5e5ff", label = "pandas.core.internals.managers._asarray_compat\ncalls: 6\ntime: 0.000230s"];
    "pandas.core.internals.blocks.IntBlock.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.__init__\ncalls: 8\ntime: 0.000658s"];
    "pandas.core.internals.blocks.IntBlock._check_ndim" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock._check_ndim\ncalls: 8\ntime: 0.000050s"];
    "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.mgr_locs\ncalls: 43\ntime: 0.000319s"];
    "numpy.core._asarray.require" [color = "#e5e5e5ff", label = "numpy.core._asarray.require\ncalls: 2\ntime: 0.000169s"];
    "numpy.core._asarray.<setcomp>" [color = "#e5e5e5ff", label = "numpy.core._asarray.<setcomp>\ncalls: 2\ntime: 0.000015s"];
    "pandas.core.internals.managers._simple_blockify" [color = "#e5e5e5ff", label = "pandas.core.internals.managers._simple_blockify\ncalls: 1\ntime: 0.001391s"];
    "pandas.core.internals.managers.BlockManager.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.__init__\ncalls: 8\ntime: 0.008471s"];
    "pandas.core.internals.managers.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.<listcomp>\ncalls: 25\ntime: 0.015728s"];
    "pandas.core.internals.managers.BlockManager.ndim" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.ndim\ncalls: 28\ntime: 0.000101s"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager._verify_integrity\ncalls: 7\ntime: 0.001923s"];
    "pandas.core.internals.managers.BlockManager.shape" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.shape\ncalls: 31\ntime: 0.002702s"];
    "pandas.core.internals.managers.<genexpr>" [color = "#e4e5e5ff", label = "pandas.core.internals.managers.<genexpr>\ncalls: 114\ntime: 0.001633s"];
    "pandas.core.internals.blocks.IntBlock.shape" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.shape\ncalls: 7\ntime: 0.000026s"];
    "pandas.core.internals.blocks.ObjectBlock.shape" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.shape\ncalls: 7\ntime: 0.000024s"];
    "pandas.core.internals.managers.BlockManager.items" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.items\ncalls: 17\ntime: 0.000062s"];
    "pandas.core.internals.managers.BlockManager._consolidate_check" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager._consolidate_check\ncalls: 8\ntime: 0.002741s"];
    "pandas.core.internals.blocks.IntBlock.ftype" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.ftype\ncalls: 8\ntime: 0.001437s"];
    "pandas.core.internals.blocks.IntBlock.dtype" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.dtype\ncalls: 13\ntime: 0.000046s"];
    "numpy.core._dtype.__str__" [color = "#e5e5e5ff", label = "numpy.core._dtype.__str__\ncalls: 16\ntime: 0.001600s"];
    "pandas.core.internals.blocks.ObjectBlock.ftype" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.ftype\ncalls: 8\ntime: 0.000832s"];
    "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs\ncalls: 8\ntime: 0.002444s"];
    "pandas.core.internals.managers.BlockManager._consolidate_inplace" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager._consolidate_inplace\ncalls: 12\ntime: 0.000266s"];
    "pandas.core.internals.managers.BlockManager.is_consolidated" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.is_consolidated\ncalls: 19\ntime: 0.000087s"];
    "pandas.core.generic.DataFrame.__init__" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.__init__\ncalls: 8\ntime: 0.000136s"];
    "pandas.io.parsers.TextFileReader.close" [color = "#e5e5e5ff", label = "pandas.io.parsers.TextFileReader.close\ncalls: 1\ntime: 0.000073s"];
    "pandas.io.parsers.CParserWrapper.close" [color = "#e5e5e5ff", label = "pandas.io.parsers.CParserWrapper.close\ncalls: 1\ntime: 0.000032s"];
    "pandas.core.indexing.DataFrame.loc" [color = "#e5e5e5ff", label = "pandas.core.indexing.DataFrame.loc\ncalls: 5\ntime: 0.000021s"];
    "pandas.core.frame.DataFrame.__getitem__" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame.__getitem__\ncalls: 11\ntime: 0.006071s"];
    "pandas.core.common.apply_if_callable" [color = "#e5e5e5ff", label = "pandas.core.common.apply_if_callable\ncalls: 18\ntime: 0.000093s"];
    "pandas.core.indexes.base.Index.is_unique" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.is_unique\ncalls: 2\ntime: 0.000429s"];
    "pandas.core.indexes.base.Index._engine" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._engine\ncalls: 2\ntime: 0.000261s"];
    "pandas.core.base.Index._ndarray_values" [color = "#e5e5e5ff", label = "pandas.core.base.Index._ndarray_values\ncalls: 2\ntime: 0.000151s"];
    "pandas.core.indexes.base.<lambda>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.<lambda>\ncalls: 3\ntime: 0.000011s"];
    "pandas.core.indexes.base.Index.__contains__" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.__contains__\ncalls: 13\ntime: 0.000117s"];
    "pandas.core.indexes.base.Index.nlevels" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.nlevels\ncalls: 12\ntime: 0.000040s"];
    "pandas.core.generic.DataFrame._get_item_cache" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._get_item_cache\ncalls: 11\ntime: 0.004138s"];
    "pandas.core.internals.managers.BlockManager.get" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.get\ncalls: 4\ntime: 0.001966s"];
    "pandas.core.indexes.base.Index.get_loc" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.get_loc\ncalls: 9\ntime: 0.000127s"];
    "pandas.core.internals.managers.BlockManager.iget" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.iget\ncalls: 4\ntime: 0.001318s"];
    "pandas.core.internals.blocks.ObjectBlock.iget" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.iget\ncalls: 4\ntime: 0.000035s"];
    "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.make_block_same_class\ncalls: 11\ntime: 0.001771s"];
    "pandas.core.frame.DataFrame._box_item_values" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._box_item_values\ncalls: 4\ntime: 0.001539s"];
    "pandas.core.frame.DataFrame._box_col_values" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._box_col_values\ncalls: 4\ntime: 0.001117s"];
    "pandas.core.indexes.numeric.RangeIndex.is_all_dates" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.RangeIndex.is_all_dates\ncalls: 15\ntime: 0.000051s"];
    "pandas.core.generic.Series._set_as_cached" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._set_as_cached\ncalls: 4\ntime: 0.000135s"];
    "pandas.core.ops.common.Series.new_method" [color = "#e5e5e5ff", label = "pandas.core.ops.common.Series.new_method\ncalls: 13\ntime: 0.042351s"];
    "pandas.core.ops.Series.wrapper" [color = "#e5e5e5ff", label = "pandas.core.ops.Series.wrapper\ncalls: 13\ntime: 0.040793s"];
    "pandas.core.ops.get_op_result_name" [color = "#e5e5e5ff", label = "pandas.core.ops.get_op_result_name\ncalls: 13\ntime: 0.000995s"];
    "pandas.core.series.Series.array" [color = "#e5e5e5ff", label = "pandas.core.series.Series.array\ncalls: 23\ntime: 0.001905s"];
    "pandas.core.internals.blocks.ObjectBlock.array_values" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.array_values\ncalls: 10\ntime: 0.000539s"];
    "pandas.core.arrays.numpy_.PandasArray.__init__" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasArray.__init__\ncalls: 23\ntime: 0.000723s"];
    "pandas.core.arrays.numpy_.PandasDtype.__init__" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasDtype.__init__\ncalls: 23\ntime: 0.000155s"];
    "pandas.core.arrays.numpy_.PandasArray.to_numpy" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasArray.to_numpy\ncalls: 18\ntime: 0.000481s"];
    "pandas.core.ops.array_ops.comparison_op" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.comparison_op\ncalls: 9\ntime: 0.006333s"];
    "pandas.core.ops.dispatch.should_extension_dispatch" [color = "#e5e5e5ff", label = "pandas.core.ops.dispatch.should_extension_dispatch\ncalls: 13\ntime: 0.004560s"];
    "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY\ncalls: 9\ntime: 0.002831s"];
    "pandas.core.ops._construct_result" [color = "#e5e5e5ff", label = "pandas.core.ops._construct_result\ncalls: 13\ntime: 0.023335s"];
    "pandas.core.indexing._LocIndexer.__getitem__" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocIndexer.__getitem__\ncalls: 5\ntime: 0.040565s"];
    "pandas.core.indexing._LocIndexer._getitem_axis" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocIndexer._getitem_axis\ncalls: 5\ntime: 0.040301s"];
    "pandas.core.generic.Series._info_axis" [color = "#e5e5e5ff", label = "pandas.core.generic.Series._info_axis\ncalls: 5\ntime: 0.000022s"];
    "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name\ncalls: 5\ntime: 0.000848s"];
    "pandas.core.indexes.base.RangeIndex.is_object" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex.is_object\ncalls: 5\ntime: 0.000513s"];
    "pandas.core.indexes.range.RangeIndex.dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.dtype\ncalls: 5\ntime: 0.000024s"];
    "pandas.core.indexes.base.RangeIndex.is_categorical" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex.is_categorical\ncalls: 5\ntime: 0.000128s"];
    "pandas.core.indexes.numeric.RangeIndex.inferred_type" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.RangeIndex.inferred_type\ncalls: 5\ntime: 0.000018s"];
    "pandas.core.generic.DataFrame._get_axis" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._get_axis\ncalls: 22\ntime: 0.000588s"];
    "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key\ncalls: 5\ntime: 0.000132s"];
    "pandas.core.common.is_bool_indexer" [color = "#e5e5e5ff", label = "pandas.core.common.is_bool_indexer\ncalls: 5\ntime: 0.001355s"];
    "pandas.core.internals.blocks.BoolBlock.dtype" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock.dtype\ncalls: 30\ntime: 0.000106s"];
    "pandas.core.indexing._LocIndexer._getbool_axis" [color = "#e5e5e5ff", label = "pandas.core.indexing._LocIndexer._getbool_axis\ncalls: 5\ntime: 0.036871s"];
    "pandas.core.indexing.check_bool_indexer" [color = "#e5e5e5ff", label = "pandas.core.indexing.check_bool_indexer\ncalls: 5\ntime: 0.005121s"];
    "pandas.core.indexes.range.RangeIndex.equals" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.equals\ncalls: 9\ntime: 0.000050s"];
    "pandas.core.indexers.check_array_indexer" [color = "#e5e5e5ff", label = "pandas.core.indexers.check_array_indexer\ncalls: 5\ntime: 0.003588s"];
    "pandas.core.dtypes.inference.is_array_like" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.is_array_like\ncalls: 5\ntime: 0.000559s"];
    "pandas.core.series.Series.__array__" [color = "#e5e5e5ff", label = "pandas.core.series.Series.__array__\ncalls: 5\ntime: 0.000798s"];
    "pandas.core.internals.blocks.BoolBlock.array_values" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.BoolBlock.array_values\ncalls: 13\ntime: 0.000605s"];
    "pandas.core.arrays.numpy_.PandasArray.__array__" [color = "#e5e5e5ff", label = "pandas.core.arrays.numpy_.PandasArray.__array__\ncalls: 5\ntime: 0.000113s"];
    "pandas.core.generic.DataFrame._take_with_is_copy" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._take_with_is_copy\ncalls: 5\ntime: 0.031273s"];
    "pandas.core.generic.DataFrame.take" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.take\ncalls: 5\ntime: 0.028929s"];
    "pandas.core.generic.DataFrame._consolidate_inplace" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._consolidate_inplace\ncalls: 7\ntime: 0.000709s"];
    "pandas.core.generic.DataFrame._protect_consolidate" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._protect_consolidate\ncalls: 7\ntime: 0.000576s"];
    "pandas.core.generic.DataFrame.f" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.f\ncalls: 7\ntime: 0.000427s"];
    "pandas.core.internals.managers.BlockManager.consolidate" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.consolidate\ncalls: 7\ntime: 0.000155s"];
    "pandas.core.generic.DataFrame.__setattr__" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.__setattr__\ncalls: 12\ntime: 0.000096s"];
    "pandas.core.generic._get_block_manager_axis" [color = "#e5e5e5ff", label = "pandas.core.generic._get_block_manager_axis\ncalls: 6\ntime: 0.000175s"];
    "pandas.core.internals.managers.BlockManager.take" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.take\ncalls: 5\ntime: 0.026928s"];
    "pandas.core.indexers.maybe_convert_indices" [color = "#e5e5e5ff", label = "pandas.core.indexers.maybe_convert_indices\ncalls: 5\ntime: 0.000418s"];
    "pandas.core.indexes.base.RangeIndex.take" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex.take\ncalls: 5\ntime: 0.008208s"];
    "pandas.core.indexes.base.RangeIndex.values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex.values\ncalls: 10\ntime: 0.000371s"];
    "pandas.core.indexes.range.RangeIndex._data" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex._data\ncalls: 11\ntime: 0.000185s"];
    "pandas.core.indexes.range.RangeIndex.start" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.start\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexes.range.RangeIndex.stop" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.stop\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.indexes.range.RangeIndex.step" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex.step\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.indexes.range.RangeIndex._shallow_copy" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex._shallow_copy\ncalls: 5\ntime: 0.007665s"];
    "pandas.core.indexes.range.RangeIndex._int64index" [color = "#e5e5e5ff", label = "pandas.core.indexes.range.RangeIndex._int64index\ncalls: 1\ntime: 0.000130s"];
    "pandas.core.indexes.base.Int64Index._reset_identity" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._reset_identity\ncalls: 9\ntime: 0.000044s"];
    "pandas.core.indexes.numeric.Int64Index._shallow_copy" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Int64Index._shallow_copy\ncalls: 7\ntime: 0.007679s"];
    "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer\ncalls: 5\ntime: 0.007154s"];
    "pandas.core.indexes.base.Int64Index._get_attributes_dict" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._get_attributes_dict\ncalls: 7\ntime: 0.000300s"];
    "pandas.core.indexes.base.Int64Index.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.<dictcomp>\ncalls: 7\ntime: 0.000156s"];
    "pandas.core.indexes.base.Int64Index.name" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.name\ncalls: 10\ntime: 0.000035s"];
    "pandas.core.indexes.numeric.__new__" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.__new__\ncalls: 6\ntime: 0.001405s"];
    "pandas.core.dtypes.common.is_dtype_equal" [color = "#e5e5e5ff", label = "pandas.core.dtypes.common.is_dtype_equal\ncalls: 16\ntime: 0.000697s"];
    "pandas.core.internals.managers.BlockManager.reindex_indexer" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.reindex_indexer\ncalls: 5\ntime: 0.016949s"];
    "pandas.core.internals.blocks.IntBlock.fill_value" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.fill_value\ncalls: 5\ntime: 0.000018s"];
    "pandas.core.internals.blocks.IntBlock.take_nd" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.take_nd\ncalls: 5\ntime: 0.005713s"];
    "pandas.core.algorithms.take_nd" [color = "#e5e5e5ff", label = "pandas.core.algorithms.take_nd\ncalls: 10\ntime: 0.007932s"];
    "pandas.core.dtypes.cast.maybe_promote" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.maybe_promote\ncalls: 10\ntime: 0.002778s"];
    "pandas.core.dtypes.cast._ensure_dtype_type" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast._ensure_dtype_type\ncalls: 10\ntime: 0.000633s"];
    "pandas.core.algorithms._get_take_nd_function" [color = "#e5e5e5ff", label = "pandas.core.algorithms._get_take_nd_function\ncalls: 10\ntime: 0.002019s"];
    "pandas.core.internals.blocks.IntBlock.make_block_same_class" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.make_block_same_class\ncalls: 7\ntime: 0.000895s"];
    "pandas.core.internals.blocks.ObjectBlock.fill_value" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.fill_value\ncalls: 5\ntime: 0.000017s"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.take_nd\ncalls: 5\ntime: 0.005041s"];
    "pandas.core.indexes.base.Int64Index.__len__" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.__len__\ncalls: 37\ntime: 0.000135s"];
    "pandas.core.frame.DataFrame._constructor" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._constructor\ncalls: 7\ntime: 0.000025s"];
    "pandas.core.generic.DataFrame._init_mgr" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._init_mgr\ncalls: 7\ntime: 0.000099s"];
    "pandas.core.generic.DataFrame.__finalize__" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.__finalize__\ncalls: 7\ntime: 0.000168s"];
    "pandas.core.generic.DataFrame.attrs" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.attrs\ncalls: 6\ntime: 0.000028s"];
    "pandas.core.indexes.base.Int64Index.equals" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.equals\ncalls: 5\ntime: 0.001507s"];
    "pandas.core.indexes.base.Int64Index.is_" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.is_\ncalls: 5\ntime: 0.000021s"];
    "pandas.core.indexes.base.Int64Index.dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.dtype\ncalls: 6\ntime: 0.000023s"];
    "pandas.core.indexes.base.Int64Index._internal_get_values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._internal_get_values\ncalls: 5\ntime: 0.000101s"];
    "pandas.core.indexes.base.Int64Index.values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.values\ncalls: 8\ntime: 0.000036s"];
    "pandas.core.indexes.base.RangeIndex._internal_get_values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.RangeIndex._internal_get_values\ncalls: 5\ntime: 0.000180s"];
    "pandas.core.generic.DataFrame._set_is_copy" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._set_is_copy\ncalls: 5\ntime: 0.000144s"];
    "pandas.core.ops._align_method_SERIES" [color = "#e5e5e5ff", label = "pandas.core.ops._align_method_SERIES\ncalls: 4\ntime: 0.000178s"];
    "pandas.core.ops._maybe_match_name" [color = "#e5e5e5ff", label = "pandas.core.ops._maybe_match_name\ncalls: 4\ntime: 0.000290s"];
    "pandas.core.ops.array_ops.logical_op" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.logical_op\ncalls: 4\ntime: 0.004580s"];
    "pandas.core.ops.array_ops.fill_bool" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.fill_bool\ncalls: 8\ntime: 0.000540s"];
    "pandas.core.ops.array_ops.na_logical_op" [color = "#e5e5e5ff", label = "pandas.core.ops.array_ops.na_logical_op\ncalls: 4\ntime: 0.000051s"];
    "pandas.core.generic.DataFrame.copy" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.copy\ncalls: 1\ntime: 0.002653s"];
    "pandas.core.internals.managers.BlockManager.copy" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.copy\ncalls: 1\ntime: 0.002437s"];
    "pandas.core.internals.managers.copy_func" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.copy_func\ncalls: 2\ntime: 0.000530s"];
    "pandas.core.indexes.base.Index.view" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.view\ncalls: 1\ntime: 0.000244s"];
    "pandas.core.indexes.base.Index._shallow_copy" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._shallow_copy\ncalls: 1\ntime: 0.000198s"];
    "pandas.core.indexes.base.Index._get_attributes_dict" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._get_attributes_dict\ncalls: 1\ntime: 0.000049s"];
    "pandas.core.indexes.base.Index.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index.<dictcomp>\ncalls: 1\ntime: 0.000025s"];
    "pandas.core.indexes.base.Int64Index.view" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.view\ncalls: 1\ntime: 0.000221s"];
    "pandas.core.indexes.base.Int64Index._shallow_copy" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._shallow_copy\ncalls: 2\ntime: 0.000358s"];
    "pandas.core.internals.managers.BlockManager.apply" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.apply\ncalls: 1\ntime: 0.001750s"];
    "pandas.core.internals.managers.<dictcomp>" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.<dictcomp>\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.internals.blocks.IntBlock.copy" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.copy\ncalls: 1\ntime: 0.000197s"];
    "pandas.core.internals.blocks._extend_blocks" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks._extend_blocks\ncalls: 2\ntime: 0.000090s"];
    "pandas.core.internals.blocks.ObjectBlock.copy" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.copy\ncalls: 1\ntime: 0.000400s"];
    "pandas.core.indexes.numeric.Int64Index.is_all_dates" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Int64Index.is_all_dates\ncalls: 3\ntime: 0.000010s"];
    "pandas.core.accessor.CachedAccessor.__get__" [color = "#e5e5e5ff", label = "pandas.core.accessor.CachedAccessor.__get__\ncalls: 1\ntime: 0.001210s"];
    "pandas.core.strings.StringMethods.__init__" [color = "#e5e5e5ff", label = "pandas.core.strings.StringMethods.__init__\ncalls: 1\ntime: 0.001153s"];
    "pandas.core.strings._validate" [color = "#e5e5e5ff", label = "pandas.core.strings._validate\ncalls: 1\ntime: 0.000534s"];
    "pandas.core.base.StringMethods.__setattr__" [color = "#e5e5e5ff", label = "pandas.core.base.StringMethods.__setattr__\ncalls: 5\ntime: 0.000034s"];
    "pandas.core.base.StringMethods._freeze" [color = "#e5e5e5ff", label = "pandas.core.base.StringMethods._freeze\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.strings.StringMethods.wrapper" [color = "#e5e5e5ff", label = "pandas.core.strings.StringMethods.wrapper\ncalls: 1\ntime: 0.089882s"];
    "pandas.core.strings.StringMethods.split" [color = "#e5e5e5ff", label = "pandas.core.strings.StringMethods.split\ncalls: 1\ntime: 0.089837s"];
    "pandas.core.strings.str_split" [color = "#e5e5e5ff", label = "pandas.core.strings.str_split\ncalls: 1\ntime: 0.087172s"];
    "pandas.core.strings._na_map" [color = "#e5e5e5ff", label = "pandas.core.strings._na_map\ncalls: 1\ntime: 0.087116s"];
    "pandas.core.strings._map_object" [color = "#e5e5e5ff", label = "pandas.core.strings._map_object\ncalls: 1\ntime: 0.086946s"];
    "pandas.core.series.Series.__len__" [color = "#e5e5e5ff", label = "pandas.core.series.Series.__len__\ncalls: 4\ntime: 0.000251s"];
    "pandas.core.internals.managers.SingleBlockManager.__len__" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.__len__\ncalls: 4\ntime: 0.000153s"];
    "pandas.core.internals.managers.SingleBlockManager.items" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.items\ncalls: 4\ntime: 0.000014s"];
    "all" [color = "#e5e5e5ff", label = "all\ncalls: 1\ntime: 0.000187s"];
    "numpy.core.fromnumeric._all_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric._all_dispatcher\ncalls: 1\ntime: 0.000005s"];
    "numpy.core.fromnumeric.all" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.all\ncalls: 1\ntime: 0.000081s"];
    "pandas.core.strings.<lambda>" [color = "#bfd2e5ff", label = "pandas.core.strings.<lambda>\ncalls: 5286\ntime: 0.020278s"];
    "numpy.core.numeric.full" [color = "#e5e5e5ff", label = "numpy.core.numeric.full\ncalls: 1\ntime: 0.000067s"];
    "pandas.core.strings.StringMethods._wrap_result" [color = "#e5e5e5ff", label = "pandas.core.strings.StringMethods._wrap_result\ncalls: 1\ntime: 0.002558s"];
    "pandas.core.series.Series.__getitem__" [color = "#e5e5e5ff", label = "pandas.core.series.Series.__getitem__\ncalls: 1\ntime: 0.002598s"];
    "pandas.core.indexes.base.Int64Index.get_value" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.get_value\ncalls: 1\ntime: 0.000922s"];
    "pandas.core.series.Series._internal_get_values" [color = "#e5e5e5ff", label = "pandas.core.series.Series._internal_get_values\ncalls: 1\ntime: 0.000107s"];
    "pandas.core.internals.managers.SingleBlockManager.get_values" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.SingleBlockManager.get_values\ncalls: 1\ntime: 0.000067s"];
    "pandas.core.internals.blocks.ObjectBlock.to_dense" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.to_dense\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer\ncalls: 1\ntime: 0.000140s"];
    "pandas.core.indexes.base.Int64Index._maybe_cast_indexer" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._maybe_cast_indexer\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.indexes.base.Int64Index._convert_scalar_indexer" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._convert_scalar_indexer\ncalls: 1\ntime: 0.000050s"];
    "pandas.core.indexes.base.Int64Index._engine" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._engine\ncalls: 1\ntime: 0.000120s"];
    "pandas.core.base.Int64Index._ndarray_values" [color = "#e5e5e5ff", label = "pandas.core.base.Int64Index._ndarray_values\ncalls: 1\ntime: 0.000082s"];
    "pandas.core.indexes.base.Int64Index.get_loc" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.get_loc\ncalls: 1\ntime: 0.000013s"];
    "pandas.core.frame.DataFrame.__setitem__" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame.__setitem__\ncalls: 1\ntime: 0.003329s"];
    "pandas.core.indexing.convert_to_index_sliceable" [color = "#e5e5e5ff", label = "pandas.core.indexing.convert_to_index_sliceable\ncalls: 1\ntime: 0.000050s"];
    "pandas.core.frame.DataFrame._set_item" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._set_item\ncalls: 1\ntime: 0.003146s"];
    "pandas.core.frame.DataFrame._ensure_valid_index" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._ensure_valid_index\ncalls: 1\ntime: 0.000024s"];
    "pandas.core.frame.DataFrame._sanitize_column" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame._sanitize_column\ncalls: 1\ntime: 0.002242s"];
    "pandas.core.dtypes.inference.is_sequence" [color = "#e5e5e5ff", label = "pandas.core.dtypes.inference.is_sequence\ncalls: 1\ntime: 0.000008s"];
    "pandas.core.dtypes.cast.infer_dtype_from_scalar" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.infer_dtype_from_scalar\ncalls: 2\ntime: 0.000025s"];
    "pandas.core.dtypes.cast.cast_scalar_to_array" [color = "#e5e5e5ff", label = "pandas.core.dtypes.cast.cast_scalar_to_array\ncalls: 1\ntime: 0.000066s"];
    "atleast_2d" [color = "#e5e5e5ff", label = "atleast_2d\ncalls: 1\ntime: 0.000140s"];
    "numpy.core.shape_base._atleast_2d_dispatcher" [color = "#e5e5e5ff", label = "numpy.core.shape_base._atleast_2d_dispatcher\ncalls: 1\ntime: 0.000004s"];
    "numpy.core.shape_base.atleast_2d" [color = "#e5e5e5ff", label = "numpy.core.shape_base.atleast_2d\ncalls: 1\ntime: 0.000041s"];
    "pandas.core.generic.DataFrame._set_item" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._set_item\ncalls: 1\ntime: 0.000641s"];
    "pandas.core.internals.managers.BlockManager.set" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager.set\ncalls: 1\ntime: 0.000526s"];
    "pandas.core.internals.blocks.ObjectBlock.should_store" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.should_store\ncalls: 1\ntime: 0.000054s"];
    "pandas.core.internals.managers.value_getitem" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.value_getitem\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.internals.blocks.ObjectBlock.set" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.set\ncalls: 1\ntime: 0.000033s"];
    "pandas.core.generic.DataFrame._clear_item_cache" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._clear_item_cache\ncalls: 1\ntime: 0.000010s"];
    "pandas.core.frame.DataFrame.__len__" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame.__len__\ncalls: 1\ntime: 0.000023s"];
    "pandas.core.generic.DataFrame._check_setitem_copy" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._check_setitem_copy\ncalls: 1\ntime: 0.000006s"];
    "pandas.core.reshape.concat.concat" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat.concat\ncalls: 1\ntime: 0.011207s"];
    "pandas.core.reshape.concat._Concatenator.__init__" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator.__init__\ncalls: 1\ntime: 0.004721s"];
    "pandas.core.common.not_none" [color = "#e5e5e5ff", label = "pandas.core.common.not_none\ncalls: 1\ntime: 0.000004s"];
    "pandas.core.generic.DataFrame._consolidate" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame._consolidate\ncalls: 2\ntime: 0.000305s"];
    "pandas.util._validators.validate_bool_kwarg" [color = "#e5e5e5ff", label = "pandas.util._validators.validate_bool_kwarg\ncalls: 2\ntime: 0.000010s"];
    "pandas.core.generic.DataFrame.ndim" [color = "#e5e5e5ff", label = "pandas.core.generic.DataFrame.ndim\ncalls: 4\ntime: 0.000079s"];
    "pandas.core.reshape.concat.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat.<listcomp>\ncalls: 1\ntime: 0.000132s"];
    "pandas.core.frame.DataFrame.shape" [color = "#e5e5e5ff", label = "pandas.core.frame.DataFrame.shape\ncalls: 2\ntime: 0.000077s"];
    "pandas.core.reshape.concat._Concatenator._get_new_axes" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator._get_new_axes\ncalls: 1\ntime: 0.003727s"];
    "pandas.core.reshape.concat._Concatenator._get_result_dim" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator._get_result_dim\ncalls: 1\ntime: 0.000038s"];
    "pandas.core.reshape.concat._Concatenator.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator.<listcomp>\ncalls: 2\ntime: 0.003618s"];
    "pandas.core.reshape.concat._Concatenator._get_comb_axis" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator._get_comb_axis\ncalls: 1\ntime: 0.000920s"];
    "pandas.core.indexes.api.get_objs_combined_axis" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.get_objs_combined_axis\ncalls: 1\ntime: 0.000824s"];
    "pandas.core.indexes.api.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.<listcomp>\ncalls: 1\ntime: 0.000086s"];
    "pandas.core.indexes.api._get_combined_index" [color = "#e5e5e5ff", label = "pandas.core.indexes.api._get_combined_index\ncalls: 1\ntime: 0.000657s"];
    "pandas.core.indexes.api._get_distinct_objs" [color = "#e5e5e5ff", label = "pandas.core.indexes.api._get_distinct_objs\ncalls: 1\ntime: 0.000020s"];
    "pandas.core.indexes.api.union_indexes" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.union_indexes\ncalls: 1\ntime: 0.000521s"];
    "pandas.core.indexes.api._sanitize_and_check" [color = "#e5e5e5ff", label = "pandas.core.indexes.api._sanitize_and_check\ncalls: 1\ntime: 0.000051s"];
    "pandas.core.indexes.api.<setcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.<setcomp>\ncalls: 2\ntime: 0.000256s"];
    "pandas.core.indexes.api.get_consensus_names" [color = "#e5e5e5ff", label = "pandas.core.indexes.api.get_consensus_names\ncalls: 1\ntime: 0.000309s"];
    "pandas.core.indexes.base.Index._get_names" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Index._get_names\ncalls: 2\ntime: 0.000043s"];
    "pandas.core.common.any_not_none" [color = "#e5e5e5ff", label = "pandas.core.common.any_not_none\ncalls: 2\ntime: 0.000095s"];
    "pandas.core.reshape.concat._Concatenator._get_concat_axis" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator._get_concat_axis\ncalls: 1\ntime: 0.002600s"];
    "pandas.core.reshape.concat._concat_indexes" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._concat_indexes\ncalls: 1\ntime: 0.002457s"];
    "pandas.core.indexes.base.Int64Index.append" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.append\ncalls: 1\ntime: 0.002415s"];
    "pandas.core.indexes.base.<setcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.<setcomp>\ncalls: 1\ntime: 0.000041s"];
    "pandas.core.indexes.base.Int64Index._concat" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._concat\ncalls: 1\ntime: 0.002261s"];
    "pandas.core.dtypes.concat.get_dtype_kinds" [color = "#e5e5e5ff", label = "pandas.core.dtypes.concat.get_dtype_kinds\ncalls: 1\ntime: 0.001221s"];
    "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.Int64Index._concat_same_dtype\ncalls: 1\ntime: 0.000949s"];
    "pandas.core.indexes.numeric.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.indexes.numeric.<listcomp>\ncalls: 1\ntime: 0.000068s"];
    "pandas.core.indexes.base.Int64Index._values" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._values\ncalls: 2\ntime: 0.000007s"];
    "pandas.core.indexes.base.Int64Index.rename" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.rename\ncalls: 1\ntime: 0.000473s"];
    "pandas.core.indexes.base.Int64Index.set_names" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index.set_names\ncalls: 1\ntime: 0.000432s"];
    "pandas.core.indexes.base.Int64Index._set_names" [color = "#e5e5e5ff", label = "pandas.core.indexes.base.Int64Index._set_names\ncalls: 1\ntime: 0.000074s"];
    "pandas.core.reshape.concat._Concatenator._maybe_check_integrity" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator._maybe_check_integrity\ncalls: 1\ntime: 0.000005s"];
    "pandas.core.reshape.concat._Concatenator.get_result" [color = "#e5e5e5ff", label = "pandas.core.reshape.concat._Concatenator.get_result\ncalls: 1\ntime: 0.006364s"];
    "pandas.core.internals.managers.concatenate_block_managers" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.concatenate_block_managers\ncalls: 1\ntime: 0.005945s"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.get_mgr_concatenation_plan\ncalls: 2\ntime: 0.000929s"];
    "pandas.core.internals.managers.BlockManager._is_single_block" [color = "#e5e5e5ff", label = "pandas.core.internals.managers.BlockManager._is_single_block\ncalls: 2\ntime: 0.000050s"];
    "pandas.core.internals.concat.JoinUnit.__init__" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.JoinUnit.__init__\ncalls: 4\ntime: 0.000034s"];
    "pandas.core.internals.concat.combine_concat_plans" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.combine_concat_plans\ncalls: 3\ntime: 0.000256s"];
    "pandas.core.internals.concat._next_or_none" [color = "#e5e5e5ff", label = "pandas.core.internals.concat._next_or_none\ncalls: 6\ntime: 0.000042s"];
    "pandas.core.internals.concat.is_uniform_join_units" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.is_uniform_join_units\ncalls: 2\ntime: 0.002411s"];
    "pandas.core.internals.concat.<genexpr>" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.<genexpr>\ncalls: 18\ntime: 0.002096s"];
    "pandas.core.internals.concat.JoinUnit.is_na" [color = "#e5e5e5ff", label = "pandas.core.internals.concat.JoinUnit.is_na\ncalls: 4\ntime: 0.001925s"];
    "pandas.core.internals.blocks.IntBlock.concat_same_type" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.IntBlock.concat_same_type\ncalls: 1\ntime: 0.000281s"];
    "pandas.core.internals.blocks.<listcomp>" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.<listcomp>\ncalls: 2\ntime: 0.000013s"];
    "numpy.core._methods._all" [color = "#e5e5e5ff", label = "numpy.core._methods._all\ncalls: 2\ntime: 0.000023s"];
    "pandas.core.internals.blocks.ObjectBlock.concat_same_type" [color = "#e5e5e5ff", label = "pandas.core.internals.blocks.ObjectBlock.concat_same_type\ncalls: 1\ntime: 0.000592s"];
    "pandas.core.generic._from_axes" [color = "#e5e5e5ff", label = "pandas.core.generic._from_axes\ncalls: 1\ntime: 0.000116s"];
    "multiprocessing.<module>" [color = "#e5e5e5ff", label = "multiprocessing.<module>\ncalls: 1\ntime: 0.017553s"];
    "multiprocessing.context.<module>" [color = "#e5e5e5ff", label = "multiprocessing.context.<module>\ncalls: 1\ntime: 0.013071s"];
    "multiprocessing.process.<module>" [color = "#e5e5e5ff", label = "multiprocessing.process.<module>\ncalls: 1\ntime: 0.000791s"];
    "posixpath.abspath" [color = "#e5e5e5ff", label = "posixpath.abspath\ncalls: 1\ntime: 0.000145s"];
    "posixpath.normpath" [color = "#e5e5e5ff", label = "posixpath.normpath\ncalls: 1\ntime: 0.000052s"];
    "multiprocessing.process.BaseProcess" [color = "#e5e5e5ff", label = "multiprocessing.process.BaseProcess\ncalls: 1\ntime: 0.000033s"];
    "multiprocessing.process.AuthenticationString" [color = "#e5e5e5ff", label = "multiprocessing.process.AuthenticationString\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.process._MainProcess" [color = "#e5e5e5ff", label = "multiprocessing.process._MainProcess\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.process._MainProcess.__init__" [color = "#e5e5e5ff", label = "multiprocessing.process._MainProcess.__init__\ncalls: 1\ntime: 0.000017s"];
    "multiprocessing.reduction.<module>" [color = "#e5e5e5ff", label = "multiprocessing.reduction.<module>\ncalls: 1\ntime: 0.003828s"];
    "multiprocessing.reduction.ForkingPickler" [color = "#e5e5e5ff", label = "multiprocessing.reduction.ForkingPickler\ncalls: 1\ntime: 0.000016s"];
    "multiprocessing.reduction._C" [color = "#e5e5e5ff", label = "multiprocessing.reduction._C\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.reduction.register" [color = "#e5e5e5ff", label = "multiprocessing.reduction.register\ncalls: 6\ntime: 0.000024s"];
    "multiprocessing.reduction.AbstractReducer" [color = "#e5e5e5ff", label = "multiprocessing.reduction.AbstractReducer\ncalls: 1\ntime: 0.000021s"];
    "multiprocessing.context.ProcessError" [color = "#e5e5e5ff", label = "multiprocessing.context.ProcessError\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.context.BufferTooShort" [color = "#e5e5e5ff", label = "multiprocessing.context.BufferTooShort\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.context.TimeoutError" [color = "#e5e5e5ff", label = "multiprocessing.context.TimeoutError\ncalls: 1\ntime: 0.000004s"];
    "multiprocessing.context.AuthenticationError" [color = "#e5e5e5ff", label = "multiprocessing.context.AuthenticationError\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.context.BaseContext" [color = "#e5e5e5ff", label = "multiprocessing.context.BaseContext\ncalls: 1\ntime: 0.000057s"];
    "multiprocessing.context.Process" [color = "#e5e5e5ff", label = "multiprocessing.context.Process\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.context.DefaultContext" [color = "#e5e5e5ff", label = "multiprocessing.context.DefaultContext\ncalls: 1\ntime: 0.000012s"];
    "multiprocessing.context.<genexpr>" [color = "#e5e5e5ff", label = "multiprocessing.context.<genexpr>\ncalls: 37\ntime: 0.000159s"];
    "multiprocessing.context.ForkProcess" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkProcess\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.context.SpawnProcess" [color = "#e5e5e5ff", label = "multiprocessing.context.SpawnProcess\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.context.ForkServerProcess" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkServerProcess\ncalls: 1\ntime: 0.000011s"];
    "multiprocessing.context.ForkContext" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkContext\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.context.SpawnContext" [color = "#e5e5e5ff", label = "multiprocessing.context.SpawnContext\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.context.ForkServerContext" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkServerContext\ncalls: 1\ntime: 0.000007s"];
    "multiprocessing.context.DefaultContext.__init__" [color = "#e5e5e5ff", label = "multiprocessing.context.DefaultContext.__init__\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.<genexpr>" [color = "#e5e5e5ff", label = "multiprocessing.<genexpr>\ncalls: 37\ntime: 0.000213s"];
    "multiprocessing.context.DefaultContext.reducer" [color = "#e5e5e5ff", label = "multiprocessing.context.DefaultContext.reducer\ncalls: 1\ntime: 0.000004s"];
    "multiprocessing.context.DefaultContext.Pool" [color = "#e5e5e5ff", label = "multiprocessing.context.DefaultContext.Pool\ncalls: 1\ntime: 0.171124s"];
    "multiprocessing.pool.<module>" [color = "#e5e5e5ff", label = "multiprocessing.pool.<module>\ncalls: 1\ntime: 0.004657s"];
    "multiprocessing.util.<module>" [color = "#e5e5e5ff", label = "multiprocessing.util.<module>\ncalls: 1\ntime: 0.000539s"];
    "multiprocessing.util.Finalize" [color = "#e5e5e5ff", label = "multiprocessing.util.Finalize\ncalls: 1\ntime: 0.000014s"];
    "multiprocessing.util.ForkAwareThreadLock" [color = "#e5e5e5ff", label = "multiprocessing.util.ForkAwareThreadLock\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.util.ForkAwareLocal" [color = "#e5e5e5ff", label = "multiprocessing.util.ForkAwareLocal\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.pool.RemoteTraceback" [color = "#e5e5e5ff", label = "multiprocessing.pool.RemoteTraceback\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.pool.ExceptionWithTraceback" [color = "#e5e5e5ff", label = "multiprocessing.pool.ExceptionWithTraceback\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.pool.MaybeEncodingError" [color = "#e5e5e5ff", label = "multiprocessing.pool.MaybeEncodingError\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.pool.Pool" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool\ncalls: 1\ntime: 0.000041s"];
    "multiprocessing.pool.ApplyResult" [color = "#e5e5e5ff", label = "multiprocessing.pool.ApplyResult\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.pool.MapResult" [color = "#e5e5e5ff", label = "multiprocessing.pool.MapResult\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.pool.IMapIterator" [color = "#e5e5e5ff", label = "multiprocessing.pool.IMapIterator\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.pool.IMapUnorderedIterator" [color = "#e5e5e5ff", label = "multiprocessing.pool.IMapUnorderedIterator\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.pool.ThreadPool" [color = "#e5e5e5ff", label = "multiprocessing.pool.ThreadPool\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.context.DefaultContext.get_context" [color = "#e5e5e5ff", label = "multiprocessing.context.DefaultContext.get_context\ncalls: 1\ntime: 0.000008s"];
    "multiprocessing.pool.Pool.__init__" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool.__init__\ncalls: 1\ntime: 0.163169s"];
    "multiprocessing.pool.Pool._setup_queues" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool._setup_queues\ncalls: 1\ntime: 0.022248s"];
    "multiprocessing.context.ForkContext.SimpleQueue" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkContext.SimpleQueue\ncalls: 2\ntime: 0.022190s"];
    "multiprocessing.queues.<module>" [color = "#e5e5e5ff", label = "multiprocessing.queues.<module>\ncalls: 1\ntime: 0.011200s"];
    "multiprocessing.connection.<module>" [color = "#e5e5e5ff", label = "multiprocessing.connection.<module>\ncalls: 1\ntime: 0.004845s"];
    "multiprocessing.connection._ConnectionBase" [color = "#e5e5e5ff", label = "multiprocessing.connection._ConnectionBase\ncalls: 1\ntime: 0.000028s"];
    "multiprocessing.connection.Connection" [color = "#e5e5e5ff", label = "multiprocessing.connection.Connection\ncalls: 1\ntime: 0.000019s"];
    "multiprocessing.connection.Listener" [color = "#e5e5e5ff", label = "multiprocessing.connection.Listener\ncalls: 1\ntime: 0.000014s"];
    "multiprocessing.connection.SocketListener" [color = "#e5e5e5ff", label = "multiprocessing.connection.SocketListener\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.connection.ConnectionWrapper" [color = "#e5e5e5ff", label = "multiprocessing.connection.ConnectionWrapper\ncalls: 1\ntime: 0.000007s"];
    "multiprocessing.connection.XmlListener" [color = "#e5e5e5ff", label = "multiprocessing.connection.XmlListener\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.queues.Queue" [color = "#e5e5e5ff", label = "multiprocessing.queues.Queue\ncalls: 1\ntime: 0.000025s"];
    "multiprocessing.queues.JoinableQueue" [color = "#e5e5e5ff", label = "multiprocessing.queues.JoinableQueue\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.queues.SimpleQueue" [color = "#e5e5e5ff", label = "multiprocessing.queues.SimpleQueue\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.context.ForkContext.get_context" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkContext.get_context\ncalls: 6\ntime: 0.000030s"];
    "multiprocessing.queues.SimpleQueue.__init__" [color = "#e5e5e5ff", label = "multiprocessing.queues.SimpleQueue.__init__\ncalls: 2\ntime: 0.007900s"];
    "multiprocessing.connection.Pipe" [color = "#e5e5e5ff", label = "multiprocessing.connection.Pipe\ncalls: 2\ntime: 0.000185s"];
    "multiprocessing.connection.Connection.__init__" [color = "#e5e5e5ff", label = "multiprocessing.connection.Connection.__init__\ncalls: 4\ntime: 0.000045s"];
    "multiprocessing.context.ForkContext.Lock" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkContext.Lock\ncalls: 4\ntime: 0.007547s"];
    "multiprocessing.synchronize.<module>" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.<module>\ncalls: 1\ntime: 0.000721s"];
    "multiprocessing.synchronize.SemLock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.SemLock\ncalls: 1\ntime: 0.000015s"];
    "multiprocessing.synchronize.Semaphore" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Semaphore\ncalls: 1\ntime: 0.000007s"];
    "multiprocessing.synchronize.BoundedSemaphore" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.BoundedSemaphore\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.synchronize.Lock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Lock\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.synchronize.RLock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.RLock\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.synchronize.Condition" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Condition\ncalls: 1\ntime: 0.000016s"];
    "multiprocessing.synchronize.Event" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Event\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.synchronize.Barrier" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Barrier\ncalls: 1\ntime: 0.000015s"];
    "multiprocessing.synchronize.Lock.__init__" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Lock.__init__\ncalls: 8\ntime: 0.006642s"];
    "multiprocessing.context.ForkContext.get_start_method" [color = "#e5e5e5ff", label = "multiprocessing.context.ForkContext.get_start_method\ncalls: 4\ntime: 0.000015s"];
    "multiprocessing.synchronize._make_name" [color = "#e5e5e5ff", label = "multiprocessing.synchronize._make_name\ncalls: 4\ntime: 0.002270s"];
    "multiprocessing.process.current_process" [color = "#e5e5e5ff", label = "multiprocessing.process.current_process\ncalls: 4\ntime: 0.000014s"];
    "tempfile._RandomNameSequence.__next__" [color = "#e5e5e5ff", label = "tempfile._RandomNameSequence.__next__\ncalls: 4\ntime: 0.002069s"];
    "tempfile._RandomNameSequence.rng" [color = "#e5e5e5ff", label = "tempfile._RandomNameSequence.rng\ncalls: 4\ntime: 0.000154s"];
    "random.Random.__init__" [color = "#e5e5e5ff", label = "random.Random.__init__\ncalls: 1\ntime: 0.000080s"];
    "random.Random.seed" [color = "#e5e5e5ff", label = "random.Random.seed\ncalls: 1\ntime: 0.000034s"];
    "tempfile.<listcomp>" [color = "#e5e5e5ff", label = "tempfile.<listcomp>\ncalls: 4\ntime: 0.001727s"];
    "random.Random.choice" [color = "#e5e5e5ff", label = "random.Random.choice\ncalls: 32\ntime: 0.001265s"];
    "random.Random._randbelow" [color = "#e5e5e5ff", label = "random.Random._randbelow\ncalls: 32\ntime: 0.000608s"];
    "multiprocessing.util.debug" [color = "#e5e5e5ff", label = "multiprocessing.util.debug\ncalls: 45\ntime: 0.000187s"];
    "multiprocessing.synchronize.Lock._make_methods" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Lock._make_methods\ncalls: 4\ntime: 0.000020s"];
    "multiprocessing.util.register_after_fork" [color = "#e5e5e5ff", label = "multiprocessing.util.register_after_fork\ncalls: 4\ntime: 0.000322s"];
    "weakref.WeakValueDictionary.__setitem__" [color = "#e5e5e5ff", label = "weakref.WeakValueDictionary.__setitem__\ncalls: 4\ntime: 0.000230s"];
    "weakref.__new__" [color = "#e5e5e5ff", label = "weakref.__new__\ncalls: 4\ntime: 0.000031s"];
    "weakref.KeyedRef.__init__" [color = "#e5e5e5ff", label = "weakref.KeyedRef.__init__\ncalls: 4\ntime: 0.000020s"];
    "queue.Queue.__init__" [color = "#e5e5e5ff", label = "queue.Queue.__init__\ncalls: 1\ntime: 0.000202s"];
    "queue.Queue._init" [color = "#e5e5e5ff", label = "queue.Queue._init\ncalls: 1\ntime: 0.000005s"];
    "threading.Condition.__init__" [color = "#e5e5e5ff", label = "threading.Condition.__init__\ncalls: 7\ntime: 0.000209s"];
    "multiprocessing.pool.Pool._repopulate_pool" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool._repopulate_pool\ncalls: 1\ntime: 0.137797s"];
    "multiprocessing.pool.Pool.Process" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool.Process\ncalls: 40\ntime: 0.008072s"];
    "multiprocessing.process.ForkProcess.__init__" [color = "#e5e5e5ff", label = "multiprocessing.process.ForkProcess.__init__\ncalls: 40\ntime: 0.006712s"];
    "multiprocessing.process.<genexpr>" [color = "#e4e5e5ff", label = "multiprocessing.process.<genexpr>\ncalls: 80\ntime: 0.000379s"];
    "multiprocessing.process.ForkProcess.name" [color = "#e4e5e5ff", label = "multiprocessing.process.ForkProcess.name\ncalls: 80\ntime: 0.000360s"];
    "multiprocessing.process.ForkProcess.daemon" [color = "#e5e5e5ff", label = "multiprocessing.process.ForkProcess.daemon\ncalls: 40\ntime: 0.000205s"];
    "multiprocessing.process.ForkProcess.start" [color = "#e4e5e5ff", label = "multiprocessing.process.ForkProcess.start\ncalls: 40\ntime: 0.121422s"];
    "multiprocessing.process._cleanup" [color = "#e5e5e5ff", label = "multiprocessing.process._cleanup\ncalls: 40\ntime: 0.024856s"];
    "multiprocessing.context._Popen" [color = "#e4e5e5ff", label = "multiprocessing.context._Popen\ncalls: 40\ntime: 0.092881s"];
    "multiprocessing.popen_fork.<module>" [color = "#e5e5e5ff", label = "multiprocessing.popen_fork.<module>\ncalls: 1\ntime: 0.000147s"];
    "multiprocessing.popen_fork.Popen" [color = "#e5e5e5ff", label = "multiprocessing.popen_fork.Popen\ncalls: 1\ntime: 0.000012s"];
    "multiprocessing.popen_fork.Popen.__init__" [color = "#e4e5e5ff", label = "multiprocessing.popen_fork.Popen.__init__\ncalls: 40\ntime: 0.085160s"];
    "multiprocessing.util._flush_std_streams" [color = "#e5e5e5ff", label = "multiprocessing.util._flush_std_streams\ncalls: 40\ntime: 0.001022s"];
    "multiprocessing.popen_fork.Popen._launch" [color = "#e4e5e5ff", label = "multiprocessing.popen_fork.Popen._launch\ncalls: 40\ntime: 0.081904s"];
    "multiprocessing.util.Finalize.__init__" [color = "#e5e5e5ff", label = "multiprocessing.util.Finalize.__init__\ncalls: 41\ntime: 0.002298s"];
    "multiprocessing.popen_fork.Popen.poll" [color = "#dfe5e5ff", label = "multiprocessing.popen_fork.Popen.poll\ncalls: 780\ntime: 0.011759s"];
    "threading.Thread.__init__" [color = "#e5e5e5ff", label = "threading.Thread.__init__\ncalls: 3\ntime: 0.000741s"];
    "threading._newname" [color = "#e5e5e5ff", label = "threading._newname\ncalls: 3\ntime: 0.000023s"];
    "threading.current_thread" [color = "#e5e5e5ff", label = "threading.current_thread\ncalls: 3\ntime: 0.000019s"];
    "threading._MainThread.daemon" [color = "#e5e5e5ff", label = "threading._MainThread.daemon\ncalls: 3\ntime: 0.000020s"];
    "threading.Event.__init__" [color = "#e5e5e5ff", label = "threading.Event.__init__\ncalls: 4\ntime: 0.000225s"];
    "threading.Thread.daemon" [color = "#e5e5e5ff", label = "threading.Thread.daemon\ncalls: 3\ntime: 0.000103s"];
    "threading.Event.is_set" [color = "#e5e5e5ff", label = "threading.Event.is_set\ncalls: 7\ntime: 0.000025s"];
    "threading.Thread.start" [color = "#e5e5e5ff", label = "threading.Thread.start\ncalls: 3\ntime: 0.001411s"];
    "threading.Event.wait" [color = "#c161e5ff", label = "threading.Event.wait\ncalls: 4\ntime: 46.557243s"];
    "threading.Condition.__enter__" [color = "#e5e5e5ff", label = "threading.Condition.__enter__\ncalls: 5\ntime: 0.000022s"];
    "threading.Condition.wait" [color = "#c161e5ff", label = "threading.Condition.wait\ncalls: 4\ntime: 46.556876s"];
    "threading.Condition._is_owned" [color = "#e5e5e5ff", label = "threading.Condition._is_owned\ncalls: 5\ntime: 0.000028s"];
    "threading.Condition._release_save" [color = "#e5e5e5ff", label = "threading.Condition._release_save\ncalls: 4\ntime: 0.000016s"];
    "threading.Condition._acquire_restore" [color = "#e5e5e5ff", label = "threading.Condition._acquire_restore\ncalls: 4\ntime: 0.000033s"];
    "threading.Condition.__exit__" [color = "#e5e5e5ff", label = "threading.Condition.__exit__\ncalls: 5\ntime: 0.000021s"];
    "multiprocessing.pool.Pool.map" [color = "#c161e5ff", label = "multiprocessing.pool.Pool.map\ncalls: 1\ntime: 46.557436s"];
    "multiprocessing.pool.Pool._map_async" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool._map_async\ncalls: 1\ntime: 0.000818s"];
    "multiprocessing.pool.MapResult.__init__" [color = "#e5e5e5ff", label = "multiprocessing.pool.MapResult.__init__\ncalls: 2\ntime: 0.000301s"];
    "queue.Queue.put" [color = "#e5e5e5ff", label = "queue.Queue.put\ncalls: 1\ntime: 0.000213s"];
    "queue.Queue._put" [color = "#e5e5e5ff", label = "queue.Queue._put\ncalls: 1\ntime: 0.000005s"];
    "threading.Condition.notify" [color = "#e5e5e5ff", label = "threading.Condition.notify\ncalls: 1\ntime: 0.000047s"];
    "multiprocessing.pool.MapResult.get" [color = "#c161e5ff", label = "multiprocessing.pool.MapResult.get\ncalls: 1\ntime: 46.556498s"];
    "multiprocessing.pool.MapResult.wait" [color = "#c161e5ff", label = "multiprocessing.pool.MapResult.wait\ncalls: 1\ntime: 46.556170s"];
    "multiprocessing.pool.MapResult.ready" [color = "#e5e5e5ff", label = "multiprocessing.pool.MapResult.ready\ncalls: 1\ntime: 0.000040s"];
    "multiprocessing.pool.Pool.close" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool.close\ncalls: 1\ntime: 0.000048s"];

    // Edges
    "__main__" -> "<module>" [color = "#b23bb2ff", label = "1"];
    "<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "67"];
    "<module>" -> "ArgSpec" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "functools.wraps" [color = "#b0b2b2ff", label = "316"];
    "<module>" -> "functools.update_wrapper" [color = "#b0b2b2ff", label = "316"];
    "<module>" -> "uname_result" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "abc.register" [color = "#b2b2b2ff", label = "7"];
    "<module>" -> "interface" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Mismatch" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Match" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_LoggingWatcher" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "<module>" -> "AsyncContextManager" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "1"];
    "<module>" -> "typing.GenericMeta.__init__" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DeprecatedOption" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RegisteredOption" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Components" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "OutputKey" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "NamedAgg" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_ExecInfo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_XYPair" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "CharMetrics" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "CompositePart" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Page" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Text" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Box" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Font" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_PSResult" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_PDFResult" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "matplotlib.rcsetup.cycler" [color = "#b2b2b2ff", label = "15"];
    "<module>" -> "_TagInfo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.io.parsers.parser_f" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.indexing.DataFrame.loc" [color = "#b2b2b2ff", label = "5"];
    "<module>" -> "pandas.core.frame.DataFrame.__getitem__" [color = "#b2b2b2ff", label = "11"];
    "<module>" -> "pandas.core.ops.common.Series.new_method" [color = "#b2b2b2ff", label = "13"];
    "<module>" -> "pandas.core.indexing._LocIndexer.__getitem__" [color = "#b2b2b2ff", label = "5"];
    "<module>" -> "pandas.core.generic.DataFrame.copy" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.accessor.CachedAccessor.__get__" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.strings.StringMethods.wrapper" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.series.Series.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.frame.DataFrame.__setitem__" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "pandas.core.reshape.concat.concat" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "multiprocessing.context.DefaultContext.Pool" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "multiprocessing.pool.Pool.map" [color = "#964bb2ff", label = "1"];
    "<module>" -> "multiprocessing.pool.Pool.close" [color = "#b2b2b2ff", label = "1"];
    "_find_and_load" -> "_ModuleLockManager.__init__" [color = "#afb2b2ff", label = "569"];
    "_find_and_load" -> "_ModuleLockManager.__enter__" [color = "#afb2b2ff", label = "569"];
    "_find_and_load" -> "_find_and_load_unlocked" [color = "#7d63b2ff", label = "562"];
    "_find_and_load" -> "_ModuleLockManager.__exit__" [color = "#afb2b2ff", label = "569"];
    "_find_and_load" -> "cb" [color = "#afb2b2ff", label = "572"];
    "_find_and_load" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "7"];
    "_ModuleLockManager.__enter__" -> "_get_module_lock" [color = "#afb2b2ff", label = "569"];
    "_ModuleLockManager.__enter__" -> "_ModuleLock.acquire" [color = "#afb2b2ff", label = "569"];
    "_get_module_lock" -> "_ModuleLock.__init__" [color = "#afb2b2ff", label = "572"];
    "_find_and_load_unlocked" -> "_find_spec" [color = "#adb2b2ff", label = "560"];
    "_find_and_load_unlocked" -> "_load_unlocked" [color = "#7b67b2ff", label = "525"];
    "_find_and_load_unlocked" -> "_call_with_frames_removed" [color = "#825db2ff", label = "17"];
    "_find_spec" -> "_ImportLockContext.__enter__" [color = "#a9b0b2ff", label = "1707"];
    "_find_spec" -> "find_spec" [color = "#a8b0b2ff", label = "1676"];
    "_find_spec" -> "_ImportLockContext.__exit__" [color = "#a9b0b2ff", label = "1707"];
    "_find_spec" -> "_find_spec_legacy" [color = "#b2b2b2ff", label = "31"];
    "find_spec" -> "_get_spec" [color = "#aeb2b2ff", label = "558"];
    "find_spec" -> "spec_from_loader" [color = "#b2b2b2ff", label = "2"];
    "_get_spec" -> "_path_importer_cache" [color = "#adb1b2ff", label = "978"];
    "_get_spec" -> "FileFinder.find_spec" [color = "#acb1b2ff", label = "904"];
    "_get_spec" -> "ModuleSpec.__init__" [color = "#b2b2b2ff", label = "37"];
    "_get_spec" -> "_NamespacePath.__iter__" [color = "#b2b2b2ff", label = "1"];
    "_path_importer_cache" -> "_path_hooks" [color = "#b2b2b2ff", label = "62"];
    "_path_hooks" -> "path_hook_for_FileFinder" [color = "#b2b2b2ff", label = "62"];
    "path_hook_for_FileFinder" -> "_path_isdir" [color = "#b2b2b2ff", label = "62"];
    "path_hook_for_FileFinder" -> "FileFinder.__init__" [color = "#b2b2b2ff", label = "62"];
    "_path_isdir" -> "_path_is_mode_type" [color = "#b2b2b2ff", label = "63"];
    "_path_is_mode_type" -> "_path_stat" [color = "#aeb2b2ff", label = "788"];
    "FileFinder.__init__" -> "<genexpr>" [color = "#afb2b2ff", label = "496"];
    "FileFinder.find_spec" -> "_path_stat" [color = "#adb2b2ff", label = "904"];
    "FileFinder.find_spec" -> "FileFinder._fill_cache" [color = "#b2b2b2ff", label = "62"];
    "FileFinder.find_spec" -> "_relax_case" [color = "#adb2b2ff", label = "904"];
    "FileFinder.find_spec" -> "_path_join" [color = "#9caab2ff", label = "3863"];
    "FileFinder.find_spec" -> "_verbose_message" [color = "#9eacb2ff", label = "3528"];
    "FileFinder.find_spec" -> "_path_isfile" [color = "#aeb2b2ff", label = "725"];
    "FileFinder.find_spec" -> "FileFinder._get_spec" [color = "#afb2b2ff", label = "522"];
    "FileFinder.find_spec" -> "_path_isdir" [color = "#b2b2b2ff", label = "1"];
    "FileFinder.find_spec" -> "ModuleSpec.__init__" [color = "#b2b2b2ff", label = "1"];
    "_path_join" -> "<listcomp>" [color = "#98a6b2ff", label = "4769"];
    "_path_isfile" -> "_path_is_mode_type" [color = "#aeb2b2ff", label = "725"];
    "FileFinder._get_spec" -> "SourceFileLoader.__init__" [color = "#afb2b2ff", label = "453"];
    "FileFinder._get_spec" -> "spec_from_file_location" [color = "#afb2b2ff", label = "522"];
    "FileFinder._get_spec" -> "ExtensionFileLoader.__init__" [color = "#b2b2b2ff", label = "69"];
    "spec_from_file_location" -> "ModuleSpec.__init__" [color = "#afb2b2ff", label = "522"];
    "_load_unlocked" -> "module_from_spec" [color = "#afb2b2ff", label = "524"];
    "_load_unlocked" -> "_installed_safely.__init__" [color = "#afb2b2ff", label = "524"];
    "_load_unlocked" -> "_installed_safely.__enter__" [color = "#afb2b2ff", label = "524"];
    "_load_unlocked" -> "SourceFileLoader.exec_module" [color = "#796bb2ff", label = "453"];
    "_load_unlocked" -> "_installed_safely.__exit__" [color = "#afb2b2ff", label = "524"];
    "_load_unlocked" -> "ExtensionFileLoader.exec_module" [color = "#aeb2b2ff", label = "69"];
    "_load_unlocked" -> "type.exec_module" [color = "#b2b2b2ff", label = "2"];
    "_load_unlocked" -> "_load_backward_compatible" [color = "#b2b2b2ff", label = "1"];
    "module_from_spec" -> "SourceFileLoader.create_module" [color = "#afb2b2ff", label = "453"];
    "module_from_spec" -> "_new_module" [color = "#afb2b2ff", label = "453"];
    "module_from_spec" -> "_init_module_attrs" [color = "#afb2b2ff", label = "524"];
    "module_from_spec" -> "ExtensionFileLoader.create_module" [color = "#b2b2b2ff", label = "69"];
    "module_from_spec" -> "type.create_module" [color = "#b2b2b2ff", label = "2"];
    "_init_module_attrs" -> "ModuleSpec.parent" [color = "#afb2b2ff", label = "476"];
    "_init_module_attrs" -> "ModuleSpec.has_location" [color = "#afb2b2ff", label = "524"];
    "_init_module_attrs" -> "ModuleSpec.cached" [color = "#acb1b2ff", label = "975"];
    "ModuleSpec.cached" -> "_get_cached" [color = "#afb2b2ff", label = "522"];
    "_get_cached" -> "cache_from_source" [color = "#afb2b2ff", label = "453"];
    "cache_from_source" -> "_path_split" [color = "#adb2b2ff", label = "906"];
    "cache_from_source" -> "_path_join" [color = "#adb2b2ff", label = "906"];
    "SourceFileLoader.exec_module" -> "SourceFileLoader.get_code" [color = "#aeb2b2ff", label = "453"];
    "SourceFileLoader.exec_module" -> "_call_with_frames_removed" [color = "#845ab2ff", label = "453"];
    "SourceFileLoader.get_code" -> "SourceFileLoader._check_name_wrapper" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "cache_from_source" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "SourceFileLoader.path_stats" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "SourceFileLoader.get_data" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "_validate_bytecode_header" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "_verbose_message" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.get_code" -> "_compile_bytecode" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader._check_name_wrapper" -> "SourceFileLoader.get_filename" [color = "#afb2b2ff", label = "453"];
    "SourceFileLoader.path_stats" -> "_path_stat" [color = "#afb2b2ff", label = "453"];
    "_validate_bytecode_header" -> "_r_long" [color = "#adb2b2ff", label = "906"];
    "_compile_bytecode" -> "_verbose_message" [color = "#afb2b2ff", label = "453"];
    "_call_with_frames_removed" -> "pandas.<module>" [color = "#abb1b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.<module>" [color = "#afb2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy._globals.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.__config__.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "_find_and_load" [color = "#7c65b2ff", label = "159"];
    "_call_with_frames_removed" -> "numpy._distributor_init.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "_lock_unlock_module" [color = "#b0b2b2ff", label = "291"];
    "_call_with_frames_removed" -> "numpy.core.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.multiarray.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.overrides.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.compat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.compat._inspect.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.compat.py3k.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pathlib.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "ntpath.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.umath.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.numerictypes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._string_helpers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._type_aliases.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._dtype.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.numeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.shape_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._asarray.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.fromnumeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._methods.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._ufunc_config.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.arrayprint.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.defchararray.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.records.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.memmap.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.function_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.machar.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.getlimits.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.einsumfunc.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._add_newdocs.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._dtype_ctypes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core._internal.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "platform.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "subprocess.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "signal.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "ctypes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "ctypes._endian.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy._pytesttester.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.mixins.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.scimath.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.type_check.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.ufunclike.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.index_tricks.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.matrixlib.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.matrixlib.defmatrix.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.linalg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.linalg.linalg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.twodim_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.function_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.histograms.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.stride_tricks.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.nanfunctions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.shape_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.utils.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.arraysetops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.npyio.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.format.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib._datasource.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib._iotools.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.financial.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.arrayterator.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib.arraypad.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.lib._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.fft.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.fft._pocketfft.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.fft.helper.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.polyutils.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial._polybase.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.chebyshev.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.legendre.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.hermite.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.hermite_e.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.polynomial.laguerre.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.random.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.random._pickle.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "50"];
    "_call_with_frames_removed" -> "<module>" [color = "#b23bb2ff", label = "7"];
    "_call_with_frames_removed" -> "_handle_fromlist" [color = "#a5afb2ff", label = "98"];
    "_call_with_frames_removed" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "16"];
    "_call_with_frames_removed" -> "numpy.core.getlimits.iinfo.max" [color = "#b2b2b2ff", label = "12"];
    "_call_with_frames_removed" -> "secrets.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "hmac.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "re.compile" [color = "#b0b2b2ff", label = "8"];
    "_call_with_frames_removed" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "abc.register" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "numpy.core._ufunc_config.errstate.__init__" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "contextlib.errstate.__call__" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "random.SystemRandom.getrandbits" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "concatenate" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "contextlib.errstate.inner" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.ctypeslib.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.ma.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.ma.core.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.ma.extras.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.testing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.result.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.case.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "difflib.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "logging.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pprint.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.suite.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.loader.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.main.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.runner.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "unittest.signals.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.testing._private.<module>" [color = "#b2b2b2ff", label = "14"];
    "_call_with_frames_removed" -> "numpy.testing._private.utils.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.testing._private.decorators.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.testing._private.nosetester.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pytz.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pytz.exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pytz.lazy.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pytz.tzinfo.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pytz.tzfile.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.numpy.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "distutils.version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._libs.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._libs.tslibs.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.is_platform_32bit" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.tz.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.tz.tz.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "six.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "__future__.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.tz._common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.tz._factories.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.tz.win.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._config.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._config.config.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "typing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._config.dates.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._config.display.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._config.localization.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "locale.getlocale" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "calendar._localized_day.__getitem__" [color = "#b2b2b2ff", label = "14"];
    "_call_with_frames_removed" -> "calendar._localized_month.__getitem__" [color = "#b2b2b2ff", label = "26"];
    "_call_with_frames_removed" -> "re.escape" [color = "#b2b2b2ff", label = "40"];
    "_call_with_frames_removed" -> "re._subx" [color = "#b2b2b2ff", label = "6"];
    "_call_with_frames_removed" -> "dateutil.relativedelta.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil._common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "numpy.core.getlimits.iinfo.min" [color = "#b2b2b2ff", label = "5"];
    "_call_with_frames_removed" -> "dateutil.parser.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.parser._parser.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.parser.isoparser.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "fractions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.config_init.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.api.<module>" [color = "#afb2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.dtypes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._typing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.errors.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.generic.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.inference.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.missing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.algorithms.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util._decorators.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.util.hashing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.cast.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util._validators.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.construction.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.numpy.function.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.array_ops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.missing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.roperator.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.dispatch.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.invalid.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.docstrings.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.mask_ops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.ops.methods.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.missing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat._optional.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.sorting.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.boolean.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.nanops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.masked.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.categorical.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.accessor.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.formats.console.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.datetimes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.datetimelike.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.tseries.frequencies.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.tseries.offsets.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.easter.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays._ranges.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.integer.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.tools.numeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.interval.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.concat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.frozen.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.formats.printing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.strings.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.numpy_.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.period.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.sparse.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.sparse.accessor.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.sparse.array.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.sparse.dtype.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.string_.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.arrays.timedeltas.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.generic.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.frame.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.generic.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "json.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "json.decoder.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "json.scanner.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "json.encoder.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.category.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.extension.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.datetimes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.datetimelike.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.numeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.tools.timedeltas.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.tools.datetimes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.arrays.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.interval.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util._exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.multi.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.timedeltas.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.period.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.range.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.internals.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.internals.blocks.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.internals.managers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.internals.concat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.formats.format.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "zipfile.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.internals.construction.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.series.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.indexes.accessors.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.plotting.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.plotting._core.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.plotting._misc.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.ewm.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.rolling.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.indexers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.numba_.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.window.expanding.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.groupby.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.ops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.grouper.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.groupby.categorical.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.tseries.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.eval.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.engines.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.align.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.common.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.ops.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.scope.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.chainmap.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.expr.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.parsing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.concat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.melt.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.merge.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.pivot.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.reshape.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.reshape.tile.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.api.extensions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.api.indexers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.api.types.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.dtypes.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util._print_versions.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.api.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.clipboards.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "csv.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat._import_lzma" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.parsers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.date_converters.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._odfreader.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._openpyxl.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._xlrd.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._pyxlsb.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._xlsxwriter.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.excel._xlwt.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.feather_format.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.gbq.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.html.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.json.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.json._json.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.json._normalize.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.json._table_schema.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.orc.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.parquet.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.pickle.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.compat.pickle_compat.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.pytables.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.core.computation.pytables.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.sas.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.sas.sasreader.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.spss.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.sql.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.io.stata.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.util._tester.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas.testing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._testing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pandas._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.cbook.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "glob.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "shlex.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.cbook.deprecation.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.rcsetup.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.fontconfig_pattern.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "pyparsing.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.colors.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.docstring.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._color_data.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "cycler.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.pyplot.<module>" [color = "#acb1b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.colorbar.<module>" [color = "#afb2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.artist.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.path.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.transforms.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.collections.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.cm.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._cm.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._cm_listed.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.lines.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.markers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.contour.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.ticker.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.font_manager.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.afm.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._mathtext_data.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.text.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.patches.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.bezier.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.textpath.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._text_layout.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.dviread.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.mathtext.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.texmanager.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.blocking_input.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.gridspec.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._pylab_helpers.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tight_layout.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._layoutbox.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib._constrained_layout.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.image.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backend_bases.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backend_tools.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tight_bbox.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.widgets.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.style.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.style.core.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.figure.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.projections.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axes.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axes._subplots.<module>" [color = "#b0b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "uuid.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "ctypes.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axes._axes.<module>" [color = "#b1b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.category.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.units.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.dates.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "dateutil.rrule.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.legend.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.offsetbox.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.container.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.legend_handler.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.mlab.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.quiver.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.stackplot.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.streamplot.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.table.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.triangulation.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.tricontour.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.tritools.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.trifinder.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.triinterpolate.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.trirefine.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.tripcolor.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.tri.triplot.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axes._base.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axis.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.scale.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.spines.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.axes._secondary_axes.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.projections.geo.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.projections.polar.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "mpl_toolkits.mplot3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "mpl_toolkits.mplot3d.axes3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "mpl_toolkits.mplot3d.art3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "mpl_toolkits.mplot3d.proj3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "mpl_toolkits.mplot3d.axis3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_macosx.<module>" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_qt5agg.<module>" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_agg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL.Image.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "xml.etree.ElementTree.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "xml.etree.ElementPath.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL.ImageMode.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL.TiffTags.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL._binary.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "PIL._util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_qt5.<module>" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "matplotlib.backends.qt_editor.figureoptions.<module>" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "matplotlib.backends.qt_compat.<module>" [color = "#b2b2b2ff", label = "2"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_qt4agg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_gtk3agg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_cairo.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_tkagg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends._backend_tk.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "matplotlib.backends.backend_wxagg.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.context.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.process.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.reduction.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.pool.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.queues.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.connection.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.synchronize.<module>" [color = "#b2b2b2ff", label = "1"];
    "_call_with_frames_removed" -> "multiprocessing.popen_fork.<module>" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "16"];
    "pandas.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "pandas.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas._version.get_versions" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.Panel" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.SparseDataFrame" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.SparseSeries" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__numpy" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__numpy.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__Datetime" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__DatetimeSub" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__SparseArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.<module>" -> "pandas.__SparseArraySub" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "21"];
    "numpy.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "numpy.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "24"];
    "numpy.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "11"];
    "numpy.<module>" -> "numpy.core.getlimits._register_known_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "warnings.filterwarnings" [color = "#b2b2b2ff", label = "3"];
    "numpy.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy._sanity_check" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.<genexpr>" [color = "#b2b2b2ff", label = "3"];
    "numpy._globals.<module>" -> "numpy._globals.ModuleDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy._globals.<module>" -> "numpy._globals.VisibleDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy._globals.<module>" -> "numpy._globals._NoValueType" [color = "#b2b2b2ff", label = "1"];
    "numpy._globals.<module>" -> "numpy._globals.__new__" [color = "#b2b2b2ff", label = "1"];
    "_installed_safely.__exit__" -> "<genexpr>" [color = "#a7b0b2ff", label = "2062"];
    "_installed_safely.__exit__" -> "_verbose_message" [color = "#afb2b2ff", label = "507"];
    "_ModuleLockManager.__exit__" -> "_ModuleLock.release" [color = "#afb2b2ff", label = "569"];
    "numpy.__config__.<module>" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "1"];
    "numpy.__config__.<module>" -> "posixpath.join" [color = "#b2b2b2ff", label = "1"];
    "posixpath.dirname" -> "posixpath._get_sep" [color = "#b2b2b2ff", label = "4"];
    "posixpath.join" -> "posixpath._get_sep" [color = "#b1b2b2ff", label = "106"];
    "_lock_unlock_module" -> "_get_module_lock" [color = "#aeb2b2ff", label = "693"];
    "_lock_unlock_module" -> "_ModuleLock.acquire" [color = "#aeb2b2ff", label = "693"];
    "_lock_unlock_module" -> "_ModuleLock.release" [color = "#aeb2b2ff", label = "693"];
    "_handle_fromlist" -> "_call_with_frames_removed" [color = "#825cb2ff", label = "113"];
    "_handle_fromlist" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "_handle_fromlist" -> "six.MovedModule.__get__" [color = "#b2b2b2ff", label = "1"];
    "_handle_fromlist" -> "six.MovedAttribute.__get__" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "31"];
    "numpy.core.<module>" -> "collections.abc._Environ.__contains__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "os._Environ.__setitem__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "29"];
    "numpy.core.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "17"];
    "numpy.core.<module>" -> "os._Environ.__delitem__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.core.<module>" -> "copyreg.pickle" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "collections.abc._Environ.__contains__" -> "os._Environ.__getitem__" [color = "#b2b2b2ff", label = "6"];
    "os._Environ.__getitem__" -> "os.encode" [color = "#b2b2b2ff", label = "25"];
    "os._Environ.__getitem__" -> "os.decode" [color = "#b2b2b2ff", label = "7"];
    "os._Environ.__setitem__" -> "os.encode" [color = "#b2b2b2ff", label = "4"];
    "numpy.core.multiarray.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "4"];
    "numpy.core.multiarray.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.multiarray.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.core.multiarray.<module>" -> "numpy.core.overrides.array_function_from_dispatcher" [color = "#b2b2b2ff", label = "23"];
    "numpy.core.multiarray.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "23"];
    "numpy.core.overrides.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.core.overrides.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.core.overrides.<module>" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.overrides.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.overrides.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "1"];
    "ExtensionFileLoader.create_module" -> "_call_with_frames_removed" [color = "#825cb2ff", label = "69"];
    "ExtensionFileLoader.create_module" -> "_verbose_message" [color = "#b2b2b2ff", label = "69"];
    "ExtensionFileLoader.exec_module" -> "_call_with_frames_removed" [color = "#825cb2ff", label = "69"];
    "ExtensionFileLoader.exec_module" -> "_verbose_message" [color = "#b2b2b2ff", label = "69"];
    "numpy.compat.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "4"];
    "numpy.compat.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.compat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.compat.py3k.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.compat.py3k.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.compat.py3k.<module>" -> "numpy.compat.py3k.contextlib_nullcontext" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pathlib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pathlib.<module>" -> "pathlib._Flavour" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._WindowsFlavour" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._PosixFlavour" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._WindowsFlavour.__init__" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._PosixFlavour.__init__" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._Accessor" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._NormalAccessor" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._Selector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._TerminatingSelector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._PreciseSelector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._WildcardSelector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._RecursiveWildcardSelector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib._PathParents" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.PurePath" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.PurePosixPath" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.PureWindowsPath" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.Path" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.PosixPath" [color = "#b2b2b2ff", label = "1"];
    "pathlib.<module>" -> "pathlib.WindowsPath" [color = "#b2b2b2ff", label = "1"];
    "ntpath.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "ntpath.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pathlib._WindowsFlavour" -> "pathlib.<genexpr>" [color = "#b2b2b2ff", label = "54"];
    "pathlib._WindowsFlavour" -> "pathlib.<setcomp>" [color = "#b2b2b2ff", label = "2"];
    "pathlib._NormalAccessor" -> "pathlib._wrap_strfunc" [color = "#b2b2b2ff", label = "10"];
    "pathlib._NormalAccessor" -> "pathlib._wrap_binary_strfunc" [color = "#b2b2b2ff", label = "2"];
    "pathlib._wrap_strfunc" -> "functools.wraps" [color = "#b2b2b2ff", label = "10"];
    "pathlib._wrap_strfunc" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "10"];
    "pathlib._wrap_binary_strfunc" -> "functools.wraps" [color = "#b2b2b2ff", label = "2"];
    "pathlib._wrap_binary_strfunc" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "2"];
    "functools.decorating_function" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "24"];
    "abc.__new__" -> "abc.<setcomp>" [color = "#b1b2b2ff", label = "256"];
    "abc.__new__" -> "_weakrefset.WeakSet.__init__" [color = "#aeb2b2ff", label = "768"];
    "abc.__new__" -> "typing.GenericMeta.__setattr__" [color = "#adb2b2ff", label = "835"];
    "abc.__new__" -> "typing.TupleMeta.__setattr__" [color = "#b1b2b2ff", label = "155"];
    "abc.__new__" -> "typing.CallableMeta.__setattr__" [color = "#b2b2b2ff", label = "55"];
    "abc.__new__" -> "typing._ProtocolMeta.__setattr__" [color = "#b2b2b2ff", label = "40"];
    "abc.register" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "15"];
    "abc.register" -> "_weakrefset.WeakSet.add" [color = "#b2b2b2ff", label = "7"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__contains__" [color = "#aeb2b2ff", label = "696"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__init__" [color = "#b2b2b2ff", label = "85"];
    "abc.__subclasscheck__" -> "os.__subclasshook__" [color = "#b2b2b2ff", label = "1"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.add" [color = "#b1b2b2ff", label = "220"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__iter__" [color = "#b0b2b2ff", label = "331"];
    "abc.__subclasscheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "111"];
    "abc.__subclasscheck__" -> "collections.abc.__subclasshook__" [color = "#b1b2b2ff", label = "105"];
    "abc.__subclasscheck__" -> "typing.GenericMeta._abc_negative_cache_version" [color = "#b1b2b2ff", label = "146"];
    "abc.__subclasscheck__" -> "typing.GenericMeta._abc_negative_cache" [color = "#b1b2b2ff", label = "208"];
    "abc.__subclasscheck__" -> "typing.__extrahook__" [color = "#b2b2b2ff", label = "73"];
    "abc.__subclasscheck__" -> "typing.GenericMeta.__eq__" [color = "#b0b2b2ff", label = "316"];
    "abc.__subclasscheck__" -> "typing.GenericMeta.__subclasscheck__" [color = "#aeb2b2ff", label = "661"];
    "abc.__subclasscheck__" -> "typing.CallableMeta._abc_negative_cache_version" [color = "#b2b2b2ff", label = "8"];
    "abc.__subclasscheck__" -> "typing.CallableMeta._abc_negative_cache" [color = "#b2b2b2ff", label = "10"];
    "abc.__subclasscheck__" -> "typing.CallableMeta.__eq__" [color = "#b2b2b2ff", label = "4"];
    "abc.__subclasscheck__" -> "typing.CallableMeta.__subclasscheck__" [color = "#b2b2b2ff", label = "14"];
    "abc.__subclasscheck__" -> "typing.TupleMeta.__eq__" [color = "#b2b2b2ff", label = "1"];
    "abc.__subclasscheck__" -> "typing.GenericMeta.__setattr__" [color = "#b2b2b2ff", label = "18"];
    "collections.abc._Environ.get" -> "os._Environ.__getitem__" [color = "#b2b2b2ff", label = "11"];
    "collections.namedtuple" -> "collections.<genexpr>" [color = "#b1b2b2ff", label = "222"];
    "collections.namedtuple" -> "<module>" [color = "#b23bb2ff", label = "22"];
    "textwrap.dedent" -> "re.sub" [color = "#b0b2b2ff", label = "297"];
    "re.sub" -> "re._compile" [color = "#adb2b2ff", label = "336"];
    "re._compile" -> "sre_compile.isstring" [color = "#b1b2b2ff", label = "186"];
    "re._compile" -> "sre_compile.compile" [color = "#aeb2b2ff", label = "186"];
    "re._compile" -> "enum.RegexFlag.__and__" [color = "#b0b2b2ff", label = "372"];
    "sre_compile.compile" -> "sre_compile.isstring" [color = "#b1b2b2ff", label = "186"];
    "sre_compile.compile" -> "sre_parse.parse" [color = "#afb2b2ff", label = "186"];
    "sre_compile.compile" -> "sre_compile._code" [color = "#b0b2b2ff", label = "186"];
    "sre_compile.compile" -> "sre_parse.Pattern.groups" [color = "#b0b2b2ff", label = "372"];
    "sre_compile.compile" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "19"];
    "sre_parse.parse" -> "sre_parse.Tokenizer.__init__" [color = "#b1b2b2ff", label = "186"];
    "sre_parse.parse" -> "sre_parse.Pattern.__init__" [color = "#b1b2b2ff", label = "186"];
    "sre_parse.parse" -> "sre_parse._parse_sub" [color = "#afb2b2ff", label = "186"];
    "sre_parse.parse" -> "sre_parse.fix_flags" [color = "#b1b2b2ff", label = "186"];
    "sre_parse.parse" -> "enum.RegexFlag.__and__" [color = "#b2b2b2ff", label = "38"];
    "sre_parse.Tokenizer.__init__" -> "sre_parse.Tokenizer.__next" [color = "#b1b2b2ff", label = "189"];
    "sre_parse._parse_sub" -> "sre_parse.Tokenizer.tell" [color = "#b0b2b2ff", label = "428"];
    "sre_parse._parse_sub" -> "sre_parse._parse" [color = "#adb2b2ff", label = "485"];
    "sre_parse._parse_sub" -> "sre_parse.Tokenizer.match" [color = "#afb2b2ff", label = "485"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__init__" [color = "#b2b2b2ff", label = "39"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__len__" [color = "#b1b2b2ff", label = "130"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__getitem__" [color = "#b1b2b2ff", label = "114"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.append" [color = "#b2b2b2ff", label = "41"];
    "sre_parse._parse_sub" -> "sre_parse.<listcomp>" [color = "#b2b2b2ff", label = "2"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__delitem__" [color = "#b2b2b2ff", label = "6"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__init__" [color = "#afb2b2ff", label = "485"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.get" [color = "#99a8b2ff", label = "4383"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.tell" [color = "#adb2b2ff", label = "957"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.match" [color = "#a6b0b2ff", label = "2157"];
    "sre_parse._parse" -> "sre_parse._parse_flags" [color = "#b2b2b2ff", label = "85"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__len__" [color = "#aab1b2ff", label = "1524"];
    "sre_parse._parse" -> "sre_parse.SubPattern.append" [color = "#a7b0b2ff", label = "2041"];
    "sre_parse._parse" -> "sre_parse.Pattern.opengroup" [color = "#b1b2b2ff", label = "195"];
    "sre_parse._parse" -> "sre_parse._parse_sub" [color = "#aeb2b2ff", label = "242"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__getitem__" [color = "#aab1b2ff", label = "1440"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__setitem__" [color = "#afb2b2ff", label = "480"];
    "sre_parse._parse" -> "sre_parse.Pattern.closegroup" [color = "#b1b2b2ff", label = "195"];
    "sre_parse._parse" -> "sre_parse._escape" [color = "#b0b2b2ff", label = "277"];
    "sre_parse._parse" -> "sre_parse._class_escape" [color = "#b1b2b2ff", label = "101"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.getuntil" [color = "#b2b2b2ff", label = "24"];
    "sre_parse.Tokenizer.get" -> "sre_parse.Tokenizer.__next" [color = "#99a8b2ff", label = "4477"];
    "sre_parse.Tokenizer.match" -> "sre_parse.Tokenizer.__next" [color = "#aeb2b2ff", label = "626"];
    "sre_parse._parse_flags" -> "sre_parse.Tokenizer.get" [color = "#b1b2b2ff", label = "85"];
    "sre_compile._code" -> "sre_compile._compile_info" [color = "#b1b2b2ff", label = "186"];
    "sre_compile._code" -> "sre_compile._compile" [color = "#afb2b2ff", label = "186"];
    "sre_compile._code" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "19"];
    "sre_compile._compile_info" -> "sre_parse.SubPattern.getwidth" [color = "#b1b2b2ff", label = "186"];
    "sre_compile._compile_info" -> "sre_compile._get_literal_prefix" [color = "#b1b2b2ff", label = "173"];
    "sre_compile._compile_info" -> "sre_compile._get_charset_prefix" [color = "#b1b2b2ff", label = "154"];
    "sre_compile._compile_info" -> "enum.RegexFlag.__and__" [color = "#b2b2b2ff", label = "17"];
    "sre_compile._compile_info" -> "sre_compile._generate_overlap_table" [color = "#b2b2b2ff", label = "19"];
    "sre_compile._compile_info" -> "sre_compile._compile_charset" [color = "#b2b2b2ff", label = "9"];
    "enum.RegexFlag.__and__" -> "enum.__call__" [color = "#a4afb2ff", label = "2428"];
    "enum.__call__" -> "enum.__new__" [color = "#98a7b2ff", label = "4595"];
    "enum.__call__" -> "enum._create_" [color = "#b2b2b2ff", label = "4"];
    "numpy.core.overrides.decorator" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "23"];
    "numpy.core.overrides.decorator" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "23"];
    "numpy.core.overrides.decorator" -> "<module>" [color = "#b239aeff", label = "316"];
    "numpy.core.overrides.decorator" -> "numpy.core.overrides.verify_matching_signatures" [color = "#b0b2b2ff", label = "286"];
    "os._Environ.__delitem__" -> "os.encode" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.umath.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.umath.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.umath.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core.numerictypes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.core.numerictypes.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.numerictypes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "8"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "8"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._typedict" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._construct_lookups" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._register_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._string_helpers.<module>" -> "numpy.core._string_helpers.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "numpy.core._type_aliases.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases.TypeNADict" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._string_helpers.english_lower" [color = "#b2b2b2ff", label = "36"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases.<setcomp>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases._add_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases.<genexpr>" [color = "#b2b2b2ff", label = "6"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases._add_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases._add_integer_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases._set_up_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases.<module>" -> "numpy.core._type_aliases._set_array_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._dtype.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._type_aliases._add_aliases" -> "numpy.core._type_aliases.bitname" [color = "#b2b2b2ff", label = "16"];
    "numpy.core._type_aliases._add_aliases" -> "numpy.core._string_helpers.english_capitalize" [color = "#b2b2b2ff", label = "16"];
    "numpy.core._type_aliases.bitname" -> "numpy.core._type_aliases._bits_of" [color = "#b2b2b2ff", label = "16"];
    "numpy.core._type_aliases.bitname" -> "numpy.core._dtype._kind_name" [color = "#b2b2b2ff", label = "16"];
    "numpy.core._type_aliases._bits_of" -> "numpy.core._type_aliases.<genexpr>" [color = "#b2b2b2ff", label = "32"];
    "numpy.core._string_helpers.english_capitalize" -> "numpy.core._string_helpers.english_upper" [color = "#b2b2b2ff", label = "16"];
    "numpy.core._type_aliases._set_array_types" -> "numpy.core._type_aliases._add_array_type" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.numerictypes._register_types" -> "abc.register" [color = "#b2b2b2ff", label = "4"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__init__" [color = "#b1b2b2ff", label = "206"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__enter__" [color = "#b1b2b2ff", label = "206"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__exit__" [color = "#b1b2b2ff", label = "206"];
    "_weakrefset._IterationGuard.__exit__" -> "_weakrefset.WeakSet._commit_removals" [color = "#b1b2b2ff", label = "206"];
    "numpy.core.numeric.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "10"];
    "numpy.core.numeric.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "22"];
    "numpy.core.numeric.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "22"];
    "numpy.core.numeric.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "10"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.ComplexWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "28"];
    "numpy.core.numeric.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "18"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.extend_all" [color = "#b2b2b2ff", label = "6"];
    "numpy.core.shape_base.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "5"];
    "numpy.core.shape_base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.shape_base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "numpy.core.shape_base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.core.shape_base.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "7"];
    "numpy.core.shape_base.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "7"];
    "numpy.core._asarray.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.core._asarray.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.core._asarray.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "5"];
    "numpy.core._asarray.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "5"];
    "numpy.core.fromnumeric.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "6"];
    "numpy.core.fromnumeric.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "7"];
    "numpy.core.fromnumeric.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.core.fromnumeric.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "44"];
    "numpy.core.fromnumeric.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "44"];
    "numpy.core._methods.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "numpy.core._methods.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.core._exceptions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions.UFuncTypeError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._UFuncBinaryResolutionError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._display_as_base" [color = "#b2b2b2ff", label = "6"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._UFuncNoLoopError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._UFuncCastingError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._UFuncInputCastingError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._UFuncOutputCastingError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions.TooHardError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "2"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions.AxisError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions.<module>" -> "numpy.core._exceptions._ArrayMemoryError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._exceptions._display_as_base" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "6"];
    "numpy.core._exceptions._display_as_base" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "6"];
    "numpy.core.overrides.verify_matching_signatures" -> "numpy.compat._inspect.getargspec" [color = "#afb2b2ff", label = "572"];
    "numpy.core.overrides.verify_matching_signatures" -> "__new__" [color = "#afb2b2ff", label = "572"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.ismethod" [color = "#afb2b2ff", label = "616"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.isfunction" [color = "#afb2b2ff", label = "616"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.getargs" [color = "#afb2b2ff", label = "612"];
    "numpy.compat._inspect.getargs" -> "numpy.compat._inspect.iscode" [color = "#afb2b2ff", label = "612"];
    "numpy.core._ufunc_config.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.core._ufunc_config.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core._ufunc_config.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core._ufunc_config.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "7"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "7"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core._ufunc_config._unspecified" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core._ufunc_config.errstate" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._ufunc_config.<module>" -> "numpy.core._ufunc_config._setdef" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "numpy.core.arrayprint.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "numpy.core.arrayprint.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "8"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "5"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "8"];
    "numpy.core.arrayprint.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint._recursive_guard" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.decorating_function" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.FloatingFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.IntegerFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.BoolFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.ComplexFloatingFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint._TimelikeFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.DatetimeFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.TimedeltaFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.SubArrayFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.StructuredVoidFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.set_string_function" [color = "#b2b2b2ff", label = "2"];
    "contextlib.contextmanager" -> "functools.wraps" [color = "#b2b2b2ff", label = "36"];
    "contextlib.contextmanager" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "36"];
    "numpy.core.arrayprint.decorating_function" -> "functools.wraps" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.arrayprint.decorating_function" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.defchararray.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.defchararray.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.core.defchararray.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.defchararray.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "49"];
    "numpy.core.defchararray.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "50"];
    "numpy.core.defchararray.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.defchararray.<module>" -> "numpy.core.defchararray.chararray" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "numpy.core.records.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.records.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.records.<module>" -> "numpy.core.records._OrderedCounter" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.records.format_parser" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.records.record" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.records.recarray" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core.memmap.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "numpy.core.memmap.memmap" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "1"];
    "numpy.core.function_base.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.function_base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.function_base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.core.function_base.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.function_base.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "3"];
    "numpy.core.machar.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core.machar.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.machar.<module>" -> "numpy.core.machar.MachAr" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.machar.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "1"];
    "numpy.core.getlimits.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "7"];
    "numpy.core.getlimits.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.core.getlimits.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.core.getlimits.<module>" -> "numpy.core.getlimits.MachArLike" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.getlimits.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.getlimits.<module>" -> "numpy.core.getlimits.finfo" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.getlimits.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "2"];
    "numpy.core.getlimits.<module>" -> "numpy.core.getlimits.iinfo" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.einsumfunc.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core.einsumfunc.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.einsumfunc.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "2"];
    "numpy.core._add_newdocs.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.core._add_newdocs.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.core._add_newdocs.<module>" -> "numpy.core.function_base.add_newdoc" [color = "#b1b2b2ff", label = "255"];
    "numpy.core._add_newdocs.<module>" -> "numpy.core._add_newdocs.numeric_type_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._add_newdocs.<module>" -> "numpy.core._add_newdocs.add_newdoc_for_scalar_type" [color = "#b2b2b2ff", label = "19"];
    "numpy.core.function_base.add_newdoc" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "40"];
    "numpy.core.function_base.add_newdoc" -> "_handle_fromlist" [color = "#a4afb2ff", label = "274"];
    "numpy.core.function_base.add_newdoc" -> "numpy.core.function_base._add_docstring" [color = "#b0b2b2ff", label = "274"];
    "numpy.core.function_base.add_newdoc" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.core.function_base._add_docstring" -> "numpy.core.function_base._needs_add_docstring" [color = "#b0b2b2ff", label = "274"];
    "numpy.core._add_newdocs.numeric_type_aliases" -> "numpy.core._add_newdocs.type_aliases_gen" [color = "#b2b2b2ff", label = "18"];
    "numpy.core._add_newdocs.add_newdoc_for_scalar_type" -> "numpy.core._add_newdocs.<genexpr>" [color = "#b2b2b2ff", label = "63"];
    "numpy.core._add_newdocs.add_newdoc_for_scalar_type" -> "numpy.core.function_base.add_newdoc" [color = "#b2b2b2ff", label = "19"];
    "numpy.core._dtype_ctypes.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.core._internal.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.core._internal.<module>" -> "platform.python_implementation" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "3"];
    "numpy.core._internal.<module>" -> "numpy.core._internal.dummy_ctype" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal._missing_ctypes" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal._ctypes" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal._Stream" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal.recursive" [color = "#b2b2b2ff", label = "1"];
    "platform.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "platform.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "10"];
    "platform.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "subprocess.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.SubprocessError" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.CalledProcessError" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.TimeoutExpired" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.CompletedProcess" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.Popen" [color = "#b2b2b2ff", label = "1"];
    "signal.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "signal.<module>" -> "enum._convert" [color = "#b2b2b2ff", label = "3"];
    "signal.<module>" -> "functools.wraps" [color = "#b2b2b2ff", label = "5"];
    "signal.<module>" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "5"];
    "enum._convert" -> "enum.<listcomp>" [color = "#b2b2b2ff", label = "3"];
    "enum._convert" -> "enum.<lambda>" [color = "#b2b2b2ff", label = "40"];
    "enum._convert" -> "enum.__call__" [color = "#b2b2b2ff", label = "3"];
    "enum._convert" -> "enum.__setattr__" [color = "#b2b2b2ff", label = "3"];
    "enum._convert" -> "enum.__members__" [color = "#b2b2b2ff", label = "3"];
    "enum.<listcomp>" -> "signal.<lambda>" [color = "#b1b2b2ff", label = "222"];
    "enum.<listcomp>" -> "types.DynamicClassAttribute.__get__" [color = "#b1b2b2ff", label = "141"];
    "enum.<listcomp>" -> "enum._power_of_two" [color = "#b2b2b2ff", label = "87"];
    "enum._create_" -> "enum._get_mixins_" [color = "#b2b2b2ff", label = "4"];
    "enum._create_" -> "enum.__prepare__" [color = "#b2b2b2ff", label = "4"];
    "enum._create_" -> "enum._EnumDict.__setitem__" [color = "#b2b2b2ff", label = "45"];
    "enum._create_" -> "enum.__new__" [color = "#b2b2b2ff", label = "4"];
    "enum._create_" -> "enum.__setattr__" [color = "#b2b2b2ff", label = "4"];
    "enum._create_" -> "enum._generate_next_value_" [color = "#b2b2b2ff", label = "5"];
    "enum.__prepare__" -> "enum._EnumDict.__init__" [color = "#b2b2b2ff", label = "6"];
    "enum.__prepare__" -> "enum._get_mixins_" [color = "#b2b2b2ff", label = "6"];
    "enum.__prepare__" -> "enum._EnumDict.__setitem__" [color = "#b2b2b2ff", label = "6"];
    "enum._EnumDict.__setitem__" -> "enum._is_sunder" [color = "#b2b2b2ff", label = "71"];
    "enum._EnumDict.__setitem__" -> "enum._is_dunder" [color = "#b2b2b2ff", label = "65"];
    "enum._EnumDict.__setitem__" -> "enum._is_descriptor" [color = "#b2b2b2ff", label = "55"];
    "enum.__new__" -> "enum._get_mixins_" [color = "#b2b2b2ff", label = "6"];
    "enum.__new__" -> "enum._find_new_" [color = "#b2b2b2ff", label = "6"];
    "enum.__new__" -> "enum.<dictcomp>" [color = "#b2b2b2ff", label = "6"];
    "enum.__new__" -> "enum._EnumDict.__setitem__" [color = "#b2b2b2ff", label = "5"];
    "enum.__new__" -> "enum.__setattr__" [color = "#b2b2b2ff", label = "85"];
    "enum.__new__" -> "enum.<setcomp>" [color = "#b2b2b2ff", label = "6"];
    "enum.__new__" -> "enum.<genexpr>" [color = "#b2b2b2ff", label = "15"];
    "enum.__new__" -> "enum._missing_" [color = "#b2b2b2ff", label = "6"];
    "enum._find_new_" -> "enum.__getattr__" [color = "#b2b2b2ff", label = "6"];
    "enum.__getattr__" -> "enum._is_dunder" [color = "#b2b2b2ff", label = "6"];
    "re.compile" -> "re._compile" [color = "#afb2b2ff", label = "101"];
    "sre_parse.Pattern.opengroup" -> "sre_parse.Pattern.groups" [color = "#b0b2b2ff", label = "390"];
    "sre_parse.SubPattern.__getitem__" -> "sre_parse.SubPattern.__init__" [color = "#afb2b2ff", label = "480"];
    "sre_parse.Pattern.closegroup" -> "sre_parse.SubPattern.getwidth" [color = "#b1b2b2ff", label = "195"];
    "sre_parse.SubPattern.getwidth" -> "sre_parse.SubPattern.getwidth" [color = "#adb2b2ff", label = "809"];
    "sre_compile._get_literal_prefix" -> "sre_compile._get_literal_prefix" [color = "#b2b2b2ff", label = "40"];
    "sre_compile._get_charset_prefix" -> "sre_parse.SubPattern.__len__" [color = "#b2b2b2ff", label = "45"];
    "sre_compile._get_charset_prefix" -> "sre_parse.SubPattern.__getitem__" [color = "#b2b2b2ff", label = "45"];
    "sre_compile._compile" -> "sre_compile._compile" [color = "#acb1b2ff", label = "814"];
    "sre_compile._compile" -> "sre_parse.SubPattern.__getitem__" [color = "#a7b0b2ff", label = "1910"];
    "sre_compile._compile" -> "sre_compile._simple" [color = "#afb2b2ff", label = "480"];
    "sre_compile._compile" -> "sre_compile._compile_charset" [color = "#b1b2b2ff", label = "225"];
    "sre_compile._compile" -> "enum.RegexFlag.__and__" [color = "#aeb2b2ff", label = "653"];
    "sre_compile._compile" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "53"];
    "sre_compile._simple" -> "sre_parse.SubPattern.getwidth" [color = "#afb2b2ff", label = "480"];
    "sre_compile._simple" -> "sre_parse.SubPattern.__getitem__" [color = "#afb2b2ff", label = "442"];
    "sre_compile._compile_charset" -> "sre_compile._optimize_charset" [color = "#b1b2b2ff", label = "234"];
    "sre_compile._compile_charset" -> "enum.RegexFlag.__and__" [color = "#b1b2b2ff", label = "89"];
    "sre_compile._optimize_charset" -> "sre_compile._mk_bitmap" [color = "#b2b2b2ff", label = "48"];
    "sre_compile._optimize_charset" -> "sre_compile.fixup" [color = "#b2b2b2ff", label = "88"];
    "sre_compile._optimize_charset" -> "sre_compile._bytes_to_codes" [color = "#b2b2b2ff", label = "2"];
    "sre_compile._mk_bitmap" -> "sre_compile.<listcomp>" [color = "#b2b2b2ff", label = "48"];
    "sre_parse.fix_flags" -> "enum.RegexFlag.__and__" [color = "#b2b2b2ff", label = "45"];
    "sre_parse.fix_flags" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "11"];
    "enum.RegexFlag.__or__" -> "enum.__call__" [color = "#b1b2b2ff", label = "216"];
    "ctypes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "ctypes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "ctypes.<module>" -> "ctypes.py_object" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes._check_size" [color = "#b2b2b2ff", label = "14"];
    "ctypes.<module>" -> "ctypes.c_short" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ushort" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_long" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ulong" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_int" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_uint" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_float" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_double" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_longdouble" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ubyte" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_byte" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_char" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_char_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_void_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_bool" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_wchar_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_wchar" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.CDLL" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.PyDLL" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.LibraryLoader" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.LibraryLoader.__init__" [color = "#b2b2b2ff", label = "2"];
    "ctypes.<module>" -> "ctypes.PyDLL.__init__" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.CFUNCTYPE" [color = "#b2b2b2ff", label = "2"];
    "ctypes.<module>" -> "ctypes.PYFUNCTYPE" [color = "#b2b2b2ff", label = "3"];
    "ctypes.<module>" -> "ctypes._reset_cache" [color = "#b2b2b2ff", label = "1"];
    "ctypes._check_size" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "ctypes.PyDLL.__init__" -> "ctypes._FuncPtr" [color = "#b2b2b2ff", label = "1"];
    "ctypes.CFUNCTYPE" -> "ctypes.CFunctionType" [color = "#b2b2b2ff", label = "2"];
    "ctypes.PYFUNCTYPE" -> "ctypes.CFunctionType" [color = "#b2b2b2ff", label = "3"];
    "ctypes._endian.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "ctypes._endian.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "ctypes._endian.<module>" -> "ctypes._endian._swapped_meta" [color = "#b2b2b2ff", label = "1"];
    "ctypes._endian.<module>" -> "ctypes._endian.BigEndianStructure" [color = "#b2b2b2ff", label = "1"];
    "platform.python_implementation" -> "platform._sys_version" [color = "#b2b2b2ff", label = "3"];
    "sre_parse.Tokenizer.getuntil" -> "sre_parse.Tokenizer.__next" [color = "#b1b2b2ff", label = "135"];
    "numpy.core._internal._missing_ctypes" -> "numpy.core._internal.c_void_p" [color = "#b2b2b2ff", label = "1"];
    "copyreg.pickle" -> "copyreg.constructor" [color = "#b2b2b2ff", label = "1"];
    "numpy._pytesttester.<module>" -> "numpy._pytesttester.PytestTester" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "22"];
    "numpy.lib.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "19"];
    "numpy.lib.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "11"];
    "numpy.lib.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.mixins.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib.mixins.<module>" -> "numpy.lib.mixins.NDArrayOperatorsMixin" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.mixins.NDArrayOperatorsMixin" -> "numpy.lib.mixins._binary_method" [color = "#b2b2b2ff", label = "7"];
    "numpy.lib.mixins.NDArrayOperatorsMixin" -> "numpy.lib.mixins._numeric_methods" [color = "#b2b2b2ff", label = "13"];
    "numpy.lib.mixins.NDArrayOperatorsMixin" -> "numpy.lib.mixins._reflected_binary_method" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.mixins.NDArrayOperatorsMixin" -> "numpy.lib.mixins._unary_method" [color = "#b2b2b2ff", label = "4"];
    "numpy.lib.mixins._numeric_methods" -> "numpy.lib.mixins._binary_method" [color = "#b2b2b2ff", label = "13"];
    "numpy.lib.mixins._numeric_methods" -> "numpy.lib.mixins._reflected_binary_method" [color = "#b2b2b2ff", label = "13"];
    "numpy.lib.mixins._numeric_methods" -> "numpy.lib.mixins._inplace_binary_method" [color = "#b2b2b2ff", label = "13"];
    "numpy.lib.scimath.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.scimath.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.lib.scimath.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.lib.scimath.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "9"];
    "numpy.lib.scimath.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "9"];
    "numpy.lib.type_check.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.type_check.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.lib.type_check.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.type_check.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.lib.type_check.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.type_check.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "13"];
    "numpy.lib.type_check.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "11"];
    "numpy.lib.ufunclike.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.ufunclike.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib.ufunclike.<module>" -> "numpy.lib.ufunclike._deprecate_out_named_y" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.ufunclike.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.ufunclike.<module>" -> "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.ufunclike.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "3"];
    "numpy.lib.ufunclike._deprecate_out_named_y" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.ufunclike._deprecate_out_named_y" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y" -> "numpy.lib.ufunclike._fix_out_named_y" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.ufunclike._fix_out_named_y" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.ufunclike._fix_out_named_y" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.index_tricks.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.index_tricks.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.lib.index_tricks.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "numpy.lib.index_tricks.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.index_tricks.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "6"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.nd_grid" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.MGridClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.MGridClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.OGridClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.OGridClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.AxisConcatenator" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.RClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.RClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.CClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.CClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.ndenumerate" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.ndindex" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.IndexExpression" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.IndexExpression.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.matrixlib.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.matrixlib.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.matrixlib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.matrixlib.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.matrixlib.defmatrix.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.matrixlib.defmatrix.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.matrixlib.defmatrix.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.matrixlib.defmatrix.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.matrixlib.defmatrix.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "3"];
    "numpy.matrixlib.defmatrix.<module>" -> "numpy.matrixlib.defmatrix.matrix" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.linalg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.linalg.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "numpy.linalg.linalg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.linalg.linalg.LinAlgError" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "21"];
    "numpy.linalg.linalg.<module>" -> "numpy.linalg.linalg._determine_error_states" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "20"];
    "numpy.lib.twodim_base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.lib.twodim_base.<module>" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.twodim_base.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "10"];
    "numpy.lib.twodim_base.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "15"];
    "numpy.lib.twodim_base.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "5"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core._ufunc_config.errstate.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core._ufunc_config.errstate.__enter__" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core._ufunc_config.errstate.__exit__" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._ufunc_config.errstate.__enter__" -> "numpy.core._ufunc_config.seterr" [color = "#b2b2b2ff", label = "5"];
    "numpy.core._ufunc_config.seterr" -> "numpy.core._ufunc_config.geterr" [color = "#b2b2b2ff", label = "10"];
    "numpy.core._ufunc_config.errstate.__exit__" -> "numpy.core._ufunc_config.seterr" [color = "#b2b2b2ff", label = "5"];
    "numpy.lib.function_base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.function_base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "12"];
    "numpy.lib.function_base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.lib.function_base.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "29"];
    "numpy.lib.function_base.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "37"];
    "numpy.lib.function_base.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "8"];
    "numpy.lib.function_base.<module>" -> "numpy.lib.function_base.vectorize" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.histograms.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.histograms.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib.histograms.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.histograms.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "3"];
    "numpy.lib.stride_tricks.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.stride_tricks.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib.stride_tricks.<module>" -> "numpy.lib.stride_tricks.DummyArray" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.stride_tricks.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.stride_tricks.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "2"];
    "numpy.lib.index_tricks.MGridClass.__init__" -> "numpy.lib.index_tricks.MGridClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.OGridClass.__init__" -> "numpy.lib.index_tricks.OGridClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.RClass.__init__" -> "numpy.lib.index_tricks.RClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.CClass.__init__" -> "numpy.lib.index_tricks.CClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.nanfunctions.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.nanfunctions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib.nanfunctions.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "14"];
    "numpy.lib.nanfunctions.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "14"];
    "numpy.lib.shape_base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.shape_base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "numpy.lib.shape_base.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "14"];
    "numpy.lib.shape_base.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "14"];
    "numpy.lib.polynomial.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.lib.polynomial.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.polynomial.<module>" -> "numpy.lib.polynomial.RankWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "12"];
    "numpy.lib.polynomial.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "10"];
    "numpy.lib.polynomial.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "numpy.lib.polynomial.poly1d" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "warnings.simplefilter" [color = "#b2b2b2ff", label = "1"];
    "warnings.simplefilter" -> "warnings._add_filter" [color = "#b2b2b2ff", label = "6"];
    "numpy.lib.utils.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.lib.utils.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.<module>" -> "numpy.lib.utils._Deprecate" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.utils.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "3"];
    "numpy.lib.utils.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "enum._missing_" -> "enum._create_pseudo_member_" [color = "#b2b2b2ff", label = "6"];
    "enum._create_pseudo_member_" -> "enum._decompose" [color = "#b2b2b2ff", label = "6"];
    "enum._decompose" -> "enum.<listcomp>" [color = "#b2b2b2ff", label = "6"];
    "enum._decompose" -> "enum.<lambda>" [color = "#b2b2b2ff", label = "15"];
    "enum._decompose" -> "types.DynamicClassAttribute.__get__" [color = "#b2b2b2ff", label = "6"];
    "types.DynamicClassAttribute.__get__" -> "enum.RegexFlag.name" [color = "#b1b2b2ff", label = "141"];
    "types.DynamicClassAttribute.__get__" -> "enum.RegexFlag.value" [color = "#b2b2b2ff", label = "6"];
    "enum._power_of_two" -> "enum._high_bit" [color = "#b2b2b2ff", label = "69"];
    "numpy.lib.arraysetops.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.arraysetops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib.arraysetops.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "8"];
    "numpy.lib.arraysetops.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "8"];
    "numpy.lib.npyio.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "numpy.lib.npyio.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.npyio.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.lib.npyio.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.lib.npyio.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "5"];
    "numpy.lib.npyio.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "9"];
    "numpy.lib.npyio.<module>" -> "numpy.lib.npyio.BagObj" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib.npyio.NpzFile" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "4"];
    "numpy.lib.format.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.format.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib._datasource.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource._FileOpeners" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource._FileOpeners.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource.DataSource" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource.Repository" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib._iotools.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.LineSplitter" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.NameValidator" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConverterError" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConverterLockError" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConversionWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.StringConverter" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.financial.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib.financial.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.financial.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "10"];
    "numpy.lib.financial.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "10"];
    "numpy.lib.arrayterator.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib.arrayterator.<module>" -> "numpy.lib.arrayterator.Arrayterator" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.arraypad.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.arraypad.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.lib.arraypad.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.arraypad.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib._version.<module>" -> "numpy.lib._version.NumpyVersion" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.fft.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "numpy.fft.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.fft.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft._pocketfft.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "numpy.fft._pocketfft.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft._pocketfft.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft._pocketfft.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "14"];
    "numpy.fft._pocketfft.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "14"];
    "numpy.fft.helper.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.fft.helper.<module>" -> "numpy.core.overrides.array_function_dispatch" [color = "#b2b2b2ff", label = "2"];
    "numpy.fft.helper.<module>" -> "numpy.core.overrides.decorator" [color = "#b1b2b2ff", label = "4"];
    "numpy.fft.helper.<module>" -> "numpy.core.overrides.set_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "6"];
    "numpy.polynomial.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "6"];
    "numpy.polynomial.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.polynomial.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.polynomial.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.polynomial.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.polynomial.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "numpy.polynomial.polynomial.Polynomial" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.RankWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyError" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyDomainError" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyBase" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial._polybase.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "numpy.polynomial._polybase.ABCPolyBase" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.ABCPolyBase" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "16"];
    "numpy.polynomial.chebyshev.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.chebyshev.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.chebyshev.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.chebyshev.<module>" -> "numpy.polynomial.chebyshev.Chebyshev" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.chebyshev.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.legendre.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.legendre.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.legendre.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.legendre.<module>" -> "numpy.polynomial.legendre.Legendre" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.legendre.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.hermite.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.hermite.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.hermite.<module>" -> "numpy.polynomial.hermite.Hermite" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite_e.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.hermite_e.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.hermite_e.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.hermite_e.<module>" -> "numpy.polynomial.hermite_e.HermiteE" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite_e.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.laguerre.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.polynomial.laguerre.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "numpy.polynomial.laguerre.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.polynomial.laguerre.<module>" -> "numpy.polynomial.laguerre.Laguerre" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.laguerre.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "10"];
    "numpy.random.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "numpy.random.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "numpy.random.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.random._pickle.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "6"];
    "numpy.random._pickle.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "numpy.random._pickle.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "collections.abc.__subclasshook__" -> "collections.abc._check_methods" [color = "#b2b2b2ff", label = "29"];
    "secrets.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "secrets.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "secrets.<module>" -> "random.SystemRandom.__init__" [color = "#b2b2b2ff", label = "1"];
    "hmac.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "hmac.<module>" -> "hmac.<genexpr>" [color = "#afb2b2ff", label = "514"];
    "hmac.<module>" -> "hmac.HMAC" [color = "#b2b2b2ff", label = "1"];
    "random.SystemRandom.__init__" -> "random.SystemRandom.seed" [color = "#b2b2b2ff", label = "1"];
    "contextlib.errstate.__call__" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "contextlib.errstate.__call__" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "abc.__instancecheck__" -> "_weakrefset.WeakSet.__contains__" [color = "#afb2b2ff", label = "564"];
    "abc.__instancecheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "20"];
    "concatenate" -> "numpy.core.multiarray.concatenate" [color = "#b2b2b2ff", label = "10"];
    "contextlib.errstate.inner" -> "contextlib.errstate._recreate_cm" [color = "#b2b2b2ff", label = "1"];
    "contextlib.errstate.inner" -> "numpy.core._ufunc_config.errstate.__enter__" [color = "#b2b2b2ff", label = "1"];
    "contextlib.errstate.inner" -> "numpy.core._ufunc_config.errstate.__exit__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.ctypeslib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "numpy.ctypeslib.<module>" -> "numpy.core._internal._getintp_ctype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.lib.utils.deprecate" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.ctypeslib._ndptr" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.ctypeslib._concrete_ndptr" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.ctypeslib._get_scalar_type_map" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.deprecate" -> "numpy.lib.utils._Deprecate.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.deprecate" -> "numpy.lib.utils._Deprecate.__call__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils._Deprecate.__call__" -> "numpy.lib.utils._set_function_name" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils._Deprecate.__call__" -> "numpy.lib.utils._get_indent" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils._Deprecate.__call__" -> "textwrap.indent" [color = "#b2b2b2ff", label = "1"];
    "textwrap.indent" -> "textwrap.prefixed_lines" [color = "#b1b2b2ff", label = "163"];
    "textwrap.prefixed_lines" -> "textwrap.predicate" [color = "#b1b2b2ff", label = "150"];
    "numpy.ctypeslib._get_scalar_type_map" -> "numpy.ctypeslib.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<dictcomp>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "14"];
    "numpy.ctypeslib.<dictcomp>" -> "numpy.core._internal.npy_ctypes_check" [color = "#b2b2b2ff", label = "13"];
    "numpy.ctypeslib.<dictcomp>" -> "numpy.core._dtype_ctypes.dtype_from_ctypes_type" [color = "#b2b2b2ff", label = "13"];
    "numpy.core._dtype_ctypes.dtype_from_ctypes_type" -> "numpy.core._dtype_ctypes._from_ctypes_scalar" [color = "#b2b2b2ff", label = "13"];
    "numpy.ma.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "4"];
    "numpy.ma.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "numpy.ma.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "numpy.ma.core.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedArrayFutureWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MAError" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskError" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.<listcomp>" [color = "#b2b2b2ff", label = "4"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainCheckInterval" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainTan" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainSafeDivide" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreater" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreaterEqual" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedUFunc" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedUnaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedBinaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainedBinaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedUnaryOperation.__init__" [color = "#b2b2b2ff", label = "26"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreaterEqual.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreater.__init__" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainTan.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainCheckInterval.__init__" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "18"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainSafeDivide.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedPrintOption" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedPrintOption.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "4"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedIterator" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedArray" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.mvoid" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedConstant" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._extrema_operation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._frommethod" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._frommethod.__init__" [color = "#b2b2b2ff", label = "26"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._extrema_operation.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.doc_note" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._convert2ma" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._convert2ma.__init__" [color = "#b2b2b2ff", label = "8"];
    "numpy.ma.core._MaskedUnaryOperation.__init__" -> "numpy.ma.core._MaskedUnaryOperation.__init__" [color = "#b2b2b2ff", label = "26"];
    "numpy.ma.core._MaskedUnaryOperation.__init__" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core._MaskedUnaryOperation.__init__" -> "numpy.core._internal._ufunc_doc_signature_formatter" [color = "#b2b2b2ff", label = "24"];
    "numpy.ma.core._MaskedBinaryOperation.__init__" -> "numpy.ma.core._MaskedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "18"];
    "numpy.ma.core._MaskedBinaryOperation.__init__" -> "numpy.core._internal._ufunc_doc_signature_formatter" [color = "#b2b2b2ff", label = "18"];
    "numpy.core._internal._ufunc_doc_signature_formatter" -> "numpy.core._internal.<genexpr>" [color = "#b2b2b2ff", label = "78"];
    "numpy.ma.core._DomainedBinaryOperation.__init__" -> "numpy.ma.core._DomainedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core._DomainedBinaryOperation.__init__" -> "numpy.core._internal._ufunc_doc_signature_formatter" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.MaskedArray" -> "numpy.ma.core._arraymethod" [color = "#b2b2b2ff", label = "7"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.__has_singleton" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.MaskedArray.__array_finalize__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.MaskedArray.dtype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.make_mask_descr" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.MaskedArray.shape" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.__new__" -> "numpy.ma.core.MaskedArray.view" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.__array_finalize__" -> "numpy.ma.core.MaskedArray._update_from" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.__array_finalize__" -> "numpy.ma.core.getmask" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.__array_finalize__" -> "numpy.ma.core.MaskedArray.dtype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.make_mask_descr" -> "numpy.ma.core._replace_dtype_fields" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core._replace_dtype_fields" -> "numpy.ma.core._replace_dtype_fields_recursive" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.view" -> "numpy.ma.core.MaskedConstant.__array_finalize__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.view" -> "numpy.ma.core.getmask" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedArray.view" -> "numpy.ma.core.MaskedConstant.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.__has_singleton" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedConstant.__array_finalize__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedConstant._update_from" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedArray.dtype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.getmask" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedConstant.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedConstant.shape" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" -> "numpy.ma.core.MaskedConstant.dtype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.MaskedConstant.__setattr__" -> "numpy.ma.core.__has_singleton" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core._frommethod.__init__" -> "numpy.ma.core._frommethod.getdoc" [color = "#b2b2b2ff", label = "26"];
    "numpy.ma.core._frommethod.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "26"];
    "numpy.ma.core.get_object_signature" -> "numpy.compat._inspect.getargspec" [color = "#b2b2b2ff", label = "44"];
    "numpy.ma.core.get_object_signature" -> "numpy.compat._inspect.formatargspec" [color = "#b2b2b2ff", label = "40"];
    "numpy.compat._inspect.formatargspec" -> "numpy.compat._inspect.strseq" [color = "#b2b2b2ff", label = "90"];
    "numpy.compat._inspect.formatargspec" -> "numpy.compat._inspect.<lambda>" [color = "#b2b2b2ff", label = "90"];
    "numpy.compat._inspect.<lambda>" -> "numpy._globals._NoValueType.__repr__" [color = "#b2b2b2ff", label = "9"];
    "numpy.ma.core._extrema_operation.__init__" -> "numpy.ma.core._extrema_operation.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core._extrema_operation.__init__" -> "numpy.core._internal._ufunc_doc_signature_formatter" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.doc_note" -> "re.split" [color = "#b2b2b2ff", label = "4"];
    "re.split" -> "re._compile" [color = "#afb2b2ff", label = "4"];
    "numpy.ma.core._convert2ma.__init__" -> "numpy.ma.core._convert2ma.getdoc" [color = "#b2b2b2ff", label = "8"];
    "numpy.ma.core._convert2ma.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "8"];
    "numpy.ma.extras.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "numpy.ma.extras.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_single" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_seq" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_args" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_allargs" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_allargs.__init__" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_seq.__init__" [color = "#b2b2b2ff", label = "5"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction_single.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.MAxisConcatenator" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.mr_class" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.mr_class.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.core.doc_note" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras._fromnxfunction_allargs.__init__" -> "numpy.ma.extras._fromnxfunction_allargs.getdoc" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.extras._fromnxfunction_allargs.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.extras._fromnxfunction_seq.__init__" -> "numpy.ma.extras._fromnxfunction_seq.getdoc" [color = "#b2b2b2ff", label = "5"];
    "numpy.ma.extras._fromnxfunction_seq.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "5"];
    "numpy.ma.extras._fromnxfunction_single.__init__" -> "numpy.ma.extras._fromnxfunction_single.getdoc" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras._fromnxfunction_single.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras.mr_class.__init__" -> "numpy.lib.index_tricks.mr_class.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.getlimits._register_known_types" -> "numpy.core.getlimits.MachArLike.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.core.getlimits._register_known_types" -> "numpy.core.getlimits._register_type" [color = "#b2b2b2ff", label = "8"];
    "numpy.core.getlimits._register_known_types" -> "numpy.core._ufunc_config.errstate.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.getlimits._register_known_types" -> "numpy.core._ufunc_config.errstate.__enter__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.getlimits._register_known_types" -> "numpy.core._ufunc_config.errstate.__exit__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.getlimits.MachArLike.__init__" -> "numpy.core.getlimits.<lambda>" [color = "#b2b2b2ff", label = "66"];
    "numpy.core.getlimits.<lambda>" -> "numpy.core.getlimits.<lambda>" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.getlimits.<lambda>" -> "numpy.core.getlimits._fr1" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.getlimits.<lambda>" -> "numpy.core.getlimits._fr0" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.getlimits.<lambda>" -> "numpy.core.arrayprint._array_str_implementation" [color = "#b2b2b2ff", label = "15"];
    "numpy.core.arrayprint._array_str_implementation" -> "numpy.core.arrayprint.float128.wrapper" [color = "#b2b2b2ff", label = "15"];
    "numpy.core.arrayprint.float128.wrapper" -> "numpy.core.arrayprint._guarded_repr_or_str" [color = "#b2b2b2ff", label = "15"];
    "warnings.filterwarnings" -> "re.compile" [color = "#b0b2b2ff", label = "6"];
    "warnings.filterwarnings" -> "warnings._add_filter" [color = "#b2b2b2ff", label = "3"];
    "numpy.testing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "numpy.testing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "numpy.testing.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "numpy.testing.<module>" -> "numpy._pytesttester.PytestTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "unittest.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "7"];
    "unittest.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "unittest.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "unittest.result.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.result.<module>" -> "unittest.result.TestResult" [color = "#b2b2b2ff", label = "1"];
    "unittest.util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.util.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.TestResult" -> "unittest.result.failfast" [color = "#b2b2b2ff", label = "3"];
    "unittest.result.failfast" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "unittest.result.failfast" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "unittest.case.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "unittest.case.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "unittest.case.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.case.<module>" -> "unittest.case.SkipTest" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._ShouldStop" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._UnexpectedSuccess" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._Outcome" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._BaseTestCaseContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._AssertRaisesBaseContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._AssertRaisesContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._AssertWarnsContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._CapturingHandler" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._AssertLogsContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case.TestCase" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case.FunctionTestCase" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._SubTest" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "difflib.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.SequenceMatcher" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.Differ" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.HtmlDiff" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "logging.<module>" -> "posixpath.normcase" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "threading.RLock" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.LogRecord" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.PercentStyle" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.StrFormatStyle" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.StringTemplateStyle" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Formatter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Formatter.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.BufferingFormatter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Filter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Filterer" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "weakref.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Handler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.StreamHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.FileHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging._StderrHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging._StderrHandler.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.PlaceHolder" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Manager" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Logger" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.RootLogger" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.LoggerAdapter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.RootLogger.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Manager.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "logging.<module>" -> "logging.NullHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.Formatter.__init__" -> "logging.PercentStyle.__init__" [color = "#b2b2b2ff", label = "1"];
    "weakref.__init__" -> "weakref.update" [color = "#b2b2b2ff", label = "7"];
    "logging._StderrHandler.__init__" -> "logging._StderrHandler.__init__" [color = "#b2b2b2ff", label = "2"];
    "logging._StderrHandler.__init__" -> "logging._checkLevel" [color = "#b2b2b2ff", label = "1"];
    "logging._StderrHandler.__init__" -> "logging._addHandlerRef" [color = "#b2b2b2ff", label = "1"];
    "logging._StderrHandler.__init__" -> "logging._StderrHandler.createLock" [color = "#b2b2b2ff", label = "1"];
    "logging._addHandlerRef" -> "logging._acquireLock" [color = "#b2b2b2ff", label = "1"];
    "logging._addHandlerRef" -> "logging._releaseLock" [color = "#b2b2b2ff", label = "1"];
    "logging._StderrHandler.createLock" -> "threading.RLock" [color = "#b2b2b2ff", label = "1"];
    "logging.RootLogger.__init__" -> "logging.RootLogger.__init__" [color = "#b2b2b2ff", label = "2"];
    "logging.RootLogger.__init__" -> "logging._checkLevel" [color = "#b2b2b2ff", label = "1"];
    "spec_from_loader" -> "type._requires_builtin_wrapper" [color = "#b2b2b2ff", label = "2"];
    "spec_from_loader" -> "ModuleSpec.__init__" [color = "#b2b2b2ff", label = "3"];
    "spec_from_loader" -> "six._SixMetaPathImporter.is_package" [color = "#b2b2b2ff", label = "1"];
    "type._requires_builtin_wrapper" -> "is_package" [color = "#b2b2b2ff", label = "2"];
    "type.create_module" -> "_call_with_frames_removed" [color = "#825db2ff", label = "2"];
    "type.exec_module" -> "_call_with_frames_removed" [color = "#825db2ff", label = "2"];
    "pprint.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pprint.<module>" -> "pprint._safe_key" [color = "#b2b2b2ff", label = "1"];
    "pprint.<module>" -> "pprint.PrettyPrinter" [color = "#b2b2b2ff", label = "1"];
    "unittest.case._Outcome" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.TestCase" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.TestCase" -> "unittest.case._deprecate" [color = "#b2b2b2ff", label = "10"];
    "unittest.suite.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "unittest.suite.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "unittest.suite.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.suite.<module>" -> "unittest.suite.BaseTestSuite" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite.TestSuite" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite._ErrorHolder" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite._DebugResult" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.loader.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "unittest.loader._FailedTest" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "unittest.loader.TestLoader" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "unittest.loader.TestLoader.__init__" [color = "#b2b2b2ff", label = "1"];
    "unittest.main.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "unittest.main.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "unittest.main.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.main.<module>" -> "unittest.main.TestProgram" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "unittest.runner.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "unittest.runner.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner._WritelnDecorator" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner.TextTestResult" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner.TextTestRunner" [color = "#b2b2b2ff", label = "1"];
    "unittest.signals.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "unittest.signals.<module>" -> "unittest.signals._InterruptHandler" [color = "#b2b2b2ff", label = "1"];
    "unittest.signals.<module>" -> "weakref.WeakKeyDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "numpy.testing._private.utils.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "numpy.testing._private.utils.KnownFailureException" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "platform.python_implementation" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "numpy.testing._private.utils._Dummy" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "unittest.case._Dummy.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "5"];
    "numpy.testing._private.utils.<module>" -> "numpy.testing._private.utils.IgnoreException" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "numpy.testing._private.utils.clear_and_catch_warnings" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.utils.<module>" -> "numpy.testing._private.utils.suppress_warnings" [color = "#b2b2b2ff", label = "1"];
    "unittest.case._Dummy.__init__" -> "unittest.case._Dummy.addTypeEqualityFunc" [color = "#b2b2b2ff", label = "6"];
    "numpy.testing._private.decorators.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.decorators.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.testing._private.decorators.<module>" -> "numpy.testing._private.decorators.skipif" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.nosetester.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.nosetester.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing._private.nosetester.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.testing._private.nosetester.<module>" -> "numpy.testing._private.nosetester.NoseTester" [color = "#b2b2b2ff", label = "1"];
    "numpy._sanity_check" -> "numpy.core.numeric.ones" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.ones" -> "copyto" [color = "#b2b2b2ff", label = "2"];
    "copyto" -> "numpy.core.multiarray.copyto" [color = "#b2b2b2ff", label = "3"];
    "pytz.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "pytz.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pytz.<module>" -> "pytz.UTC" [color = "#b2b2b2ff", label = "1"];
    "pytz.<module>" -> "pytz._CountryTimezoneDict" [color = "#b2b2b2ff", label = "1"];
    "pytz.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "pytz.<module>" -> "pytz._CountryNameDict" [color = "#b2b2b2ff", label = "1"];
    "pytz.<module>" -> "pytz._FixedOffset" [color = "#b2b2b2ff", label = "1"];
    "pytz.<module>" -> "pytz.lazy.__new__" [color = "#b2b2b2ff", label = "4"];
    "pytz.exceptions.<module>" -> "pytz.exceptions.Error" [color = "#b2b2b2ff", label = "1"];
    "pytz.exceptions.<module>" -> "pytz.exceptions.UnknownTimeZoneError" [color = "#b2b2b2ff", label = "1"];
    "pytz.exceptions.<module>" -> "pytz.exceptions.InvalidTimeError" [color = "#b2b2b2ff", label = "1"];
    "pytz.exceptions.<module>" -> "pytz.exceptions.AmbiguousTimeError" [color = "#b2b2b2ff", label = "1"];
    "pytz.exceptions.<module>" -> "pytz.exceptions.NonExistentTimeError" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pytz.lazy.<module>" -> "threading.RLock" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.<module>" -> "pytz.lazy.LazyDict" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.<module>" -> "pytz.lazy.LazyList" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.<module>" -> "pytz.lazy.<listcomp>" [color = "#b2b2b2ff", label = "2"];
    "pytz.lazy.<module>" -> "pytz.lazy.LazySet" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzinfo.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pytz.tzinfo.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzinfo.<module>" -> "pytz.tzinfo.memorized_timedelta" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzinfo.<module>" -> "pytz.tzinfo.BaseTzInfo" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzinfo.<module>" -> "pytz.tzinfo.StaticTzInfo" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzinfo.<module>" -> "pytz.tzinfo.DstTzInfo" [color = "#b2b2b2ff", label = "1"];
    "pytz.tzfile.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pytz.tzfile.<module>" -> "pytz.tzfile._byte_string" [color = "#b2b2b2ff", label = "1"];
    "pytz.lazy.__new__" -> "pytz.lazy.LazyList" [color = "#b2b2b2ff", label = "2"];
    "pytz.lazy.__new__" -> "pytz.lazy.lazy" [color = "#b1b2b2ff", label = "146"];
    "pytz.lazy.__new__" -> "pytz.lazy.LazySet" [color = "#b2b2b2ff", label = "2"];
    "dateutil.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "dateutil.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "dateutil.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.compat.<module>" -> "platform.python_implementation" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.numpy.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.compat.numpy.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.compat.numpy.<module>" -> "distutils.version.LooseVersion.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.compat.numpy.<module>" -> "distutils.version.LooseVersion.__lt__" [color = "#b2b2b2ff", label = "8"];
    "pandas.compat.numpy.<module>" -> "distutils.version.LooseVersion.__str__" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.numpy.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.Version" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.StrictVersion" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.LooseVersion" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.StrictVersion" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.StrictVersion" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "distutils.version.LooseVersion" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "distutils.version.LooseVersion.__init__" -> "distutils.version.LooseVersion.parse" [color = "#b2b2b2ff", label = "23"];
    "distutils.version.LooseVersion.parse" -> "distutils.version.<listcomp>" [color = "#b2b2b2ff", label = "23"];
    "distutils.version.LooseVersion.__lt__" -> "distutils.version.LooseVersion._cmp" [color = "#b2b2b2ff", label = "13"];
    "distutils.version.LooseVersion._cmp" -> "distutils.version.LooseVersion.__init__" [color = "#b2b2b2ff", label = "7"];
    "pandas._libs.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "pandas._libs.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas._libs.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas._libs.tslibs.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "8"];
    "pandas._libs.tslibs.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas._libs.tslibs.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "dateutil.tz.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "dateutil.tz.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "dateutil.tz.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "dateutil.tz.<module>" -> "dateutil.tz.DeprecatedTzFormatWarning" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "dateutil.tz.tz.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "dateutil.tz.tz.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "6"];
    "dateutil.tz.tz.<module>" -> "six.add_metaclass" [color = "#b2b2b2ff", label = "3"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzutc" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "six.wrapper" [color = "#b2b2b2ff", label = "3"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz._factories.__call__" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzoffset" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzlocal" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz._ttinfo" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz._tzfile" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzfile" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzrange" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzstr" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz._tzicalvtzcomp" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz._tzicalvtz" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.tzical" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz.__get_gettz" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.<module>" -> "dateutil.tz.tz._nullcontext" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "six.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "six.<module>" -> "six._LazyDescr" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.MovedModule" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six._LazyModule" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.MovedAttribute" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six._SixMetaPathImporter" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six._SixMetaPathImporter.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six._MovedItems" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.MovedAttribute.__init__" [color = "#b2b2b2ff", label = "88"];
    "six.<module>" -> "six.MovedModule.__init__" [color = "#b2b2b2ff", label = "46"];
    "six.<module>" -> "six._SixMetaPathImporter._add_module" [color = "#b2b2b2ff", label = "53"];
    "six.<module>" -> "six._MovedItems.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_parse" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_parse.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_error" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_error.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_request" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_request.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_response" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_response.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_robotparser" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib_robotparser.__init__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six.Module_six_moves_urllib" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "six._add_doc" [color = "#b2b2b2ff", label = "8"];
    "six.<module>" -> "six.MovedModule.__get__" [color = "#b2b2b2ff", label = "1"];
    "six.<module>" -> "<module>" [color = "#b23bb2ff", label = "1"];
    "__future__.<module>" -> "__future__._Feature" [color = "#b2b2b2ff", label = "1"];
    "__future__.<module>" -> "__future__._Feature.__init__" [color = "#b2b2b2ff", label = "9"];
    "six.MovedAttribute.__init__" -> "six.MovedAttribute.__init__" [color = "#b2b2b2ff", label = "88"];
    "six.MovedModule.__init__" -> "six.MovedModule.__init__" [color = "#b2b2b2ff", label = "46"];
    "six.Module_six_moves_urllib" -> "six._SixMetaPathImporter._get_module" [color = "#b2b2b2ff", label = "5"];
    "six.MovedModule.__get__" -> "six.MovedModule._resolve" [color = "#b2b2b2ff", label = "2"];
    "six.MovedModule._resolve" -> "six._import_module" [color = "#b2b2b2ff", label = "2"];
    "_find_spec_legacy" -> "six._SixMetaPathImporter.find_module" [color = "#b2b2b2ff", label = "31"];
    "_find_spec_legacy" -> "spec_from_loader" [color = "#b2b2b2ff", label = "1"];
    "six._SixMetaPathImporter.is_package" -> "six._SixMetaPathImporter.__get_module" [color = "#b2b2b2ff", label = "1"];
    "_load_backward_compatible" -> "six._SixMetaPathImporter.load_module" [color = "#b2b2b2ff", label = "1"];
    "six._SixMetaPathImporter.load_module" -> "six._SixMetaPathImporter.__get_module" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "dateutil.tz._common.<module>" -> "dateutil.tz._common._tzinfo" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._common.<module>" -> "dateutil.tz._common.tzrangebase" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._common._tzinfo" -> "dateutil.tz._common._validate_fromutc_inputs" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._common._validate_fromutc_inputs" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "dateutil.tz._common._validate_fromutc_inputs" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "dateutil.tz._common.tzrangebase" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._factories.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "dateutil.tz._factories.<module>" -> "dateutil.tz._factories._TzSingleton" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._factories.<module>" -> "dateutil.tz._factories._TzFactory" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._factories.<module>" -> "dateutil.tz._factories._TzOffsetFactory" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._factories.<module>" -> "dateutil.tz._factories._TzStrFactory" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.win.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "dateutil.tz.tz.tzutc" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.tzutc" -> "dateutil.tz._common._validate_fromutc_inputs" [color = "#b2b2b2ff", label = "1"];
    "six.wrapper" -> "dateutil.tz._factories.__init__" [color = "#b2b2b2ff", label = "3"];
    "dateutil.tz.tz.tzoffset" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.tzoffset" -> "dateutil.tz._common._validate_fromutc_inputs" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz._factories.__init__" -> "weakref.__init__" [color = "#b2b2b2ff", label = "2"];
    "dateutil.tz.tz.tzlocal" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.tzfile" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz._tzicalvtz" -> "dateutil.tz._common.tzname_in_python2" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.__get_gettz" -> "dateutil.tz.tz.GettzFunc" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.__get_gettz" -> "dateutil.tz.tz.GettzFunc.__init__" [color = "#b2b2b2ff", label = "1"];
    "dateutil.tz.tz.GettzFunc.__init__" -> "weakref.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas._config.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas._config.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas._config.config.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas._config.config.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas._config.config.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "2"];
    "pandas._config.config.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas._config.config.<module>" -> "pandas._config.config.OptionError" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "pandas._config.config.DictWrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "pandas._config.config.CallableDynamicDoc" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "pandas._config.config.CallableDynamicDoc.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas._config.config.<module>" -> "pandas._config.config.DictWrapper.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "pandas._config.config.option_context" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.<module>" -> "pandas._config.config.is_type_factory" [color = "#b2b2b2ff", label = "4"];
    "pandas._config.config.<module>" -> "pandas._config.config.is_instance_factory" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "typing.<module>" -> "typing.TypingMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._TypingBase" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.__new__" [color = "#b0b2b2ff", label = "72"];
    "typing.<module>" -> "typing.TypingMeta.__init__" [color = "#b2b2b2ff", label = "10"];
    "typing.<module>" -> "typing._FinalTypingBase" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._ForwardRef" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._TypeAlias" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Any" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Any.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._NoReturn" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._NoReturn.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.TypeVar" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "9"];
    "typing.<module>" -> "typing._Union" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Union.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Optional" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Optional.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.GenericMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Generic" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.GenericMeta.__init__" [color = "#b2b2b2ff", label = "36"];
    "typing.<module>" -> "typing._TypingEmpty" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._TypingEllipsis" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.TupleMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Tuple" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.TupleMeta.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.CallableMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Callable" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.CallableMeta.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._ClassVar" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._ClassVar.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._ProtocolMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._Protocol" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing._ProtocolMeta.__init__" [color = "#b2b2b2ff", label = "7"];
    "typing.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "48"];
    "typing.<module>" -> "typing.Awaitable" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Coroutine" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.AsyncIterable" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.AsyncIterator" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Iterable" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Iterator" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsInt" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsFloat" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsComplex" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsBytes" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsAbs" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.SupportsRound" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Reversible" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Container" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Collection" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.AbstractSet" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.MutableSet" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Mapping" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.MutableMapping" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Sequence" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.MutableSequence" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.ByteString" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.List" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Deque" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Set" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.FrozenSet" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.MappingView" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.KeysView" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.ItemsView" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.ValuesView" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.ContextManager" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "<module>" [color = "#b23bb2ff", label = "1"];
    "typing.<module>" -> "typing.Dict" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.DefaultDict" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Counter" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.ChainMap" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Generator" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.AsyncGenerator" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.Type" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.NamedTupleMeta" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.NamedTuple" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.IO" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.BinaryIO" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.TextIO" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.io" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "typing.<module>" -> "typing._TypeAlias.__init__" [color = "#b2b2b2ff", label = "2"];
    "typing.<module>" -> "re.match" [color = "#b2b2b2ff", label = "1"];
    "typing.<module>" -> "typing.re" [color = "#b2b2b2ff", label = "1"];
    "typing.__new__" -> "typing.__new__" [color = "#aeb2b2ff", label = "553"];
    "typing.__new__" -> "typing._type_vars" [color = "#b1b2b2ff", label = "207"];
    "typing.__new__" -> "typing.<genexpr>" [color = "#a4aeb2ff", label = "2577"];
    "typing.__new__" -> "abc.__new__" [color = "#b1b2b2ff", label = "217"];
    "typing.__new__" -> "typing.GenericMeta.__setattr__" [color = "#abb1b2ff", label = "1294"];
    "typing.__new__" -> "typing._next_in_mro" [color = "#b1b2b2ff", label = "217"];
    "typing.__new__" -> "typing.TupleMeta.__setattr__" [color = "#b1b2b2ff", label = "246"];
    "typing.__new__" -> "typing._make_subclasshook" [color = "#b1b2b2ff", label = "195"];
    "typing.__new__" -> "typing.CallableMeta.__setattr__" [color = "#b2b2b2ff", label = "88"];
    "typing.__new__" -> "typing._ProtocolMeta.__setattr__" [color = "#b2b2b2ff", label = "42"];
    "typing.__new__" -> "typing.GenericMeta._subs_tree" [color = "#b1b2b2ff", label = "129"];
    "typing.__new__" -> "typing.GenericMeta.__hash__" [color = "#b1b2b2ff", label = "232"];
    "typing.__new__" -> "typing.GenericMeta.__eq__" [color = "#b2b2b2ff", label = "85"];
    "typing.__new__" -> "typing._ProtocolMeta._subs_tree" [color = "#b2b2b2ff", label = "1"];
    "typing.__new__" -> "typing._ProtocolMeta.__hash__" [color = "#b2b2b2ff", label = "1"];
    "typing.__new__" -> "typing.TupleMeta._subs_tree" [color = "#b2b2b2ff", label = "30"];
    "typing.__new__" -> "typing.TupleMeta.__hash__" [color = "#b2b2b2ff", label = "51"];
    "typing.__new__" -> "typing._remove_dups_flatten" [color = "#b1b2b2ff", label = "163"];
    "typing.__new__" -> "typing._Union._subs_tree" [color = "#b1b2b2ff", label = "160"];
    "typing.__new__" -> "typing._Union.__hash__" [color = "#b1b2b2ff", label = "198"];
    "typing.__new__" -> "typing._ForwardRef.__hash__" [color = "#b2b2b2ff", label = "67"];
    "typing.__new__" -> "typing.CallableMeta.__eq__" [color = "#b2b2b2ff", label = "10"];
    "typing.__new__" -> "typing.CallableMeta._subs_tree" [color = "#b2b2b2ff", label = "10"];
    "typing.__new__" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "31"];
    "typing.TypeVar.__init__" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "19"];
    "typing.TypeVar.__init__" -> "typing.<genexpr>" [color = "#b2b2b2ff", label = "32"];
    "typing.TypeVar.__init__" -> "typing._type_check" [color = "#b2b2b2ff", label = "3"];
    "typing.<genexpr>" -> "typing._type_check" [color = "#aeb2b2ff", label = "699"];
    "typing.<genexpr>" -> "typing._ForwardRef.__hash__" [color = "#b2b2b2ff", label = "86"];
    "typing.<genexpr>" -> "typing.GenericMeta.__hash__" [color = "#b1b2b2ff", label = "171"];
    "typing.<genexpr>" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "14"];
    "typing.<genexpr>" -> "typing.GenericMeta.__subclasscheck__" [color = "#b2b2b2ff", label = "55"];
    "typing.<genexpr>" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "27"];
    "typing.<genexpr>" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "29"];
    "typing.<genexpr>" -> "typing.TupleMeta.__hash__" [color = "#b2b2b2ff", label = "18"];
    "typing.<genexpr>" -> "typing._Union.__hash__" [color = "#b2b2b2ff", label = "10"];
    "typing.<genexpr>" -> "typing.CallableMeta.__subclasscheck__" [color = "#b2b2b2ff", label = "8"];
    "typing.<genexpr>" -> "typing.TupleMeta.__subclasscheck__" [color = "#b2b2b2ff", label = "18"];
    "typing._Union" -> "typing._tp_cache" [color = "#b2b2b2ff", label = "1"];
    "typing._tp_cache" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "5"];
    "typing._tp_cache" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "5"];
    "typing._tp_cache" -> "functools.wraps" [color = "#b2b2b2ff", label = "5"];
    "typing._tp_cache" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "5"];
    "typing._Optional" -> "typing._tp_cache" [color = "#b2b2b2ff", label = "1"];
    "typing.GenericMeta" -> "typing._tp_cache" [color = "#b2b2b2ff", label = "1"];
    "typing._type_vars" -> "typing._get_type_vars" [color = "#b0b2b2ff", label = "370"];
    "typing.GenericMeta.__setattr__" -> "typing.GenericMeta._abc_negative_cache" [color = "#b1b2b2ff", label = "176"];
    "typing.GenericMeta.__setattr__" -> "typing.GenericMeta._abc_negative_cache_version" [color = "#b1b2b2ff", label = "176"];
    "typing.GenericMeta._abc_negative_cache" -> "typing.GenericMeta.__setattr__" [color = "#b2b2b2ff", label = "22"];
    "typing.GenericMeta._abc_negative_cache_version" -> "typing.GenericMeta.__setattr__" [color = "#b2b2b2ff", label = "22"];
    "typing.TupleMeta" -> "typing._tp_cache" [color = "#b2b2b2ff", label = "1"];
    "typing.TupleMeta.__setattr__" -> "typing.TupleMeta._abc_negative_cache" [color = "#b2b2b2ff", label = "31"];
    "typing.TupleMeta.__setattr__" -> "typing.TupleMeta._abc_negative_cache_version" [color = "#b2b2b2ff", label = "31"];
    "typing.TupleMeta._abc_negative_cache" -> "typing.TupleMeta.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "typing.TupleMeta._abc_negative_cache_version" -> "typing.TupleMeta.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "typing.CallableMeta" -> "typing._tp_cache" [color = "#b2b2b2ff", label = "1"];
    "typing.CallableMeta.__setattr__" -> "typing.CallableMeta._abc_negative_cache" [color = "#b2b2b2ff", label = "11"];
    "typing.CallableMeta.__setattr__" -> "typing.CallableMeta._abc_negative_cache_version" [color = "#b2b2b2ff", label = "11"];
    "typing._ProtocolMeta.__setattr__" -> "typing._ProtocolMeta._abc_negative_cache" [color = "#b2b2b2ff", label = "8"];
    "typing._ProtocolMeta.__setattr__" -> "typing._ProtocolMeta._abc_negative_cache_version" [color = "#b2b2b2ff", label = "8"];
    "typing._ProtocolMeta._abc_negative_cache" -> "typing._ProtocolMeta.__setattr__" [color = "#b2b2b2ff", label = "7"];
    "typing._ProtocolMeta._abc_negative_cache_version" -> "typing._ProtocolMeta.__setattr__" [color = "#b2b2b2ff", label = "7"];
    "typing.inner" -> "typing.GenericMeta.__hash__" [color = "#afb2b2ff", label = "470"];
    "typing.inner" -> "typing.GenericMeta.__getitem__" [color = "#b1b2b2ff", label = "129"];
    "typing.inner" -> "typing._ProtocolMeta.__hash__" [color = "#b2b2b2ff", label = "2"];
    "typing.inner" -> "typing._ProtocolMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "typing.inner" -> "typing.TupleMeta.__hash__" [color = "#b1b2b2ff", label = "106"];
    "typing.inner" -> "typing.TupleMeta.__getitem__" [color = "#b1b2b2ff", label = "60"];
    "typing.inner" -> "typing._Union.__hash__" [color = "#b0b2b2ff", label = "380"];
    "typing.inner" -> "typing._Union.__getitem__" [color = "#b1b2b2ff", label = "165"];
    "typing.inner" -> "typing._Optional.__getitem__" [color = "#b1b2b2ff", label = "68"];
    "typing.inner" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "68"];
    "typing.inner" -> "typing.CallableMeta.__getitem_inner__" [color = "#b2b2b2ff", label = "10"];
    "typing.inner" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "10"];
    "typing.inner" -> "typing._ForwardRef.__hash__" [color = "#b2b2b2ff", label = "11"];
    "typing.GenericMeta.__getitem__" -> "typing.<genexpr>" [color = "#b0b2b2ff", label = "312"];
    "typing.GenericMeta.__getitem__" -> "typing._no_slots_copy" [color = "#b1b2b2ff", label = "129"];
    "typing.GenericMeta.__getitem__" -> "typing.__new__" [color = "#b0b2b2ff", label = "129"];
    "typing.GenericMeta.__getitem__" -> "typing.GenericMeta.__init__" [color = "#b1b2b2ff", label = "129"];
    "typing.GenericMeta.__getitem__" -> "typing.TupleMeta.__eq__" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta.__getitem__" -> "typing.CallableMeta.__eq__" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta.__getitem__" -> "typing.GenericMeta.__eq__" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta.__getitem__" -> "typing._ProtocolMeta.__eq__" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta.__getitem__" -> "typing._check_generic" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta.__getitem__" -> "typing._type_vars" [color = "#b1b2b2ff", label = "123"];
    "typing.GenericMeta._subs_tree" -> "typing._subs_tree" [color = "#b1b2b2ff", label = "216"];
    "typing._subs_tree" -> "typing._replace_arg" [color = "#adb2b2ff", label = "924"];
    "typing._get_type_vars" -> "typing.GenericMeta._get_type_vars" [color = "#b1b2b2ff", label = "134"];
    "typing._get_type_vars" -> "typing.TypeVar._get_type_vars" [color = "#b1b2b2ff", label = "113"];
    "typing._get_type_vars" -> "typing._ProtocolMeta._get_type_vars" [color = "#b2b2b2ff", label = "6"];
    "typing._get_type_vars" -> "typing.TupleMeta._get_type_vars" [color = "#b2b2b2ff", label = "19"];
    "typing._get_type_vars" -> "typing._Any._get_type_vars" [color = "#b2b2b2ff", label = "27"];
    "typing._get_type_vars" -> "typing._ForwardRef._get_type_vars" [color = "#b2b2b2ff", label = "45"];
    "typing._get_type_vars" -> "typing.CallableMeta._get_type_vars" [color = "#b2b2b2ff", label = "13"];
    "typing._get_type_vars" -> "typing._Union._get_type_vars" [color = "#b2b2b2ff", label = "26"];
    "typing.GenericMeta._get_type_vars" -> "typing._get_type_vars" [color = "#b2b2b2ff", label = "48"];
    "typing.SupportsInt" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing.SupportsFloat" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing.SupportsComplex" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing.SupportsBytes" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing._ProtocolMeta.__getitem__" -> "typing.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "typing._ProtocolMeta.__getitem__" -> "typing._ProtocolMeta.__eq__" [color = "#b2b2b2ff", label = "2"];
    "typing._ProtocolMeta.__getitem__" -> "typing._no_slots_copy" [color = "#b2b2b2ff", label = "1"];
    "typing._ProtocolMeta.__getitem__" -> "typing.__new__" [color = "#b1b2b2ff", label = "1"];
    "typing._ProtocolMeta.__getitem__" -> "typing._ProtocolMeta.__init__" [color = "#b2b2b2ff", label = "1"];
    "typing._ProtocolMeta._subs_tree" -> "typing._subs_tree" [color = "#b2b2b2ff", label = "1"];
    "typing.SupportsAbs" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing._ProtocolMeta._get_type_vars" -> "typing._get_type_vars" [color = "#b2b2b2ff", label = "2"];
    "typing.SupportsRound" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing.TupleMeta.__getitem__" -> "typing.<genexpr>" [color = "#b1b2b2ff", label = "176"];
    "typing.TupleMeta.__getitem__" -> "typing.inner" [color = "#b0b2b2ff", label = "30"];
    "typing.TupleMeta.__getitem__" -> "typing._type_vars" [color = "#b2b2b2ff", label = "30"];
    "typing.TupleMeta.__getitem__" -> "typing._no_slots_copy" [color = "#b2b2b2ff", label = "30"];
    "typing.TupleMeta.__getitem__" -> "typing.__new__" [color = "#b1b2b2ff", label = "30"];
    "typing.TupleMeta.__getitem__" -> "typing.TupleMeta.__init__" [color = "#b2b2b2ff", label = "30"];
    "typing.TupleMeta.__getitem__" -> "typing._type_check" [color = "#b2b2b2ff", label = "4"];
    "typing.TupleMeta._subs_tree" -> "typing._subs_tree" [color = "#b2b2b2ff", label = "46"];
    "typing._type_check" -> "typing.TupleMeta.__eq__" [color = "#b2b2b2ff", label = "36"];
    "typing._type_check" -> "typing.__new__" [color = "#b1b2b2ff", label = "45"];
    "typing._type_check" -> "typing._ForwardRef.__init__" [color = "#b2b2b2ff", label = "45"];
    "typing._type_check" -> "typing.GenericMeta.__eq__" [color = "#b1b2b2ff", label = "92"];
    "typing._type_check" -> "typing._ProtocolMeta.__eq__" [color = "#b1b2b2ff", label = "92"];
    "typing._type_check" -> "typing.CallableMeta.__eq__" [color = "#b2b2b2ff", label = "30"];
    "typing.TupleMeta._get_type_vars" -> "typing._get_type_vars" [color = "#b2b2b2ff", label = "3"];
    "typing._replace_arg" -> "typing.TupleMeta._subs_tree" [color = "#b2b2b2ff", label = "21"];
    "typing._replace_arg" -> "typing.GenericMeta._subs_tree" [color = "#b1b2b2ff", label = "103"];
    "typing._replace_arg" -> "typing.CallableMeta._subs_tree" [color = "#b2b2b2ff", label = "21"];
    "typing._replace_arg" -> "typing._Union._subs_tree" [color = "#b2b2b2ff", label = "39"];
    "AsyncContextManager" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing.IO" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "18"];
    "typing.IO" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "typing.BinaryIO" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "typing.BinaryIO" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "2"];
    "typing._Union.__getitem__" -> "typing.<genexpr>" [color = "#afb2b2ff", label = "531"];
    "typing._Union.__getitem__" -> "typing.__new__" [color = "#b0b2b2ff", label = "165"];
    "typing._Union.__getitem__" -> "typing._Union.__init__" [color = "#b1b2b2ff", label = "160"];
    "typing._Union.__getitem__" -> "typing._check_generic" [color = "#b2b2b2ff", label = "2"];
    "typing._remove_dups_flatten" -> "typing.<genexpr>" [color = "#a1adb2ff", label = "3112"];
    "typing._remove_dups_flatten" -> "typing._ForwardRef.__hash__" [color = "#b1b2b2ff", label = "172"];
    "typing._remove_dups_flatten" -> "typing.GenericMeta.__hash__" [color = "#b0b2b2ff", label = "433"];
    "typing._remove_dups_flatten" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "68"];
    "typing._remove_dups_flatten" -> "typing.TupleMeta.__hash__" [color = "#b2b2b2ff", label = "50"];
    "typing._remove_dups_flatten" -> "typing._Union.__hash__" [color = "#b2b2b2ff", label = "20"];
    "typing._Union._subs_tree" -> "typing._subs_tree" [color = "#b1b2b2ff", label = "199"];
    "typing._Union._subs_tree" -> "typing._remove_dups_flatten" [color = "#b1b2b2ff", label = "199"];
    "typing.TextIO" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "typing.TextIO" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "typing._Optional.__getitem__" -> "typing._type_check" [color = "#b2b2b2ff", label = "68"];
    "typing._Optional.__getitem__" -> "typing.inner" [color = "#b0b2b2ff", label = "68"];
    "re.match" -> "re._compile" [color = "#a7b0b2ff", label = "1490"];
    "pandas._config.dates.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.dates.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas._config.dates.<module>" -> "contextlib.helper" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.dates.<module>" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.dates.<module>" -> "pandas._config.config.inner" [color = "#b2b2b2ff", label = "2"];
    "pandas._config.dates.<module>" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "1"];
    "contextlib.helper" -> "contextlib._GeneratorContextManager.__init__" [color = "#b2b2b2ff", label = "51"];
    "contextlib._GeneratorContextManager.__enter__" -> "pandas._config.config.config_prefix" [color = "#b2b2b2ff", label = "19"];
    "contextlib._GeneratorContextManager.__enter__" -> "matplotlib._open_file_or_url" [color = "#b2b2b2ff", label = "27"];
    "contextlib._GeneratorContextManager.__enter__" -> "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" [color = "#b2b2b2ff", label = "5"];
    "pandas._config.config.config_prefix" -> "pandas._config.config.wrap" [color = "#b2b2b2ff", label = "57"];
    "pandas._config.config.inner" -> "pandas._config.config.register_option" [color = "#b2b2b2ff", label = "54"];
    "pandas._config.config.register_option" -> "pandas._config.config.inner" [color = "#b2b2b2ff", label = "36"];
    "pandas._config.config.register_option" -> "re.match" [color = "#b1b2b2ff", label = "139"];
    "pandas._config.config.register_option" -> "__new__" [color = "#b2b2b2ff", label = "54"];
    "pandas._config.config.register_option" -> "pandas._config.config.is_nonnegative_int" [color = "#b2b2b2ff", label = "3"];
    "pandas._config.config.register_option" -> "pandas.core.config_init.register_plotting_backend_cb" [color = "#b2b2b2ff", label = "1"];
    "contextlib._GeneratorContextManager.__exit__" -> "pandas._config.config.config_prefix" [color = "#b2b2b2ff", label = "19"];
    "contextlib._GeneratorContextManager.__exit__" -> "matplotlib._open_file_or_url" [color = "#b2b2b2ff", label = "27"];
    "contextlib._GeneratorContextManager.__exit__" -> "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" [color = "#b2b2b2ff", label = "5"];
    "pandas._config.display.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.display.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas._config.display.<module>" -> "contextlib.helper" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.display.<module>" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.display.<module>" -> "pandas._config.display.detect_console_encoding" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.display.<module>" -> "pandas._config.config.inner" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.display.<module>" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.localization.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas._config.localization.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "locale.getlocale" -> "locale._parse_localename" [color = "#b2b2b2ff", label = "2"];
    "locale._parse_localename" -> "locale.normalize" [color = "#b2b2b2ff", label = "2"];
    "calendar._localized_month.__getitem__" -> "calendar.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "re._subx" -> "re._compile_repl" [color = "#b2b2b2ff", label = "3"];
    "re._compile_repl" -> "sre_parse.parse_template" [color = "#b2b2b2ff", label = "3"];
    "sre_parse.parse_template" -> "sre_parse.Tokenizer.__init__" [color = "#b2b2b2ff", label = "3"];
    "sre_parse.parse_template" -> "sre_parse.Tokenizer.get" [color = "#b2b2b2ff", label = "9"];
    "sre_parse.parse_template" -> "sre_parse.addgroup" [color = "#b2b2b2ff", label = "2"];
    "dateutil.relativedelta.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "dateutil.relativedelta.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "dateutil.relativedelta.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "dateutil.relativedelta.<module>" -> "dateutil.relativedelta.<genexpr>" [color = "#b2b2b2ff", label = "8"];
    "dateutil.relativedelta.<module>" -> "dateutil.relativedelta.relativedelta" [color = "#b2b2b2ff", label = "1"];
    "dateutil._common.<module>" -> "dateutil._common.weekday" [color = "#b2b2b2ff", label = "1"];
    "dateutil.relativedelta.<genexpr>" -> "dateutil._common.weekday.__init__" [color = "#b2b2b2ff", label = "7"];
    "dateutil.parser.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "7"];
    "dateutil.parser.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "dateutil.parser.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "dateutil.parser.<module>" -> "dateutil.parser.__deprecate_private_class" [color = "#b2b2b2ff", label = "3"];
    "dateutil.parser.<module>" -> "dateutil.parser.__deprecated_private_func" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "dateutil.parser._parser.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser._timelex" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser._resultbase" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser.parserinfo" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser._ymd" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser.parser" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser.parser.__init__" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser._tzparser" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser.ParserError" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.<module>" -> "dateutil.parser._parser.UnknownTimezoneWarning" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser._timelex" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "dateutil.parser._parser.parser" -> "dateutil.parser._parser._result" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.parser.__init__" -> "dateutil.parser._parser.parserinfo.__init__" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser.parserinfo.__init__" -> "dateutil.parser._parser.parserinfo._convert" [color = "#b2b2b2ff", label = "7"];
    "dateutil.parser._parser._tzparser" -> "dateutil.parser._parser._result" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser._parser._result" -> "dateutil.parser._parser._attr" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser.isoparser.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "dateutil.parser.isoparser.<module>" -> "dateutil.parser.isoparser.isoparser" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser.isoparser.<module>" -> "dateutil.parser.isoparser.isoparser.__init__" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser.isoparser.isoparser" -> "dateutil.parser.isoparser._takes_ascii" [color = "#b2b2b2ff", label = "4"];
    "dateutil.parser.isoparser.isoparser" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "dateutil.parser.isoparser._takes_ascii" -> "functools.wraps" [color = "#b2b2b2ff", label = "4"];
    "dateutil.parser.isoparser._takes_ascii" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "4"];
    "dateutil.parser.__deprecate_private_class" -> "dateutil.parser.private_class" [color = "#b2b2b2ff", label = "3"];
    "dateutil.parser.__deprecated_private_func" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "dateutil.parser.__deprecated_private_func" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "dateutil.parser.__deprecated_private_func" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "fractions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "fractions.<module>" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "1"];
    "fractions.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "fractions.<module>" -> "fractions.Fraction" [color = "#b2b2b2ff", label = "1"];
    "fractions.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "fractions.Fraction" -> "fractions._operator_fallbacks" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.config_init.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.config_init.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.config_init.<module>" -> "contextlib.helper" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.config_init.<module>" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.config_init.<module>" -> "pandas._config.config.inner" [color = "#b2b2b2ff", label = "49"];
    "pandas.core.config_init.<module>" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.config_init.<module>" -> "pandas._config.config.is_one_of_factory" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.config_init.<module>" -> "pandas._config.config.is_instance_factory" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.config_init.<module>" -> "pandas.core.config_init.is_terminal" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.config_init.<module>" -> "pandas._config.config.deprecate_option" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config.is_one_of_factory" -> "pandas._config.config.<listcomp>" [color = "#b2b2b2ff", label = "16"];
    "pandas._config.config.deprecate_option" -> "__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "24"];
    "pandas.core.api.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "pandas.core.dtypes.dtypes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.dtypes.dtypes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "pandas.core.dtypes.dtypes.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.Registry" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.Registry.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.PandasExtensionDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.CategoricalDtypeType" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.CategoricalDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.DatetimeTZDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.PeriodDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.<module>" -> "pandas.core.dtypes.dtypes.IntervalDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas._typing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas._typing.<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "5"];
    "pandas._typing.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas._typing.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "14"];
    "pandas._typing.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "typing._ForwardRef.__init__" -> "typing._ForwardRef.__init__" [color = "#b2b2b2ff", label = "45"];
    "typing.GenericMeta.__subclasscheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "146"];
    "_weakrefset.WeakSet.__contains__" -> "typing.GenericMeta.__hash__" [color = "#b2b2b2ff", label = "7"];
    "_weakrefset.WeakSet.__contains__" -> "typing.GenericMeta.__eq__" [color = "#b2b2b2ff", label = "9"];
    "_weakrefset.WeakSet.__contains__" -> "typing.TupleMeta.__hash__" [color = "#b2b2b2ff", label = "1"];
    "_weakrefset.WeakSet.__contains__" -> "typing.TupleMeta.__eq__" [color = "#b2b2b2ff", label = "3"];
    "_weakrefset.WeakSet.__contains__" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "1"];
    "_weakrefset.WeakSet.add" -> "typing.GenericMeta.__hash__" [color = "#b2b2b2ff", label = "9"];
    "_weakrefset.WeakSet.add" -> "typing.TupleMeta.__hash__" [color = "#b2b2b2ff", label = "1"];
    "_weakrefset.WeakSet.add" -> "typing.CallableMeta.__hash__" [color = "#b2b2b2ff", label = "1"];
    "typing.CallableMeta.__getitem__" -> "typing.inner" [color = "#b0b2b2ff", label = "36"];
    "typing.CallableMeta.__getitem__" -> "typing.<genexpr>" [color = "#b2b2b2ff", label = "32"];
    "typing.CallableMeta.__getitem__" -> "typing.CallableMeta.__eq__" [color = "#b2b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem__" -> "typing._type_vars" [color = "#b2b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem__" -> "typing._no_slots_copy" [color = "#b2b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem__" -> "typing.__new__" [color = "#b1b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem__" -> "typing.CallableMeta.__init__" [color = "#b2b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem_inner__" -> "typing._type_check" [color = "#b2b2b2ff", label = "10"];
    "typing.CallableMeta.__getitem_inner__" -> "typing.<genexpr>" [color = "#b2b2b2ff", label = "18"];
    "typing.CallableMeta.__getitem_inner__" -> "typing.inner" [color = "#b1b2b2ff", label = "10"];
    "typing.CallableMeta._subs_tree" -> "typing._subs_tree" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.dtypes.base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.dtypes.base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.dtypes.base.<module>" -> "pandas.core.dtypes.base.ExtensionDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.PerformanceWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.UnsupportedFunctionCall" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.UnsortedIndexError" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.ParserError" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.DtypeWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.EmptyDataError" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.ParserWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.MergeError" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.AccessorRegistrationWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.errors.<module>" -> "pandas.errors.AbstractMethodError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.generic.<module>" -> "pandas.core.dtypes.generic.create_pandas_abc_type" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.dtypes.generic.<module>" -> "pandas.core.dtypes.generic._ABCGeneric" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.base.ExtensionDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.dtypes.inference.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.dtypes.dtypes.Registry" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.dtypes.dtypes.PandasExtensionDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.dtypes.dtypes.CategoricalDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "7"];
    "pandas.core.dtypes.dtypes.register_extension_dtype" -> "pandas.core.dtypes.dtypes.Registry.register" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.dtypes.dtypes.DatetimeTZDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.dtypes.dtypes.DatetimeTZDtype" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.PeriodDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.dtypes.dtypes.PeriodDtype" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "sre_parse.<listcomp>" -> "sre_parse.SubPattern.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.dtypes.IntervalDtype" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.IntervalDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.dtypes.missing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.core.dtypes.missing.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.missing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.dtypes.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.dtypes.common.<module>" -> "pandas.core.dtypes.common.<setcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.dtypes.common.<setcomp>" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "9"];
    "numpy.core._dtype._name_get" -> "numpy.core._dtype._kind_name" [color = "#b2b2b2ff", label = "79"];
    "numpy.core._dtype._name_get" -> "numpy.core._dtype._name_includes_bit_suffix" [color = "#b2b2b2ff", label = "79"];
    "numpy.core._dtype._name_includes_bit_suffix" -> "numpy.core.numerictypes.issubdtype" [color = "#b2b2b2ff", label = "27"];
    "numpy.core.numerictypes.issubdtype" -> "numpy.core.numerictypes.issubclass_" [color = "#b2b2b2ff", label = "54"];
    "pandas.core.algorithms.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "12"];
    "pandas.core.algorithms.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "pandas.core.algorithms.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "7"];
    "pandas.core.algorithms.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.algorithms.<module>" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.core.algorithms.SelectN" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.core.algorithms.SelectNSeries" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.core.algorithms.SelectNFrame" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.algorithms.<module>" -> "pandas.core.algorithms._view_wrapper" [color = "#b2b2b2ff", label = "12"];
    "pandas.util.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.util.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.util.<module>" -> "pandas.util._testing" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.util._decorators.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.util._decorators.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "6"];
    "pandas.util._decorators.<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "1"];
    "pandas.util._decorators.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "11"];
    "pandas.util._decorators.<module>" -> "pandas.util._decorators.Substitution" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.<module>" -> "pandas.util._decorators.Appender" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.Appender" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.util.hashing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.core.util.hashing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.util.hashing.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.util.hashing.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.dtypes.cast.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.dtypes.cast.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.dtypes.cast.<module>" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.cast.<module>" -> "numpy.core.getlimits.iinfo.max" [color = "#b2b2b2ff", label = "4"];
    "pandas.util._validators.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.util._validators.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.common.<module>" -> "pandas.core.common.SettingWithCopyError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.common.<module>" -> "pandas.core.common.SettingWithCopyWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.common.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.construction.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "pandas.core.construction.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "9"];
    "pandas.core.indexers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.util._decorators.Appender.__call__" -> "textwrap.dedent" [color = "#afb2b2ff", label = "432"];
    "pandas.core.arrays.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "11"];
    "pandas.core.arrays.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.arrays.base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.core.arrays.base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.arrays.base.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.arrays.base.<module>" -> "pandas.core.arrays.base.ExtensionArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.<module>" -> "pandas.core.arrays.base.ExtensionOpsMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.<module>" -> "pandas.core.arrays.base.ExtensionScalarOpsMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.numpy.function.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.compat.numpy.function.<module>" -> "pandas.compat.numpy.function.CompatValidator" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.numpy.function.<module>" -> "pandas.compat.numpy.function.CompatValidator.__init__" [color = "#b2b2b2ff", label = "24"];
    "pandas.compat.numpy.function.<module>" -> "distutils.version.LooseVersion.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.compat.numpy.function.<module>" -> "distutils.version.LooseVersion.__ge__" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.numpy.function.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "distutils.version.LooseVersion.__ge__" -> "distutils.version.LooseVersion._cmp" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "pandas.core.ops.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "pandas.core.ops.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.ops.array_ops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.ops.array_ops.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.ops.array_ops.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.ops.array_ops.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.core.ops.missing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.ops.missing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.ops.dispatch.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.ops.dispatch.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.ops.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.ops.docstrings.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.ops.docstrings.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.ops.mask_ops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.ops.mask_ops.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "12"];
    "pandas.core.ops.methods.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.missing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.missing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.sorting.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.sorting.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.sorting.<module>" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.sorting.<module>" -> "numpy.core.getlimits.iinfo.max" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.sorting.<module>" -> "pandas.core.sorting._KeyMapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.ExtensionArray" -> "typing.inner" [color = "#b1b2b2ff", label = "8"];
    "pandas.core.arrays.base.ExtensionArray" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.ExtensionArray" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.ExtensionArray" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.ExtensionArray" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.base.ExtensionArray" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.core.arrays.boolean.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.arrays.boolean.BooleanDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.arrays.boolean.BooleanArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.arrays.base._add_logical_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.<module>" -> "pandas.core.arrays.base._add_arithmetic_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.core.nanops.<module>" -> "pandas.compat._optional.import_optional_dependency" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "pandas._config.config.CallableDynamicDoc.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.set_use_bottleneck" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.disallow" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.bottleneck_switch" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "22"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.disallow.__init__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.disallow.__call__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.bottleneck_switch.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.bottleneck_switch.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops._nanminmax" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.nanops.<module>" -> "pandas.core.nanops.make_nancomp" [color = "#b2b2b2ff", label = "6"];
    "pandas.compat._optional.import_optional_dependency" -> "importlib.import_module" [color = "#b1b2b2ff", label = "1"];
    "importlib.import_module" -> "_gcd_import" [color = "#b1b2b2ff", label = "16"];
    "_gcd_import" -> "_sanity_check" [color = "#b2b2b2ff", label = "16"];
    "_gcd_import" -> "_find_and_load" [color = "#7b66b2ff", label = "16"];
    "pandas._config.config.CallableDynamicDoc.__call__" -> "pandas._config.config._get_option" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._get_option" -> "pandas._config.config._get_single_key" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._get_option" -> "pandas._config.config._get_root" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._get_single_key" -> "pandas._config.config._select_options" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._get_single_key" -> "pandas._config.config._warn_if_deprecated" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._get_single_key" -> "pandas._config.config._translate_key" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._warn_if_deprecated" -> "pandas._config.config._get_deprecated_option" [color = "#b2b2b2ff", label = "1"];
    "pandas._config.config._translate_key" -> "pandas._config.config._get_deprecated_option" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.disallow.__init__" -> "pandas.core.nanops.<genexpr>" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.nanops.<genexpr>" -> "pandas.core.dtypes.common.pandas_dtype" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.dtypes.common.pandas_dtype" -> "pandas.core.dtypes.dtypes.Registry.find" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.dtypes.common.pandas_dtype" -> "pandas.core.dtypes.inference.is_hashable" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.dtypes.dtypes.Registry.find" -> "pandas.core.dtypes.dtypes.construct_from_string" [color = "#b2b2b2ff", label = "80"];
    "pandas.core.dtypes.dtypes.construct_from_string" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "20"];
    "pandas.core.nanops.disallow.__call__" -> "functools.wraps" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.nanops.disallow.__call__" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.nanops.bottleneck_switch.__call__" -> "functools.wraps" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.nanops.bottleneck_switch.__call__" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.nanops._nanminmax" -> "pandas.core.nanops.bottleneck_switch.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.nanops._nanminmax" -> "pandas.core.nanops.bottleneck_switch.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.masked.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.arrays.masked.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.masked.<module>" -> "pandas.core.arrays.masked.BaseMaskedArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.boolean.BooleanArray" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.arrays.base._add_logical_ops" -> "pandas.core.arrays.boolean._create_logical_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.boolean._create_logical_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.boolean._create_comparison_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.datetimelike._datetimelike_array_cmp" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.integer._create_comparison_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.numpy_._create_arithmetic_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.sparse.array._create_comparison_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_comparison_ops" -> "pandas.core.arrays.string_._create_arithmetic_method" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.boolean._create_comparison_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.base._add_arithmetic_ops" -> "pandas.core.arrays.boolean._create_arithmetic_method" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.base._add_arithmetic_ops" -> "pandas.core.arrays.integer._create_arithmetic_method" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.base._add_arithmetic_ops" -> "pandas.core.arrays.numpy_._create_arithmetic_method" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.base._add_arithmetic_ops" -> "pandas.core.arrays.sparse.array._create_arithmetic_method" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.boolean._create_arithmetic_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.categorical.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "26"];
    "pandas.core.arrays.categorical.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.core.arrays.categorical.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.<module>" -> "pandas.core.arrays.categorical.Categorical" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.categorical.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.<module>" -> "pandas.core.arrays.categorical.CategoricalAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.categorical.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.accessor.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.accessor.<module>" -> "pandas.core.accessor.DirNamesMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.accessor.<module>" -> "pandas.core.accessor.PandasDelegate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.accessor.<module>" -> "pandas.core.accessor.CachedAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.accessor.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.accessor.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.accessor.DirNamesMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.core.base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.base.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.PandasObject" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.NoNewAttributesMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.GroupByError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.DataError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.SpecificationError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.SelectionMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.ShallowMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.<module>" -> "pandas.core.base.IndexOpsMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.SelectionMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.base.ShallowMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.base.IndexOpsMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.base.IndexOpsMixin" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.IndexOpsMixin" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.base.IndexOpsMixin" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.base.IndexOpsMixin" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.base.IndexOpsMixin" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.formats.console.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.core.dtypes.dtypes.CategoricalDtype.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.categorical.Categorical" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.core.arrays.categorical._cat_compare_op" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators.deprecate_kwarg" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.categorical.Categorical" -> "pandas.util._decorators._deprecate_kwarg" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.dtypes.CategoricalDtype.__init__" -> "pandas.core.dtypes.dtypes.CategoricalDtype._finalize" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.dtypes.CategoricalDtype._finalize" -> "pandas.core.dtypes.dtypes.validate_ordered" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.categorical._cat_compare_op" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.categorical._cat_compare_op" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops.common.wrapper" -> "pandas.core.ops.common._unpack_zerodim_and_defer" [color = "#b1b2b2ff", label = "98"];
    "pandas.core.ops.common._unpack_zerodim_and_defer" -> "functools.wraps" [color = "#b1b2b2ff", label = "98"];
    "pandas.core.ops.common._unpack_zerodim_and_defer" -> "functools.update_wrapper" [color = "#b1b2b2ff", label = "98"];
    "pandas.util._decorators._deprecate_kwarg" -> "functools.wraps" [color = "#b2b2b2ff", label = "7"];
    "pandas.util._decorators._deprecate_kwarg" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "7"];
    "pandas.util._decorators._deprecate_kwarg" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "7"];
    "pandas.util._decorators._deprecate_kwarg" -> "typing.cast" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.accessor.add_delegate_accessors" -> "pandas.core.accessor._add_delegate_accessors" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.accessor._add_delegate_accessors" -> "pandas.core.accessor._create_delegator_method" [color = "#b2b2b2ff", label = "67"];
    "pandas.core.accessor._add_delegate_accessors" -> "pandas.core.accessor._create_delegator_property" [color = "#b1b2b2ff", label = "118"];
    "pandas.core.arrays.datetimes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.core.arrays.datetimes.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.datetimes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.datetimes.<module>" -> "pandas.core.arrays.datetimes.DatetimeArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "25"];
    "pandas.core.arrays.datetimelike.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "pandas.core.arrays.datetimelike.AttributesMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "pandas.core.arrays.datetimelike.DatelikeOps" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "pandas.core.arrays.datetimelike.TimelikeOps" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.<module>" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.tseries.frequencies.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.tseries.frequencies.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Day.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Hour.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Minute.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Second.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Milli.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Micro.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.offsets.Nano.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.frequencies._FrequencyInferer" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.frequencies.<module>" -> "pandas.tseries.frequencies._TimedeltaFrequencyInferer" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.tseries.offsets.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.DateOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.SingleConstructorOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets._CustomMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessDay" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessHourMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessHour" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.CustomBusinessDay" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.CustomBusinessHour" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.MonthOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.MonthEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.MonthBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessMonthEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessMonthBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets._CustomBusinessMonth" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.tseries.offsets.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.CustomBusinessMonthEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.tseries.offsets.<module>" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.CustomBusinessMonthBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.SemiMonthOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.SemiMonthEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.SemiMonthBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Week" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets._WeekOfMonthMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.WeekOfMonth" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.LastWeekOfMonth" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.QuarterOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BQuarterEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BQuarterBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.QuarterEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.QuarterBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.YearOffset" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BYearEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BYearBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.YearEnd" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.YearBegin" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.FY5253" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.FY5253Quarter" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Easter" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Tick" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Day" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Hour" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Minute" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Second" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Milli" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Micro" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.Nano" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.BusinessDay.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.<module>" -> "pandas.tseries.offsets.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.DateOffset" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.apply_wraps" -> "functools.wraps" [color = "#b2b2b2ff", label = "16"];
    "pandas.tseries.offsets.apply_wraps" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "16"];
    "pandas.tseries.offsets.BusinessDay" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.BusinessHourMixin" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "3"];
    "pandas.tseries.offsets.CustomBusinessDay" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.MonthOffset" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets._CustomBusinessMonth" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.SemiMonthOffset" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.Week" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets._WeekOfMonthMixin" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.QuarterOffset" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.tseries.offsets.QuarterOffset" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.YearOffset" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.FY5253" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.FY5253Quarter" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.Easter" -> "pandas.tseries.offsets.apply_wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.tseries.offsets.Tick" -> "pandas.tseries.offsets._tick_comp" [color = "#b2b2b2ff", label = "4"];
    "pandas.tseries.frequencies._FrequencyInferer" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.core.arrays.datetimelike.AttributesMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.arrays.datetimelike.DatelikeOps" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.DatelikeOps" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.TimelikeOps" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.arrays.datetimelike.TimelikeOps" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "pandas.core.ops.invalid.make_invalid_op" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.datetimelike._datetimelike_array_cmp" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.datetimelike._datetimelike_array_cmp" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.datetimelike._datetimelike_array_cmp" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays._ranges.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.arrays._ranges.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.arrays.datetimes.DatetimeArray" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.arrays.datetimes.DatetimeArray" -> "pandas.core.arrays.datetimes._field_accessor" [color = "#b2b2b2ff", label = "20"];
    "pandas.core.arrays.integer.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.core.arrays.integer.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "pandas.core.arrays.integer._IntegerDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "pandas.core.arrays.integer.IntegerArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "pandas.core.arrays.base._add_arithmetic_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.<module>" -> "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.tools.numeric.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.tools.numeric.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.integer.IntegerArray" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.arrays.integer._create_arithmetic_method" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.integer._create_arithmetic_method" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.integer._create_arithmetic_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.arrays.integer._create_comparison_method" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.integer._create_comparison_method" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.integer._create_comparison_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.interval.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.core.arrays.interval.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.interval.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.interval.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.interval.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.interval.<module>" -> "pandas.core.arrays.interval.IntervalArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.interval.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "28"];
    "pandas.core.indexes.base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.core.indexes.base.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.<module>" -> "pandas.core.indexes.base.InvalidIndexError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "pandas.core.indexes.base.Index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "pandas.core.indexes.base._add_logical_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "pandas.core.indexes.base._add_comparison_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.dtypes.concat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.indexes.frozen.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.indexes.frozen.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.indexes.frozen.<module>" -> "pandas.core.indexes.frozen.FrozenList" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.printing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.formats.printing.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "23"];
    "pandas.core.strings.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "pandas.core.strings.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.strings.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.strings.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.<module>" -> "pandas.core.strings.StringMethods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings.forbid_nonstring_types" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings._forbid_nonstring_types" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.strings.StringMethods" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.strings.StringMethods" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings.copy" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings.do_copy" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings._pat_wrapper" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.strings.StringMethods" -> "pandas.core.strings._noarg_wrapper" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.strings.StringMethods" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.strings._forbid_nonstring_types" -> "functools.wraps" [color = "#b2b2b2ff", label = "58"];
    "pandas.core.strings._forbid_nonstring_types" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "58"];
    "pandas.core.strings._pat_wrapper" -> "pandas.core.strings.forbid_nonstring_types" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.strings._pat_wrapper" -> "pandas.core.strings._forbid_nonstring_types" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.strings._noarg_wrapper" -> "pandas.core.strings.forbid_nonstring_types" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.strings._noarg_wrapper" -> "pandas.core.strings._forbid_nonstring_types" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.indexes.base.Index" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.indexes.base.Index" -> "pandas.core.accessor.CachedAccessor.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "25"];
    "pandas.core.indexes.base.Index" -> "pandas.util._decorators.Appender.__call__" [color = "#b1b2b2ff", label = "25"];
    "pandas.core.indexes.base._add_numeric_methods_disabled" -> "pandas.core.ops.invalid.make_invalid_op" [color = "#b2b2b2ff", label = "70"];
    "pandas.core.indexes.base._add_logical_methods" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base._add_logical_methods" -> "pandas.core.indexes.base._make_logical_function" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base._make_logical_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base._make_logical_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.indexes.base._make_logical_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.indexes.base._make_logical_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base._add_comparison_methods" -> "pandas.core.indexes.base._make_comparison_op" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base._make_comparison_op" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.arrays.interval.IntervalArray" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.arrays.interval.IntervalArray" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.arrays.interval.IntervalArray" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.arrays.numpy_.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "pandas.core.arrays.numpy_.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.<module>" -> "pandas.core.arrays.numpy_.PandasDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.<module>" -> "pandas.core.arrays.numpy_.PandasArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.<module>" -> "pandas.core.arrays.base._add_arithmetic_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.<module>" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.PandasArray" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.PandasArray" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_.PandasArray" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.numpy_._create_arithmetic_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.arrays.period.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "pandas.core.arrays.period.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.arrays.period.<module>" -> "pandas.core.arrays.period.PeriodArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.period.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.arrays.period.PeriodArray" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.arrays.period.PeriodArray" -> "pandas.core.arrays.period._field_accessor" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.arrays.period.PeriodArray" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.sparse.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "pandas.core.arrays.sparse.accessor.BaseAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "pandas.core.arrays.sparse.accessor.SparseAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.accessor.<module>" -> "pandas.core.arrays.sparse.accessor.SparseFrameAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "18"];
    "pandas.core.arrays.sparse.array.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.arrays.sparse.array.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.arrays.sparse.array.<module>" -> "pandas.core.arrays.sparse.array.SparseArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array.<module>" -> "pandas.core.arrays.base._add_arithmetic_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array.<module>" -> "pandas.core.arrays.sparse.array._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array.<module>" -> "pandas.core.arrays.sparse.array._add_unary_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.dtype.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.arrays.sparse.dtype.<module>" -> "pandas.core.arrays.sparse.dtype.SparseDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.dtype.<module>" -> "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.dtype.SparseDtype" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array.SparseArray" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array._create_arithmetic_method" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.arrays.sparse.array._create_arithmetic_method" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.arrays.sparse.array._create_arithmetic_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.arrays.sparse.array._add_comparison_ops" -> "pandas.core.arrays.sparse.array._create_comparison_method" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.sparse.array._add_comparison_ops" -> "pandas.core.arrays.sparse.array._create_arithmetic_method" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array._add_comparison_ops" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.sparse.array._create_comparison_method" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.arrays.sparse.array._create_comparison_method" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.arrays.sparse.array._create_comparison_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.arrays.sparse.array._add_unary_ops" -> "pandas.core.arrays.sparse.array._create_unary_method" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.arrays.sparse.array._create_unary_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.arrays.string_.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.core.arrays.string_.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.string_.<module>" -> "pandas.core.arrays.string_.StringDtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.string_.<module>" -> "pandas.core.dtypes.dtypes.register_extension_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.string_.<module>" -> "pandas.core.arrays.string_.StringArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.string_.<module>" -> "pandas.core.arrays.string_._add_arithmetic_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.string_.<module>" -> "pandas.core.arrays.base._add_comparison_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.string_._add_arithmetic_ops" -> "pandas.core.arrays.string_._create_arithmetic_method" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.arrays.string_._create_arithmetic_method" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.arrays.timedeltas.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.core.arrays.timedeltas.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.arrays.timedeltas.<module>" -> "pandas.core.arrays.timedeltas.TimedeltaArray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.arrays.timedeltas.TimedeltaArray" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.arrays.timedeltas.TimedeltaArray" -> "pandas.core.arrays.timedeltas._field_accessor" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.groupby.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.groupby.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.groupby.generic.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "20"];
    "pandas.core.groupby.generic.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.groupby.generic.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.groupby.generic.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.generic.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.generic.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.core.groupby.generic.<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.groupby.generic.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.generic.<module>" -> "pandas.core.groupby.generic.pin_whitelisted_properties" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.<module>" -> "pandas.core.groupby.generic.SeriesGroupBy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.generic.<module>" -> "pandas.core.groupby.generic.pinner" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.<module>" -> "pandas.core.groupby.generic.DataFrameGroupBy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "36"];
    "pandas.core.frame.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.core.frame.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.<module>" -> "pandas.core.frame.DataFrame" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "pandas.core.generic._setup_axes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "pandas.core.generic._add_numeric_operations" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "pandas.core.generic._add_series_or_dataframe_operations" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "pandas.core.ops.methods.add_flex_arithmetic_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.<module>" -> "pandas.core.ops.methods.add_special_arithmetic_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "29"];
    "pandas.core.generic.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "pandas.core.generic.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.generic.<module>" -> "pandas.core.generic.NDFrame" [color = "#b2b2b2ff", label = "1"];
    "json.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "json.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "json.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "json.<module>" -> "json.encoder.JSONEncoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "json.<module>" -> "json.decoder.JSONDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "json.decoder.<module>" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "2"];
    "json.decoder.<module>" -> "json.decoder.JSONDecodeError" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "2"];
    "json.decoder.<module>" -> "json.decoder.JSONDecoder" [color = "#b2b2b2ff", label = "1"];
    "json.scanner.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "json.scanner.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "json.scanner.<module>" -> "enum.RegexFlag.__or__" [color = "#b2b2b2ff", label = "2"];
    "json.scanner.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "sre_parse._class_escape" -> "sre_parse.Tokenizer.getwhile" [color = "#b2b2b2ff", label = "4"];
    "sre_parse.Tokenizer.getwhile" -> "sre_parse.Tokenizer.__next" [color = "#b2b2b2ff", label = "8"];
    "json.encoder.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "json.encoder.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "3"];
    "json.encoder.<module>" -> "json.encoder.JSONEncoder" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.indexes.api.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "pandas.core.indexes.api.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.indexes.category.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.core.indexes.category.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.category.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.extension.inherit_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.category.CategoricalIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.extension.wrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.category.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.extension.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "pandas.core.indexes.extension.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.indexes.extension.<module>" -> "pandas.core.indexes.extension.ExtensionIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.extension.ExtensionIndex" -> "pandas.core.indexes.extension._make_wrapped_comparison_op" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.extension.ExtensionIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.extension.ExtensionIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.category.CategoricalIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.indexes.category.CategoricalIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.indexes.extension.wrapper" -> "pandas.core.indexes.extension.inherit_from_data" [color = "#b2b2b2ff", label = "55"];
    "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled" -> "pandas.core.ops.invalid.make_invalid_op" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.indexes.base._add_logical_methods_disabled" -> "pandas.core.ops.invalid.make_invalid_op" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.indexes.datetimes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "pandas.core.indexes.datetimes.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.datetimes.DatetimeDelegateMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.extension.inherit_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.datetimes.DatetimeIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.extension.wrapper" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "21"];
    "pandas.core.indexes.datetimelike.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.indexes.datetimelike.<module>" -> "pandas.core.indexes.extension.inherit_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimelike.<module>" -> "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.<module>" -> "pandas.core.indexes.extension.wrapper" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.datetimelike.<module>" -> "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.<module>" -> "pandas.core.indexes.datetimelike.DatetimelikeDelegateMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "pandas.core.indexes.numeric.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.numeric.NumericIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.numeric.IntegerIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.numeric.Int64Index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.base._add_numeric_methods" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.base._add_logical_methods" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.numeric.UInt64Index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.numeric.Float64Index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.NumericIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.numeric.NumericIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.numeric.Int64Index" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base._add_numeric_methods" -> "pandas.core.indexes.base._add_numeric_methods_unary" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.base._add_numeric_methods" -> "pandas.core.indexes.base._add_numeric_methods_binary" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base._add_numeric_methods" -> "pandas.core.indexes.range._add_numeric_methods_binary" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base._add_numeric_methods_unary" -> "pandas.core.indexes.base._make_evaluate_unary" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.indexes.base._add_numeric_methods_binary" -> "pandas.core.indexes.base._make_arithmetic_op" [color = "#b2b2b2ff", label = "42"];
    "pandas.core.indexes.base._make_arithmetic_op" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "42"];
    "pandas.core.indexes.numeric.UInt64Index" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.numeric.UInt64Index" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.numeric.Float64Index" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.numeric.Float64Index" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.tools.timedeltas.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin" -> "pandas.core.indexes.extension.make_wrapped_arith_op" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin" -> "pandas.core.indexes.datetimelike._join_i8_wrapper" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.datetimelike.DatetimelikeDelegateMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.tools.datetimes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.core.tools.datetimes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.tools.datetimes.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "8"];
    "pandas.core.tools.datetimes.<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.tools.datetimes.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.arrays.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.indexes.datetimes.DatetimeIndex" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.DatetimeIndex" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.DatetimeIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.DatetimeIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.datetimes.DatetimeIndex" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "22"];
    "pandas.core.indexes.interval.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.core.indexes.interval.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.interval.<module>" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.interval.<module>" -> "pandas.core.indexes.interval.SetopCheck" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.<module>" -> "pandas.core.indexes.extension.inherit_names" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.interval.<module>" -> "pandas.core.indexes.interval.IntervalIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.<module>" -> "pandas.core.indexes.extension.wrapper" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.interval.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._exceptions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.util._exceptions.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "20"];
    "pandas.core.indexes.multi.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.multi.MultiIndexUIntEngine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.multi.MultiIndexPyIntEngine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.multi.MultiIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.base._add_numeric_methods_add_sub_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.multi.MultiIndex" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.indexes.multi.MultiIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.indexes.multi.MultiIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.indexes.timedeltas.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.core.indexes.timedeltas.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.indexes.timedeltas.TimedeltaDelegateMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.indexes.extension.inherit_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.indexes.timedeltas.TimedeltaIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.indexes.extension.wrapper" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.timedeltas.TimedeltaIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.TimedeltaIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.timedeltas.TimedeltaIndex" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.timedeltas.TimedeltaIndex" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.IntervalIndex" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.indexes.interval.IntervalIndex" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.core.indexes.interval.SetopCheck.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.core.indexes.interval.SetopCheck.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.interval.IntervalIndex" -> "pandas.core.indexes.interval._setop" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.interval._setop" -> "pandas.core.indexes.interval.SetopCheck.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.interval._setop" -> "pandas.core.indexes.interval.SetopCheck.__call__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.period.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "18"];
    "pandas.core.indexes.period.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.indexes.period.PeriodDelegateMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.indexes.period.PeriodIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.indexes.base._add_numeric_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.period.<module>" -> "pandas.core.indexes.base._add_logical_methods_disabled" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.period.PeriodIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.period.PeriodIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.period.PeriodIndex" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.period.PeriodIndex" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "pandas.core.indexes.range.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.range.<module>" -> "pandas.core.indexes.range.RangeIndex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.<module>" -> "pandas.core.indexes.base._add_numeric_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.indexes.range.RangeIndex" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.range.RangeIndex" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.range.RangeIndex" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range._add_numeric_methods_binary" -> "pandas.core.indexes.range._make_evaluate_binop" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.indexes.range._make_evaluate_binop" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.indexes.range._make_evaluate_binop" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.indexes.range._make_evaluate_binop" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.indexing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.indexing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._IndexSlice" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing.IndexingError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing.IndexingMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._NDFrameIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._LocationIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._LocIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._iLocIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._ScalarAccessIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._AtIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "pandas.core.indexing._iAtIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.indexing._LocIndexer" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing._LocIndexer" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.internals.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.internals.blocks.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "19"];
    "pandas.core.internals.blocks.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.Block" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.NonConsolidatableMixIn" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.ExtensionBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.ObjectValuesExtensionBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.NumericBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.FloatOrComplexBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.FloatBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.ComplexBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.IntBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.DatetimeLikeBlockMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.DatetimeBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.DatetimeTZBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.TimeDeltaBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.BoolBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.ObjectBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.<module>" -> "pandas.core.internals.blocks.CategoricalBlock" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.Block" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.internals.blocks.ExtensionBlock" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.internals.blocks.DatetimeTZBlock" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.internals.managers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "pandas.core.internals.managers.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.internals.managers.<module>" -> "pandas.core.internals.managers.BlockManager" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.<module>" -> "pandas.core.internals.managers.SingleBlockManager" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.internals.concat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.internals.concat.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.concat.<module>" -> "pandas.core.internals.concat.JoinUnit" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.internals.managers.SingleBlockManager" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.formats.format.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "26"];
    "pandas.io.formats.format.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.io.formats.format.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "43"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.CategoricalFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.SeriesFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.TextAdjustment" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.EastAsianTextAdjustment" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.TableFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.DataFrameFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.GenericArrayFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.FloatArrayFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.IntArrayFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.Datetime64Formatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.ExtensionArrayFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.Datetime64TZFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.Timedelta64Formatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.<module>" -> "pandas.io.formats.format.EngFormatter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.io.common.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.io.common.<module>" -> "pandas.compat._import_lzma" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "18"];
    "pandas.io.common.<module>" -> "pandas.io.common._BytesZipFile" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.<module>" -> "pandas.io.common._MMapWrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.BadZipFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.LargeZipFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.ZipInfo" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile._ZipDecrypter" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.LZMACompressor" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.LZMADecompressor" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile._SharedFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile._Tellable" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.ZipExtFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "zipfile.<module>" -> "zipfile._ZipWriteFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.ZipFile" [color = "#b2b2b2ff", label = "1"];
    "zipfile.<module>" -> "zipfile.PyZipFile" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common._BytesZipFile" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "typing.CallableMeta.__subclasscheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "8"];
    "typing.__extrahook__" -> "collections.abc.__subclasshook__" [color = "#b2b2b2ff", label = "35"];
    "typing.__extrahook__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "80"];
    "pandas.io.formats.format.CategoricalFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.formats.format.SeriesFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "9"];
    "pandas.io.formats.format.TextAdjustment" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.formats.format.EastAsianTextAdjustment" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.formats.format.TableFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "11"];
    "pandas.io.formats.format.TableFormatter" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.formats.format.DataFrameFormatter" -> "typing.inner" [color = "#b0b2b2ff", label = "43"];
    "pandas.io.formats.format.GenericArrayFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "7"];
    "pandas.io.formats.format.FloatArrayFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.io.formats.format.IntArrayFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.formats.format.Datetime64Formatter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.formats.format.ExtensionArrayFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.formats.format.Datetime64TZFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.formats.format.Timedelta64Formatter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.formats.format.EngFormatter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.generic.NDFrame" -> "typing.inner" [color = "#b0b2b2ff", label = "88"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.rewrite_axis_style_signature" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.decorate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.generic.NDFrame" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.NDFrame" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.NDFrame" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.decorate" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "pandas.util._decorators.decorate" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "3"];
    "pandas.util._decorators.decorate" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "pandas.util._decorators.decorate" -> "inspect.Parameter.__init__" [color = "#b2b2b2ff", label = "27"];
    "pandas.util._decorators.decorate" -> "inspect.Signature.__init__" [color = "#b2b2b2ff", label = "3"];
    "pandas.util._decorators.decorate" -> "typing.cast" [color = "#b2b2b2ff", label = "3"];
    "inspect.Parameter.__init__" -> "enum.__call__" [color = "#a7b0b2ff", label = "1951"];
    "inspect.Signature.__init__" -> "inspect.Parameter.kind" [color = "#aeb2b2ff", label = "697"];
    "inspect.Signature.__init__" -> "inspect.Parameter.name" [color = "#aeb2b2ff", label = "697"];
    "inspect.Signature.__init__" -> "inspect.Parameter.default" [color = "#afb2b2ff", label = "569"];
    "inspect.Signature.__init__" -> "inspect.<genexpr>" [color = "#a4afb2ff", label = "2513"];
    "pandas.core.internals.construction.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.series.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "31"];
    "pandas.core.series.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.series.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.series.<module>" -> "pandas.core.series.Series" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.<module>" -> "pandas.core.generic._setup_axes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.<module>" -> "pandas.core.generic._add_numeric_operations" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.<module>" -> "pandas.core.generic._add_series_or_dataframe_operations" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.<module>" -> "pandas.core.ops.methods.add_flex_arithmetic_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.<module>" -> "pandas.core.ops.methods.add_special_arithmetic_methods" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.accessors.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.indexes.accessors.Properties" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.accessor.delegate_names" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.indexes.accessors.DatetimeProperties" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.accessor.add_delegate_accessors" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.indexes.accessors.TimedeltaProperties" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.indexes.accessors.PeriodProperties" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.accessors.<module>" -> "pandas.core.indexes.accessors.CombinedDatetimelikeProperties" [color = "#b2b2b2ff", label = "1"];
    "pandas.plotting.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.plotting.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.plotting._core.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.plotting._core.<module>" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.plotting._core.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.plotting._core.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.plotting._core.<module>" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.plotting._core.<module>" -> "pandas.plotting._core.PlotAccessor" [color = "#b2b2b2ff", label = "1"];
    "pandas.plotting._misc.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.plotting._misc.<module>" -> "pandas.plotting._misc._Options" [color = "#b2b2b2ff", label = "1"];
    "pandas.plotting._misc.<module>" -> "pandas.plotting._misc._Options.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.plotting._misc._Options" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series" -> "typing.inner" [color = "#b1b2b2ff", label = "9"];
    "pandas.core.series.Series" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.series.Series" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.series.Series" -> "pandas.core.series._coerce_method" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.series.Series" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.series.Series" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.series.Series" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series" -> "pandas.core.accessor.CachedAccessor.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic._setup_axes" -> "pandas.core.generic.<dictcomp>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._setup_axes" -> "pandas.core.generic.set_axis" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._doc_parms" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._make_logical_function" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._make_stat_function_ddof" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._make_cum_function" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._make_min_count_stat_function" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._add_numeric_operations" -> "pandas.core.generic._make_stat_function" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._doc_parms" -> "pandas.core.generic.<genexpr>" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic._make_logical_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_logical_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_logical_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_logical_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_logical_function" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_stat_function_ddof" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._make_stat_function_ddof" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._make_stat_function_ddof" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._make_stat_function_ddof" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._make_stat_function_ddof" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._make_cum_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._make_cum_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._make_cum_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._make_cum_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._make_cum_function" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.generic._make_min_count_stat_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_min_count_stat_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_min_count_stat_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_min_count_stat_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_min_count_stat_function" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic._make_stat_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._make_stat_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._make_stat_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._make_stat_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._make_stat_function" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.generic._add_series_or_dataframe_operations" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.generic._add_series_or_dataframe_operations" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.generic._add_series_or_dataframe_operations" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.generic._add_series_or_dataframe_operations" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.window.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.window.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.window.ewm.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.window.ewm.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.core.window.ewm.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.ewm.<module>" -> "pandas.core.window.ewm.EWM" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.window.common.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.common.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.window.common.<module>" -> "pandas.core.window.common.WindowGroupByMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.common.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.groupby.base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.groupby.base.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.base.<module>" -> "pandas.core.groupby.base.GroupByMixin" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.common.WindowGroupByMixin" -> "pandas.core.window.common._dispatch" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.window.common.WindowGroupByMixin" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.core.window.rolling.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.window.rolling.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling._Window" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling.Window" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling._Rolling" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling._Rolling_and_Expanding" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling.Rolling" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.rolling.<module>" -> "pandas.core.window.rolling.RollingGroupby" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.window.indexers.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.window.indexers.<module>" -> "pandas.core.window.indexers.BaseIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.<module>" -> "pandas.core.window.indexers.FixedWindowIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.<module>" -> "pandas.core.window.indexers.VariableWindowIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.<module>" -> "pandas.core.window.indexers.ExpandingIndexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.BaseIndexer" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.window.indexers.BaseIndexer" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.BaseIndexer" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.FixedWindowIndexer" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.FixedWindowIndexer" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.window.indexers.FixedWindowIndexer" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.VariableWindowIndexer" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.VariableWindowIndexer" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.window.indexers.VariableWindowIndexer" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.ExpandingIndexer" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.indexers.ExpandingIndexer" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.window.indexers.ExpandingIndexer" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.numba_.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.window.numba_.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.window.numba_.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.window.rolling._Window" -> "typing.inner" [color = "#b0b2b2ff", label = "12"];
    "pandas.core.window.rolling._Window" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.window.rolling.Window" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.window.rolling.Window" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.window.rolling.Window" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.window.rolling.Window" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.window.rolling.Window" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.window.rolling.Window" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.window.rolling._Rolling_and_Expanding" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.window.rolling._Rolling_and_Expanding" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.window.rolling.Rolling" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.window.rolling.Rolling" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.window.rolling.Rolling" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.window.rolling.Rolling" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.window.rolling.Rolling" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.window.ewm.EWM" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.window.ewm.EWM" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.window.ewm.EWM" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.window.ewm.EWM" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.window.ewm.EWM" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.window.expanding.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.window.expanding.<module>" -> "pandas.core.window.expanding.Expanding" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.expanding.<module>" -> "pandas.core.window.expanding.ExpandingGroupby" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.window.expanding.Expanding" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.window.expanding.Expanding" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.window.expanding.Expanding" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.window.expanding.Expanding" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.window.expanding.Expanding" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.ops.methods.add_flex_arithmetic_methods" -> "pandas.core.ops.methods._get_method_wrappers" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.methods.add_flex_arithmetic_methods" -> "pandas.core.ops.methods._create_methods" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.methods.add_flex_arithmetic_methods" -> "pandas.core.ops.methods.<genexpr>" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.ops.methods.add_flex_arithmetic_methods" -> "pandas.core.ops.methods._add_methods" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.methods._get_method_wrappers" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.ops.methods._get_method_wrappers" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._flex_method_SERIES" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops.methods.<dictcomp>" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._arith_method_SERIES" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._comp_method_SERIES" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._bool_method_SERIES" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._arith_method_FRAME" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._flex_comp_method_FRAME" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops.methods._create_methods" -> "pandas.core.ops._comp_method_FRAME" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._flex_method_SERIES" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops._flex_method_SERIES" -> "pandas.core.ops.docstrings._make_flex_doc" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops._flex_method_SERIES" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops._flex_method_SERIES" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops.methods.<dictcomp>" -> "pandas.core.ops.methods.<lambda>" [color = "#b1b2b2ff", label = "104"];
    "pandas.core.ops.methods._add_methods" -> "pandas.core.dtypes.generic._check" [color = "#b1b2b2ff", label = "130"];
    "pandas.core.ops.methods.add_special_arithmetic_methods" -> "pandas.core.ops.methods._get_method_wrappers" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.methods.add_special_arithmetic_methods" -> "pandas.core.ops.methods._create_methods" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops.methods.add_special_arithmetic_methods" -> "pandas.core.ops.methods._wrap_inplace_method" [color = "#b2b2b2ff", label = "20"];
    "pandas.core.ops.methods.add_special_arithmetic_methods" -> "pandas.core.ops.methods._add_methods" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.ops._arith_method_SERIES" -> "pandas.core.ops._get_opstr" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops._arith_method_SERIES" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops._arith_method_SERIES" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops._arith_method_SERIES" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops._comp_method_SERIES" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_SERIES" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_SERIES" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._bool_method_SERIES" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._bool_method_SERIES" -> "pandas.core.ops.common.unpack_zerodim_and_defer" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._bool_method_SERIES" -> "pandas.core.ops.common.wrapper" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.frame.DataFrame" -> "typing.inner" [color = "#b0b2b2ff", label = "68"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "23"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "23"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.deprecate_kwarg" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators._deprecate_kwarg" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.rewrite_axis_style_signature" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame" -> "pandas.util._decorators.decorate" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame" -> "pandas.core.accessor.CachedAccessor.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.util._decorators.Appender.__init__" -> "pandas.util._decorators.indent" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.core.ops._get_opstr" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.core.ops._get_frame_op_default_axis" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.core.ops.array_ops.define_na_arithmetic_op" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.core.ops.docstrings._make_flex_doc" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.ops._arith_method_FRAME" -> "pandas.util._decorators.Appender.__call__" [color = "#b1b2b2ff", label = "34"];
    "pandas.core.ops._flex_comp_method_FRAME" -> "pandas.core.ops._get_opstr" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._flex_comp_method_FRAME" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._flex_comp_method_FRAME" -> "pandas.core.ops._get_frame_op_default_axis" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._flex_comp_method_FRAME" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._flex_comp_method_FRAME" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_FRAME" -> "pandas.core.ops._get_opstr" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_FRAME" -> "pandas.core.ops._get_op_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_FRAME" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.ops._comp_method_FRAME" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.groupby.groupby.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "22"];
    "pandas.core.groupby.groupby.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.core.groupby.groupby.GroupByPlot" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.groupby.groupby.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.core.groupby.groupby._GroupBy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.core.groupby.groupby.GroupBy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.core.groupby.groupby._add_numeric_operations" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "pandas.core.groupby.ops.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.groupby.ops.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "pandas.core.groupby.ops.BaseGrouper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "pandas.core.groupby.ops.BinGrouper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "pandas.core.groupby.ops.DataSplitter" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "pandas.core.groupby.ops.SeriesSplitter" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.ops.<module>" -> "pandas.core.groupby.ops.FrameSplitter" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.grouper.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "12"];
    "pandas.core.groupby.grouper.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.groupby.grouper.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.groupby.grouper.<module>" -> "pandas.core.groupby.grouper.Grouper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.grouper.<module>" -> "pandas.core.groupby.grouper.Grouping" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.categorical.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.groupby.grouper.Grouper" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.groupby.grouper.Grouping" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.core.groupby.ops.BaseGrouper" -> "typing.inner" [color = "#b0b2b2ff", label = "12"];
    "pandas.core.groupby.ops.BinGrouper" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.groupby.groupby._GroupBy" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.core.groupby.groupby._GroupBy" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby._GroupBy" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.groupby._GroupBy" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.groupby._GroupBy" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.groupby.groupby.GroupBy" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.groupby.groupby.GroupBy" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.groupby.groupby.GroupBy" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.groupby.groupby.GroupBy" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.groupby.groupby.GroupBy" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.groupby.groupby._add_numeric_operations" -> "pandas.core.groupby.groupby.groupby_function" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.groupby.groupby.groupby_function" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.groupby.groupby.groupby_function" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.groupby.groupby.groupby_function" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.groupby.groupby.groupby_function" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.groupby.groupby.groupby_function" -> "pandas.compat.set_function_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "typing.inner" [color = "#b1b2b2ff", label = "9"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.SeriesGroupBy" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.pinner" -> "pandas.core.groupby.generic.generate_property" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.groupby.generic.DataFrameGroupBy" -> "typing.inner" [color = "#b1b2b2ff", label = "5"];
    "pandas.tseries.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.tseries.api.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.api.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.computation.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.computation.eval.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.core.computation.eval.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.computation.eval.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.computation.engines.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.computation.engines.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.core.computation.engines.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.engines.<module>" -> "pandas.core.computation.engines.NumExprClobberingError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.engines.<module>" -> "pandas.core.computation.engines.AbstractEngine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.engines.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.computation.engines.<module>" -> "pandas.core.computation.engines.NumExprEngine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.engines.<module>" -> "pandas.core.computation.engines.PythonEngine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.engines.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.computation.align.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.computation.align.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.align.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.computation.align.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "8"];
    "pandas.core.computation.align.<module>" -> "pandas.core.computation.align._filter_special_cases" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.common.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.computation.common.<module>" -> "pandas.core.computation.common.NameResolutionError" [color = "#b2b2b2ff", label = "1"];
    "typing._Union._get_type_vars" -> "typing._get_type_vars" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.align._filter_special_cases" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.align._filter_special_cases" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.core.computation.ops.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.UndefinedVariableError" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.Term" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.Constant" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.Op" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.BinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.Div" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.UnaryOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.MathCall" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.ops.<module>" -> "pandas.core.computation.ops.FuncNode" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.scope.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.core.computation.scope.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.computation.scope.<module>" -> "pandas.core.computation.scope.Scope" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.chainmap.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.compat.chainmap.<module>" -> "typing.__new__" [color = "#b1b2b2ff", label = "3"];
    "pandas.compat.chainmap.<module>" -> "typing.TypeVar.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.compat.chainmap.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.compat.chainmap.<module>" -> "pandas.compat.chainmap.DeepChainMap" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.chainmap.<module>" -> "typing.GenericMeta.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.scope.Scope" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.computation.engines.AbstractEngine" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.core.computation.expr.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.computation.expr.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr._compose" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr._is_type" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.<genexpr>" [color = "#b1b2b2ff", label = "138"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.<lambda>" [color = "#b1b2b2ff", label = "252"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr._filter_nodes" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.disallow" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.add_ops" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.BaseExprVisitor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.f" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.disallowed" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.PandasExprVisitor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.PythonExprVisitor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.<module>" -> "pandas.core.computation.expr.Expr" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.parsing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.computation.parsing.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.core.computation.expr._compose" -> "pandas.core.computation.expr._compose2" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.computation.expr._filter_nodes" -> "pandas.core.computation.expr.<genexpr>" [color = "#b1b2b2ff", label = "126"];
    "pandas.core.computation.expr.BaseExprVisitor" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.computation.expr.f" -> "pandas.core.computation.expr._op_maker" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.computation.expr.disallowed" -> "pandas.core.computation.expr._node_not_implemented" [color = "#b1b2b2ff", label = "159"];
    "pandas.core.computation.expr.PandasExprVisitor" -> "pandas.core.computation.expr._compose" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.expr.Expr" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.reshape.api.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "6"];
    "pandas.core.reshape.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.core.reshape.concat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "pandas.core.reshape.concat.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.reshape.concat.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "12"];
    "pandas.core.reshape.concat.<module>" -> "typing.overload" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.concat.<module>" -> "pandas.core.reshape.concat._Concatenator" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.reshape.melt.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.reshape.melt.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.melt.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.melt.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.melt.<module>" -> "pandas.util._decorators.deprecate_kwarg" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.melt.<module>" -> "pandas.util._decorators._deprecate_kwarg" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.core.reshape.merge.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.reshape.merge.<module>" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.core.reshape.merge._MergeOperation" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.core.reshape.merge._OrderedMerge" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge.<module>" -> "pandas.core.reshape.merge._AsOfMerge" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.merge._MergeOperation" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.reshape.pivot.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pandas.core.reshape.pivot.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.pivot.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.reshape.pivot.<module>" -> "pandas.util._decorators.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.pivot.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.pivot.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.pivot.<module>" -> "pandas.util._decorators.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.pivot.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.core.reshape.util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.reshape.util.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.reshape.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.core.reshape.reshape.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.reshape.reshape.<module>" -> "pandas.core.reshape.reshape._Unstacker" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.tile.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.core.reshape.tile.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.api.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.api.extensions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.api.indexers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.api.types.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.api.types.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.core.dtypes.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.util._print_versions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.util._print_versions.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.io.api.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "14"];
    "pandas.io.api.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "15"];
    "pandas.io.clipboards.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.clipboards.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.io.excel.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.io.excel.<module>" -> "pandas.io.excel._util.register_writer" [color = "#b2b2b2ff", label = "3"];
    "pandas.io.excel._base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.io.excel._base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "pandas.io.excel._base.<module>" -> "textwrap.fill" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._base.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._base.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._base.<module>" -> "pandas.io.excel._base._BaseExcelReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._base.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.excel._base.<module>" -> "pandas.io.excel._base.ExcelWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._base.<module>" -> "pandas.io.excel._base.ExcelFile" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "csv.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "csv.<module>" -> "csv.Dialect" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.excel" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.excel_tab" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.unix_dialect" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.DictReader" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.DictWriter" [color = "#b2b2b2ff", label = "1"];
    "csv.<module>" -> "csv.Sniffer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "21"];
    "pandas.io.parsers.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.io.parsers.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "textwrap.fill" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers._make_parser_function" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.TextFileReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.ParserBase" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.CParserWrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.PythonParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.FixedWidthReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.<module>" -> "pandas.io.parsers.FixedWidthFieldParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.date_converters.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "textwrap.fill" -> "textwrap.TextWrapper.__init__" [color = "#b2b2b2ff", label = "2"];
    "textwrap.fill" -> "textwrap.TextWrapper.fill" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper.fill" -> "textwrap.TextWrapper.wrap" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper.wrap" -> "textwrap.TextWrapper._split_chunks" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper.wrap" -> "textwrap.TextWrapper._wrap_chunks" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper._split_chunks" -> "textwrap.TextWrapper._munge_whitespace" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper._split_chunks" -> "textwrap.TextWrapper._split" [color = "#b2b2b2ff", label = "2"];
    "textwrap.TextWrapper._split" -> "textwrap.<listcomp>" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.excel._base._BaseExcelReader" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "6"];
    "pandas.io.excel._base.ExcelWriter" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "4"];
    "pandas.io.excel._base.ExcelFile" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "pandas.io.excel._base.ExcelFile" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.io.excel._odfreader.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.io.excel._odfreader.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.excel._odfreader.<module>" -> "pandas.io.excel._odfreader._ODFReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._odfreader.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._odfreader._ODFReader" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.excel._openpyxl.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.io.excel._openpyxl.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._openpyxl.<module>" -> "pandas.io.excel._openpyxl._OpenpyxlWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._openpyxl.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.excel._openpyxl.<module>" -> "pandas.io.excel._openpyxl._OpenpyxlReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._openpyxl._OpenpyxlReader" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.excel._xlrd.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.excel._xlrd.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlrd.<module>" -> "pandas.io.excel._xlrd._XlrdReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlrd.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._pyxlsb.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.io.excel._pyxlsb.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._pyxlsb.<module>" -> "pandas.io.excel._pyxlsb._PyxlsbReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._pyxlsb.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._pyxlsb._PyxlsbReader" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.excel._xlsxwriter.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.io.excel._xlsxwriter.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlsxwriter.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.io.excel._xlsxwriter.<module>" -> "pandas.io.excel._xlsxwriter._XlsxStyler" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlsxwriter.<module>" -> "pandas.io.excel._xlsxwriter._XlsxWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlsxwriter.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlwt.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlwt.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.io.excel._xlwt.<module>" -> "pandas.io.excel._xlwt._XlwtWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.excel._xlwt.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.feather_format.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.feather_format.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.gbq.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.io.gbq.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "16"];
    "pandas.io.html.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "pandas.io.html.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "pandas.io.html.<module>" -> "pandas.io.html._HtmlFrameParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.html.<module>" -> "pandas.io.html._BeautifulSoupHtml5LibFrameParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.html.<module>" -> "pandas.io.html._LxmlFrameParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.io.json.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.json._json.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "16"];
    "pandas.io.json._json.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.json._json.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "pandas.io.json._json.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.json._json.<module>" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.Writer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.SeriesWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.FrameWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.JSONTableWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.util._decorators.deprecate_kwarg" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.util._decorators._deprecate_kwarg" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.JsonReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.Parser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.SeriesParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.<module>" -> "pandas.io.json._json.FrameParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._normalize.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.io.json._normalize.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.json._normalize.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "14"];
    "pandas.io.json._normalize.<module>" -> "pandas.util._decorators.deprecate" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.deprecate" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.deprecate" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.deprecate" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas.util._decorators.deprecate" -> "textwrap.dedent" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.json._table_schema.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas.io.json._table_schema.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.json._json.Writer" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.io.json._json.Writer" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.json._json.SeriesWriter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.json._json.SeriesWriter" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.FrameWriter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.json._json.FrameWriter" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.json._json.JSONTableWriter" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.json._json.JSONTableWriter" -> "typing.CallableMeta.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.orc.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.io.orc.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.parquet.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "pandas.io.parquet.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parquet.<module>" -> "pandas.io.parquet.BaseImpl" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parquet.<module>" -> "pandas.io.parquet.PyArrowImpl" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parquet.<module>" -> "pandas.io.parquet.FastParquetImpl" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parquet.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.parquet.PyArrowImpl" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.pickle.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "pandas.io.pickle.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.compat.pickle_compat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.compat.pickle_compat.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.pickle_compat.<module>" -> "pandas.compat.pickle_compat._LoadSparseSeries" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.pickle_compat.<module>" -> "pandas.compat.pickle_compat._LoadSparseFrame" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.pickle_compat.<module>" -> "pandas.compat.pickle_compat.Unpickler" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.pickle_compat.<module>" -> "copy.copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.compat.pickle_compat.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "18"];
    "pandas.io.pytables.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.pytables.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.PossibleDataLossError" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.ClosedFileError" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.IncompatibilityWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AttributeConflictWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.DuplicateWarning" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "contextlib.helper" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas._config.config.inner" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.pytables.<module>" -> "pandas._config.config.is_one_of_factory" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "typing.inner" [color = "#b0b2b2ff", label = "19"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.HDFStore" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.TableIterator" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.IndexCol" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.GenericIndexCol" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.DataCol" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.DataIndexableCol" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.GenericDataIndexableCol" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.Fixed" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.GenericFixed" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.SeriesFixed" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.BlockManagerFixed" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.FrameFixed" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.Table" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.WORMTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AppendableTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AppendableFrameTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AppendableSeriesTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AppendableMultiSeriesTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.GenericTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.AppendableMultiFrameTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.<module>" -> "pandas.io.pytables.Selection" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "pandas.core.computation.pytables.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.PyTablesScope" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.Term" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.Constant" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.BinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.FilterBinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.JointFilterBinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.ConditionBinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.JointConditionBinOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.UnaryOp" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.PyTablesExprVisitor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.PyTablesExpr" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.<module>" -> "pandas.core.computation.pytables.TermValue" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.computation.pytables.PyTablesScope" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.core.computation.pytables.BinOp" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.computation.pytables.FilterBinOp" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.core.computation.pytables.PyTablesExpr" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.pytables.HDFStore" -> "typing.inner" [color = "#b0b2b2ff", label = "31"];
    "pandas.io.pytables.TableIterator" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.io.pytables.IndexCol" -> "typing.inner" [color = "#b1b2b2ff", label = "1"];
    "pandas.io.pytables.DataCol" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.pytables.Fixed" -> "typing.inner" [color = "#b1b2b2ff", label = "7"];
    "pandas.io.pytables.GenericFixed" -> "pandas.io.pytables.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.pytables.GenericFixed" -> "typing.inner" [color = "#b1b2b2ff", label = "10"];
    "pandas.io.pytables.SeriesFixed" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.pytables.BlockManagerFixed" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.pytables.Table" -> "typing.inner" [color = "#b0b2b2ff", label = "18"];
    "pandas.io.pytables.WORMTable" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.pytables.AppendableTable" -> "typing.inner" [color = "#b1b2b2ff", label = "6"];
    "pandas.io.pytables.AppendableFrameTable" -> "typing.inner" [color = "#b1b2b2ff", label = "4"];
    "pandas.io.pytables.AppendableSeriesTable" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.pytables.AppendableMultiFrameTable" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "pandas.io.pytables.AppendableMultiFrameTable" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.pytables.Selection" -> "typing.inner" [color = "#b1b2b2ff", label = "2"];
    "pandas.io.sas.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.io.sas.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.io.sas.sasreader.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.io.spss.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.io.spss.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "3"];
    "pandas.io.sql.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "pandas.io.sql.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.SQLAlchemyRequired" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.DatabaseError" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.SQLTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.PandasSQL" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.SQLDatabase" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.SQLiteTable" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.<module>" -> "pandas.io.sql.SQLiteDatabase" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.SQLDatabase" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.sql.SQLiteDatabase" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "13"];
    "pandas.io.stata.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.PossiblePrecisionLoss" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.ValueLabelTypeMismatch" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.InvalidColumnName" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataValueLabel" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataMissingValue" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataParser" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataReader" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataStrLWriter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataWriter117" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.<module>" -> "pandas.io.stata.StataWriterUTF8" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.StataReader" -> "pandas.util._decorators.Appender.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.StataReader" -> "pandas.util._decorators.Appender.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.stata.StataWriterUTF8" -> "typing.inner" [color = "#b1b2b2ff", label = "10"];
    "pandas.util._tester.<module>" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "2"];
    "pandas.testing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas.testing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas._testing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "pandas._testing.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "pandas._testing.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "pandas._testing.<module>" -> "pandas.compat._import_lzma" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "pandas._testing.set_testing_mode" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "typing.inner" [color = "#b1b2b2ff", label = "9"];
    "pandas._testing.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "8"];
    "pandas._testing.<module>" -> "numpy.core._internal.npy_ctypes_check" [color = "#b2b2b2ff", label = "2"];
    "pandas._testing.<module>" -> "pandas._testing.optional_args" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "pandas._testing.RNGContext" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "pandas._testing.SubclassedSeries" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "pandas._testing.SubclassedDataFrame" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.<module>" -> "pandas._testing.SubclassedCategorical" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.set_testing_mode" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.optional_args" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "pandas._testing.optional_args" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "pandas._version.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas._version.<module>" -> "warnings.catch_warnings.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas._version.<module>" -> "warnings.catch_warnings.__enter__" [color = "#b2b2b2ff", label = "1"];
    "pandas._version.<module>" -> "warnings.catch_warnings.__exit__" [color = "#b2b2b2ff", label = "1"];
    "pandas._version.get_versions" -> "json.loads" [color = "#b2b2b2ff", label = "1"];
    "json.loads" -> "json.decoder.JSONDecoder.decode" [color = "#b2b2b2ff", label = "3"];
    "json.loads" -> "json.decoder.JSONDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.JSONDecoder.decode" -> "json.decoder.JSONDecoder.raw_decode" [color = "#b2b2b2ff", label = "3"];
    "pandas.__Datetime" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.__SparseArray" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "matplotlib.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib._version.get_versions" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.<module>" -> "matplotlib._check_versions" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.ExecutableNotFoundError" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib._logged_cached" [color = "#b2b2b2ff", label = "10"];
    "matplotlib.<module>" -> "matplotlib.RcParams" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.rc_params" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "contextlib.helper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.RcParams.copy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.RcParams.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.<module>" -> "matplotlib.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.rc_context" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "matplotlib.cbook.deprecation._rename_parameter" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.<module>" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.<module>" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.<module>" -> "logging.Logger.debug" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.<module>" -> "matplotlib.is_interactive" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "matplotlib.cbook.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.cbook.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook._StrongRef" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.CallbackRegistry" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.silent_list" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.IgnoredKeywordWarning" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.cbook.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.cbook.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.maxdict" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.Stack" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.Grouper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook._OrderedSet" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.<module>" -> "matplotlib.cbook._classproperty" [color = "#b2b2b2ff", label = "1"];
    "glob.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "2"];
    "shlex.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "shlex.<module>" -> "shlex.shlex" [color = "#b2b2b2ff", label = "1"];
    "shlex.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.cbook.deprecation.<module>" -> "matplotlib.cbook.deprecation.MatplotlibDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.deprecation.<module>" -> "matplotlib.cbook.deprecation._deprecated_parameter_class" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.deprecation.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook.deprecation.deprecate" -> "matplotlib.cbook.deprecation._generate_deprecation_warning" [color = "#b1b2b2ff", label = "135"];
    "matplotlib.cbook.deprecation.deprecate" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "135"];
    "matplotlib.cbook.deprecation.deprecate" -> "matplotlib.cbook.deprecation.finalize" [color = "#b1b2b2ff", label = "135"];
    "matplotlib.cbook.deprecation.deprecate" -> "matplotlib.cbook.deprecation._deprecated_property" [color = "#b2b2b2ff", label = "15"];
    "matplotlib.cbook.deprecation.finalize" -> "functools.wraps" [color = "#b1b2b2ff", label = "120"];
    "matplotlib.cbook.deprecation.finalize" -> "functools.update_wrapper" [color = "#b1b2b2ff", label = "120"];
    "matplotlib.rcsetup.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.rcsetup.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.rcsetup.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "matplotlib.rcsetup.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup.ValidateInStrings" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup._listify_validator" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup._make_type_validator" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup.ValidateInStrings.__init__" [color = "#b2b2b2ff", label = "22"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup.ValidateInterval" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rcsetup.<module>" -> "matplotlib.rcsetup._make_nseq_validator" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.rcsetup.<module>" -> "cycler.cycler" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.fontconfig_pattern.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.<module>" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.<module>" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "11"];
    "pyparsing.<module>" -> "pyparsing.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.<genexpr>" [color = "#b1b2b2ff", label = "96"];
    "pyparsing.<module>" -> "pyparsing.ParseBaseException" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseException" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseFatalException" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseSyntaxException" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.RecursiveGrammarException" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._ParseResultsWithOffset" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseResults" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParserElement" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._PendingSkip" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Token" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Empty" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.NoMatch" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Literal" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._SingleCharLiteral" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Keyword" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.CaselessLiteral" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.CaselessKeyword" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.CloseMatch" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Word" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._WordRegex" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Char" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Regex" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.QuotedString" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.CharsNotIn" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.White" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._PositionToken" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.GoToColumn" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineStart" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineEnd" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringStart" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringEnd" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.WordStart" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.WordEnd" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseExpression" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.And" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Or" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.MatchFirst" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Each" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ParseElementEnhance" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.FollowedBy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.PrecededBy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.NotAny" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._MultipleMatch" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.OneOrMore" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.ZeroOrMore" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._NullToken" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Optional" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.SkipTo" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Forward" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.TokenConverter" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Combine" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Group" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Dict" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Suppress" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.OnlyOnce" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Empty.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Empty.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineStart.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineStart.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineEnd.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.LineEnd.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringStart.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringStart.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringEnd.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.StringEnd.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Word.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<module>" -> "pyparsing.Word.setParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Regex.__init__" [color = "#b2b2b2ff", label = "13"];
    "pyparsing.<module>" -> "pyparsing.Regex.setParseAction" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Word.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.MatchFirst.__or__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.CharsNotIn.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.<module>" -> "pyparsing.MatchFirst.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.And.__add__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<module>" -> "pyparsing.Group.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<module>" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<module>" -> "pyparsing.Optional.setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._SingleCharLiteral.__add__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Group.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.OneOrMore.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Group.setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.tokenMap" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Regex.__add__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.<module>" -> "pyparsing.Combine.__init__" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.<module>" -> "pyparsing.Combine.setName" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.<module>" -> "pyparsing.And.__or__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<module>" -> "pyparsing.srange" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<module>" -> "pyparsing._WordRegex.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.makeHTMLTags" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Regex.setName" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.<module>" -> "pyparsing.Regex.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._SingleCharLiteral.__invert__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Word.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.LineEnd.__invert__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._WordRegex.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Combine.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.Combine.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.delimitedList" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.And.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.pyparsing_common" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing._lazyclassproperty" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.unicode_set" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.pyparsing_unicode" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.<module>" -> "pyparsing.pyparsing_test" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.ParserElement" -> "pyparsing._UnboundedCache" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.ParserElement" -> "pyparsing._FifoCache" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And" -> "pyparsing._ErrorStop" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Empty.__init__" -> "pyparsing.Empty.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.LineStart.__init__" -> "pyparsing.LineStart.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.LineEnd.__init__" -> "pyparsing.LineEnd.__init__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.LineEnd.__init__" -> "pyparsing.LineEnd.setWhitespaceChars" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.StringStart.__init__" -> "pyparsing.StringStart.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.StringEnd.__init__" -> "pyparsing.StringEnd.__init__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Word.__init__" -> "pyparsing.Word.__init__" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.Word.__init__" -> "pyparsing.Word.__str__" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Word.__init__" -> "pyparsing._escapeRegexRangeChars" [color = "#b2b2b2ff", label = "11"];
    "pyparsing.Word.__init__" -> "re.compile" [color = "#b0b2b2ff", label = "8"];
    "pyparsing.Word.__init__" -> "pyparsing.<genexpr>" [color = "#b0b2b2ff", label = "282"];
    "pyparsing.Word.__str__" -> "pyparsing.Word.__str__" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.Word.__str__" -> "pyparsing.charsAsStr" [color = "#b2b2b2ff", label = "14"];
    "pyparsing.Word.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Word.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._trim_arity" -> "pyparsing.extract_stack" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.extract_stack" -> "traceback.extract_stack" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.extract_stack" -> "traceback.FrameSummary.__getitem__" [color = "#b2b2b2ff", label = "24"];
    "traceback.extract_stack" -> "traceback.extract" [color = "#b2b2b2ff", label = "24"];
    "traceback.extract_stack" -> "traceback.walk_stack" [color = "#b2b2b2ff", label = "24"];
    "traceback.extract" -> "traceback.walk_stack" [color = "#b2b2b2ff", label = "72"];
    "traceback.extract" -> "linecache.lazycache" [color = "#b2b2b2ff", label = "72"];
    "traceback.extract" -> "traceback.FrameSummary.__init__" [color = "#b2b2b2ff", label = "72"];
    "traceback.extract" -> "linecache.checkcache" [color = "#b2b2b2ff", label = "24"];
    "traceback.extract" -> "traceback.FrameSummary.line" [color = "#b2b2b2ff", label = "72"];
    "traceback.FrameSummary.line" -> "linecache.getline" [color = "#b2b2b2ff", label = "72"];
    "linecache.getline" -> "linecache.getlines" [color = "#b2b2b2ff", label = "72"];
    "linecache.getlines" -> "linecache.updatecache" [color = "#b2b2b2ff", label = "1"];
    "linecache.updatecache" -> "tokenize.open" [color = "#b2b2b2ff", label = "1"];
    "linecache.updatecache" -> "codecs.IncrementalDecoder.decode" [color = "#b2b2b2ff", label = "35"];
    "tokenize.open" -> "tokenize.detect_encoding" [color = "#b2b2b2ff", label = "1"];
    "tokenize.open" -> "codecs.IncrementalDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "tokenize.detect_encoding" -> "tokenize.read_or_stop" [color = "#b2b2b2ff", label = "1"];
    "tokenize.detect_encoding" -> "tokenize.find_cookie" [color = "#b2b2b2ff", label = "1"];
    "tokenize.find_cookie" -> "tokenize._get_normal_name" [color = "#b2b2b2ff", label = "1"];
    "tokenize.find_cookie" -> "encodings.search_function" [color = "#b2b2b2ff", label = "1"];
    "encodings.search_function" -> "encodings.normalize_encoding" [color = "#b2b2b2ff", label = "1"];
    "encodings.search_function" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "encodings.search_function" -> "encodings.utf_8.getregentry" [color = "#b2b2b2ff", label = "1"];
    "encodings.utf_8.getregentry" -> "codecs.__new__" [color = "#b2b2b2ff", label = "1"];
    "codecs.IncrementalDecoder.__init__" -> "codecs.IncrementalDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "traceback.FrameSummary.__getitem__" -> "traceback.FrameSummary.line" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.Regex.__init__" -> "pyparsing.Regex.__init__" [color = "#b1b2b2ff", label = "54"];
    "pyparsing.Regex.__init__" -> "re.compile" [color = "#b0b2b2ff", label = "27"];
    "pyparsing.Regex.__init__" -> "pyparsing.Regex.__str__" [color = "#b2b2b2ff", label = "27"];
    "pyparsing.Regex.__str__" -> "pyparsing.Regex.__str__" [color = "#b2b2b2ff", label = "54"];
    "pyparsing.Regex.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.Regex.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.Word.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.MatchFirst.__init__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "32"];
    "pyparsing.MatchFirst.__init__" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.MatchFirst.__init__" -> "pyparsing.<genexpr>" [color = "#b1b2b2ff", label = "96"];
    "pyparsing.MatchFirst.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.CharsNotIn.__init__" -> "pyparsing.CharsNotIn.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.CharsNotIn.__init__" -> "pyparsing.CharsNotIn.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.CharsNotIn.__str__" -> "pyparsing.CharsNotIn.__str__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.Suppress.__init__" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "26"];
    "pyparsing.Suppress.__init__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Suppress.__init__" -> "pyparsing.Suppress.setWhitespaceChars" [color = "#b2b2b2ff", label = "13"];
    "pyparsing.Literal.__init__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "72"];
    "pyparsing.MatchFirst.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__init__" -> "pyparsing.MatchFirst.__eq__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.__init__" -> "pyparsing.Suppress.__eq__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.And.__init__" -> "pyparsing.And.__init__" [color = "#b1b2b2ff", label = "134"];
    "pyparsing.And.__init__" -> "abc.__instancecheck__" [color = "#b1b2b2ff", label = "67"];
    "pyparsing.And.__init__" -> "pyparsing.<genexpr>" [color = "#b0b2b2ff", label = "350"];
    "pyparsing.And.__init__" -> "pyparsing.And.setWhitespaceChars" [color = "#b2b2b2ff", label = "67"];
    "pyparsing.And.__init__" -> "pyparsing.And.__eq__" [color = "#b2b2b2ff", label = "36"];
    "pyparsing.And.__init__" -> "pyparsing._SingleCharLiteral.__eq__" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.And.__init__" -> "pyparsing.Optional.__eq__" [color = "#b2b2b2ff", label = "26"];
    "pyparsing.And.__init__" -> "pyparsing.Group.__eq__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__init__" -> "pyparsing.Regex.__eq__" [color = "#b2b2b2ff", label = "23"];
    "pyparsing.And.__init__" -> "pyparsing.Combine.__eq__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__init__" -> "pyparsing._WordRegex.__eq__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.And.__init__" -> "pyparsing.Dict.__eq__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__init__" -> "pyparsing.Literal.__eq__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.And.__init__" -> "pyparsing.Word.__eq__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__init__" -> "pyparsing.NotAny.__eq__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.__init__" -> "pyparsing.ZeroOrMore.__eq__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.And.__init__" -> "pyparsing.StringEnd.__eq__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "26"];
    "pyparsing.And.__add__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Group.__init__" -> "pyparsing.Group.__init__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.Group.__init__" -> "pyparsing.Group.setWhitespaceChars" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Optional.__init__" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "50"];
    "pyparsing.Optional.__init__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Optional.__init__" -> "pyparsing.Optional.setWhitespaceChars" [color = "#b2b2b2ff", label = "25"];
    "pyparsing.Optional.setResultsName" -> "pyparsing.Optional._setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional._setResultsName" -> "pyparsing.Optional.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "37"];
    "copy.copy" -> "copyreg._slotnames" [color = "#b2b2b2ff", label = "14"];
    "copy.copy" -> "copy._reconstruct" [color = "#b0b2b2ff", label = "410"];
    "copy._reconstruct" -> "copyreg.__newobj__" [color = "#b0b2b2ff", label = "410"];
    "pyparsing._SingleCharLiteral.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.Group.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.OneOrMore.__init__" -> "pyparsing.OneOrMore.__init__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.OneOrMore.__init__" -> "pyparsing.OneOrMore.setWhitespaceChars" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.OneOrMore.__init__" -> "pyparsing.OneOrMore.stopOn" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Group.setResultsName" -> "pyparsing.Group._setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Group._setResultsName" -> "pyparsing.Group.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Group.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Regex.__add__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.Regex.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "14"];
    "pyparsing.Combine.__init__" -> "pyparsing.Combine.__init__" [color = "#b2b2b2ff", label = "30"];
    "pyparsing.Combine.__init__" -> "pyparsing.Combine.setWhitespaceChars" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Combine.__init__" -> "pyparsing.Combine.leaveWhitespace" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.And.copy" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.And.leaveWhitespace" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.MatchFirst.copy" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.MatchFirst.leaveWhitespace" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.OneOrMore.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Combine.leaveWhitespace" -> "pyparsing.OneOrMore.leaveWhitespace" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.copy" -> "pyparsing.And.copy" [color = "#b1b2b2ff", label = "108"];
    "pyparsing.And.copy" -> "copy.copy" [color = "#b1b2b2ff", label = "108"];
    "pyparsing.And.copy" -> "pyparsing.<listcomp>" [color = "#b1b2b2ff", label = "108"];
    "pyparsing.<listcomp>" -> "pyparsing.Regex.copy" [color = "#b1b2b2ff", label = "111"];
    "pyparsing.<listcomp>" -> "pyparsing._SingleCharLiteral.copy" [color = "#b1b2b2ff", label = "94"];
    "pyparsing.<listcomp>" -> "pyparsing.And.copy" [color = "#b1b2b2ff", label = "87"];
    "pyparsing.<listcomp>" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<listcomp>" -> "pyparsing._ParseResultsWithOffset.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<listcomp>" -> "pyparsing.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<listcomp>" -> "pyparsing._ParseResultsWithOffset.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<listcomp>" -> "pyparsing.Literal.copy" [color = "#b2b2b2ff", label = "13"];
    "pyparsing.<listcomp>" -> "pyparsing._WordRegex.copy" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.<listcomp>" -> "pyparsing.Optional.copy" [color = "#b2b2b2ff", label = "35"];
    "pyparsing.<listcomp>" -> "pyparsing.Word.copy" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<listcomp>" -> "pyparsing.NotAny.copy" [color = "#b2b2b2ff", label = "13"];
    "pyparsing.<listcomp>" -> "pyparsing.MatchFirst.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Regex.copy" -> "copy.copy" [color = "#b1b2b2ff", label = "113"];
    "pyparsing._SingleCharLiteral.copy" -> "copy.copy" [color = "#b1b2b2ff", label = "96"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.<listcomp>" [color = "#b1b2b2ff", label = "51"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.Regex.leaveWhitespace" [color = "#b2b2b2ff", label = "31"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing._SingleCharLiteral.leaveWhitespace" [color = "#b2b2b2ff", label = "26"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.Combine.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.Literal.leaveWhitespace" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing._WordRegex.leaveWhitespace" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.Optional.leaveWhitespace" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.And.leaveWhitespace" [color = "#b2b2b2ff", label = "22"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.Word.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.leaveWhitespace" -> "pyparsing.NotAny.leaveWhitespace" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.MatchFirst.copy" -> "pyparsing.MatchFirst.copy" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.MatchFirst.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.MatchFirst.copy" -> "pyparsing.<listcomp>" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.MatchFirst.leaveWhitespace" -> "pyparsing.<listcomp>" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.MatchFirst.leaveWhitespace" -> "pyparsing.And.leaveWhitespace" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.MatchFirst.leaveWhitespace" -> "pyparsing.Regex.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.MatchFirst.leaveWhitespace" -> "pyparsing.MatchFirst.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.srange" -> "pyparsing.And.parseString" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.srange" -> "pyparsing.ParseResults.__getattr__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.srange" -> "pyparsing.ParseResults.__iter__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.srange" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.And.parseString" -> "pyparsing.resetCache" [color = "#b2b2b2ff", label = "11"];
    "pyparsing.And.parseString" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.parseString" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.And.parseString" -> "pyparsing.And._parseCache" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.streamline" -> "pyparsing.<genexpr>" [color = "#b1b2b2ff", label = "108"];
    "pyparsing.And.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "59"];
    "pyparsing.And.streamline" -> "pyparsing._SingleCharLiteral.streamline" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.And.streamline" -> "pyparsing.Optional.streamline" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.And.streamline" -> "pyparsing.And.__str__" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.And.streamline" -> "pyparsing.Group.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.streamline" -> "pyparsing.MatchFirst.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.And.streamline" -> "pyparsing.Suppress.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.And.streamline" -> "pyparsing._WordRegex.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.streamline" -> "pyparsing.Word.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.streamline" -> "pyparsing.NotAny.streamline" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.streamline" -> "pyparsing.Regex.streamline" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.And.streamline" -> "pyparsing.ZeroOrMore.streamline" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.streamline" -> "pyparsing.StringEnd.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.streamline" -> "pyparsing.Optional.streamline" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.Optional.streamline" -> "pyparsing._SingleCharLiteral.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Optional.streamline" -> "pyparsing.White.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__str__" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "86"];
    "pyparsing.<genexpr>" -> "pyparsing._SingleCharLiteral.__str__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.<genexpr>" -> "pyparsing.Optional.__str__" [color = "#b2b2b2ff", label = "11"];
    "pyparsing.<genexpr>" -> "pyparsing.Word.__str__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.<genexpr>" -> "pyparsing.Regex.__str__" [color = "#b2b2b2ff", label = "27"];
    "pyparsing.<genexpr>" -> "pyparsing.CharsNotIn.__str__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<genexpr>" -> "pyparsing.MatchFirst.__str__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<genexpr>" -> "pyparsing.Suppress.__str__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.<genexpr>" -> "pyparsing.Group.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<genexpr>" -> "pyparsing.<lambda>" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.<genexpr>" -> "pyparsing.NotAny.__str__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.<genexpr>" -> "pyparsing._WordRegex.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.<genexpr>" -> "pyparsing.Combine.__str__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<genexpr>" -> "pyparsing.ZeroOrMore.__str__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.<genexpr>" -> "pyparsing.And.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.<genexpr>" -> "pyparsing.StringEnd.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.__str__" -> "pyparsing._SingleCharLiteral.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.__str__" -> "pyparsing.And.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Optional.__str__" -> "pyparsing.MatchFirst.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.__str__" -> "pyparsing.White.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Group.streamline" -> "pyparsing.Group.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Group.streamline" -> "pyparsing.OneOrMore.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Group.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.OneOrMore.streamline" -> "pyparsing.OneOrMore.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.OneOrMore.streamline" -> "pyparsing.MatchFirst.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.OneOrMore.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.MatchFirst.streamline" [color = "#b2b2b2ff", label = "22"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.Group.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.Word.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.Regex.streamline" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.MatchFirst.__str__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "33"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.CharsNotIn.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.MatchFirst.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.MatchFirst.__str__" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "44"];
    "pyparsing.Suppress.streamline" -> "pyparsing.Suppress.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Suppress.streamline" -> "pyparsing._SingleCharLiteral.streamline" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Suppress.__str__" -> "pyparsing.Suppress.__str__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Suppress.__str__" -> "pyparsing._SingleCharLiteral.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Group.__str__" -> "pyparsing.Group.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Group.__str__" -> "pyparsing.And.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Group.__str__" -> "pyparsing.OneOrMore.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.OneOrMore.__str__" -> "pyparsing.MatchFirst.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And._parseNoCache" -> "pyparsing.And.preParse" [color = "#b2b2b2ff", label = "19"];
    "pyparsing.And._parseNoCache" -> "pyparsing.And.parseImpl" [color = "#b1b2b2ff", label = "63"];
    "pyparsing.And._parseNoCache" -> "pyparsing.And.postParse" [color = "#b2b2b2ff", label = "28"];
    "pyparsing.And._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "37"];
    "pyparsing.And._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "37"];
    "pyparsing.And._parseNoCache" -> "pyparsing.wrapper" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.And.parseImpl" -> "pyparsing._SingleCharLiteral._parseNoCache" [color = "#b2b2b2ff", label = "21"];
    "pyparsing.And.parseImpl" -> "pyparsing.Optional._parseNoCache" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.And.parseImpl" -> "pyparsing.ParseResults.__bool__" [color = "#b2b2b2ff", label = "54"];
    "pyparsing.And.parseImpl" -> "pyparsing.ParseResults.haskeys" [color = "#b2b2b2ff", label = "42"];
    "pyparsing.And.parseImpl" -> "pyparsing.Group._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.parseImpl" -> "pyparsing.MatchFirst._parseNoCache" [color = "#b2b2b2ff", label = "14"];
    "pyparsing.And.parseImpl" -> "pyparsing.Suppress._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.And.parseImpl" -> "pyparsing.ParseResults.__iadd__" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.And.parseImpl" -> "pyparsing.Regex._parseNoCache" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.And.parseImpl" -> "pyparsing.ZeroOrMore._parseNoCache" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.And.parseImpl" -> "pyparsing.StringEnd._parseNoCache" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.And.parseImpl" -> "pyparsing.Optional._parseCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.And.parseImpl" -> "pyparsing.Regex._parseCache" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.And.parseImpl" -> "pyparsing.ZeroOrMore._parseCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.And.parseImpl" -> "pyparsing._SingleCharLiteral._parseCache" [color = "#b2b2b2ff", label = "14"];
    "pyparsing.And.parseImpl" -> "pyparsing.StringEnd._parseCache" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.parseImpl" -> "pyparsing.MatchFirst._parseCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.parseImpl" -> "pyparsing.Suppress._parseCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing._SingleCharLiteral.parseImpl" [color = "#b2b2b2ff", label = "47"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing._SingleCharLiteral.postParse" [color = "#b2b2b2ff", label = "12"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "12"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "12"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing._SingleCharLiteral.preParse" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._SingleCharLiteral._parseNoCache" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "23"];
    "pyparsing.Optional._parseNoCache" -> "pyparsing.Optional.preParse" [color = "#b2b2b2ff", label = "11"];
    "pyparsing.Optional._parseNoCache" -> "pyparsing.Optional.parseImpl" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.Optional._parseNoCache" -> "pyparsing.Optional.postParse" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.Optional._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.Optional._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.Optional.parseImpl" -> "pyparsing._SingleCharLiteral._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.parseImpl" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Optional.parseImpl" -> "pyparsing.And._parseCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._SingleCharLiteral.parseImpl" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.Group._parseNoCache" -> "pyparsing.Group.parseImpl" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Group._parseNoCache" -> "pyparsing.Group.preParse" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Group._parseNoCache" -> "pyparsing.Group.postParse" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Group._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Group._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Group.parseImpl" -> "pyparsing.OneOrMore._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Group.parseImpl" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.OneOrMore._parseNoCache" -> "pyparsing.OneOrMore.parseImpl" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore._parseNoCache" -> "pyparsing.OneOrMore.postParse" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore.parseImpl" -> "pyparsing.MatchFirst._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.OneOrMore.parseImpl" -> "pyparsing.ParseResults.__bool__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.OneOrMore.parseImpl" -> "pyparsing.ParseResults.__iadd__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.MatchFirst._parseNoCache" -> "pyparsing.MatchFirst.parseImpl" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.MatchFirst._parseNoCache" -> "pyparsing.MatchFirst.postParse" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.MatchFirst._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.MatchFirst._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.MatchFirst._parseNoCache" -> "pyparsing.wrapper" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.Group._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.Word._parseNoCache" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.Regex._parseNoCache" [color = "#b2b2b2ff", label = "22"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.CharsNotIn._parseNoCache" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.And._parseCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst.parseImpl" -> "pyparsing.Regex._parseCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Word._parseNoCache" -> "pyparsing.Word.preParse" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.Word._parseNoCache" -> "pyparsing.Word.parseImpl" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.Word.parseImpl" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "16"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.Regex.preParse" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.Regex.parseImpl" [color = "#b2b2b2ff", label = "37"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.Regex.postParse" [color = "#b2b2b2ff", label = "29"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "58"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "58"];
    "pyparsing.Regex._parseNoCache" -> "pyparsing.wrapper" [color = "#b2b2b2ff", label = "29"];
    "pyparsing.Regex.parseImpl" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "29"];
    "pyparsing.Regex.parseImpl" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "29"];
    "pyparsing.Regex.parseImpl" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.wrapper" -> "pyparsing.<lambda>" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.wrapper" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.wrapper" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser._families" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.wrapper" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser._name" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.wrapper" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser._property" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.<lambda>" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "20"];
    "pyparsing.<lambda>" -> "pyparsing.<genexpr>" [color = "#b1b2b2ff", label = "97"];
    "pyparsing.Suppress._parseNoCache" -> "pyparsing.Suppress.preParse" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Suppress._parseNoCache" -> "pyparsing.Suppress.parseImpl" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.Suppress._parseNoCache" -> "pyparsing.Suppress.postParse" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Suppress._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Suppress._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Suppress.parseImpl" -> "pyparsing._SingleCharLiteral._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Suppress.parseImpl" -> "pyparsing._SingleCharLiteral._parseCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.CharsNotIn._parseNoCache" -> "pyparsing.CharsNotIn.preParse" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.CharsNotIn._parseNoCache" -> "pyparsing.CharsNotIn.parseImpl" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.CharsNotIn.parseImpl" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ParseResults.__init__" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__init__" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__init__" -> "pyparsing._ParseResultsWithOffset.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__init__" -> "pyparsing.ParseResults.__setitem__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__init__" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__setitem__" -> "pyparsing._ParseResultsWithOffset.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ParseResults.__getitem__" -> "pyparsing._ParseResultsWithOffset.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ParseResults.__iadd__" -> "pyparsing.<listcomp>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__iadd__" -> "pyparsing.ParseResults.__setitem__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ParseResults.__iadd__" -> "pyparsing._ParseResultsWithOffset.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ParseResults.__getattr__" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.makeHTMLTags" -> "pyparsing._makeTags" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Word.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._makeTags" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Combine.setParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Combine.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing._WordRegex.__call__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Suppress.__add__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._makeTags" -> "pyparsing._WordRegex.setParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._makeTags" -> "pyparsing._WordRegex.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Group.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.ZeroOrMore.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Dict.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.And.__add__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing._makeTags" -> "pyparsing.Optional.__call__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Optional.setParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Literal.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Combine.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.And.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.And.addParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.Combine.__call__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._makeTags" -> "pyparsing.Combine.setName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._makeTags" -> "pyparsing.SkipTo.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Combine.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing._WordRegex.__call__" -> "pyparsing._WordRegex._setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._WordRegex._setResultsName" -> "pyparsing._WordRegex.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing._WordRegex.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.Suppress.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing._WordRegex.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "6"];
    "pyparsing._WordRegex.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "3"];
    "pyparsing._WordRegex.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ZeroOrMore.__init__" -> "pyparsing.ZeroOrMore.__init__" [color = "#b2b2b2ff", label = "21"];
    "pyparsing.ZeroOrMore.__init__" -> "pyparsing.ZeroOrMore.setWhitespaceChars" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.ZeroOrMore.__init__" -> "pyparsing.ZeroOrMore.stopOn" [color = "#b2b2b2ff", label = "7"];
    "pyparsing.Dict.__init__" -> "pyparsing.Dict.__init__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Dict.__init__" -> "pyparsing.Dict.setWhitespaceChars" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.__call__" -> "pyparsing.Optional._setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Literal.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.addParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Combine.__call__" -> "pyparsing.Combine._setResultsName" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.__call__" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine._setResultsName" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.SkipTo.__init__" -> "pyparsing.SkipTo.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.SkipTo.__init__" -> "pyparsing.SkipTo.setWhitespaceChars" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.SkipTo.__init__" -> "pyparsing.Combine.__str__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.__str__" -> "pyparsing.Combine.__str__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.Literal.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "13"];
    "pyparsing._SingleCharLiteral.__invert__" -> "pyparsing.NotAny.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.__init__" -> "pyparsing.NotAny.__init__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.NotAny.__init__" -> "pyparsing.NotAny.setWhitespaceChars" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.NotAny.__init__" -> "pyparsing._SingleCharLiteral.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.__init__" -> "pyparsing.LineEnd.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Word.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.LineEnd.__invert__" -> "pyparsing.NotAny.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore.leaveWhitespace" -> "pyparsing.And.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.OneOrMore.leaveWhitespace" -> "pyparsing.And.leaveWhitespace" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.leaveWhitespace" -> "pyparsing.And.copy" [color = "#b2b2b2ff", label = "15"];
    "pyparsing.Optional.leaveWhitespace" -> "pyparsing.And.leaveWhitespace" [color = "#b2b2b2ff", label = "15"];
    "pyparsing.Optional.leaveWhitespace" -> "pyparsing.White.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Optional.leaveWhitespace" -> "pyparsing.White.leaveWhitespace" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Word.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.NotAny.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "13"];
    "pyparsing.NotAny.leaveWhitespace" -> "pyparsing._SingleCharLiteral.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.leaveWhitespace" -> "pyparsing._SingleCharLiteral.leaveWhitespace" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.leaveWhitespace" -> "pyparsing.LineEnd.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.leaveWhitespace" -> "pyparsing.LineEnd.leaveWhitespace" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.LineEnd.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Combine.streamline" -> "pyparsing.Combine.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Combine.streamline" -> "pyparsing.OneOrMore.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.streamline" -> "pyparsing.NotAny.streamline" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.NotAny.streamline" -> "pyparsing._SingleCharLiteral.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.streamline" -> "pyparsing.LineEnd.streamline" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.__str__" -> "pyparsing._SingleCharLiteral.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.NotAny.__str__" -> "pyparsing.LineEnd.__str__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._WordRegex.__str__" -> "pyparsing._WordRegex.__str__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.delimitedList" -> "pyparsing.Optional.__str__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.delimitedList" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.delimitedList" -> "pyparsing.Suppress.__add__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.delimitedList" -> "pyparsing.ZeroOrMore.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.delimitedList" -> "pyparsing.Optional.__add__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.delimitedList" -> "pyparsing.And.setName" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Optional.__add__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.tokenMap" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.pyparsing_common" -> "pyparsing.Word.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.pyparsing_common" -> "pyparsing._WordRegex.setName" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.pyparsing_common" -> "pyparsing._WordRegex.setParseAction" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.__init__" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.setName" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.setParseAction" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.__call__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.__add__" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.__add__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.setName" [color = "#b2b2b2ff", label = "5"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.addParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.pyparsing_common" -> "pyparsing.Optional.suppress" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Suppress.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.__or__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.MatchFirst.setName" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.MatchFirst.addParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.MatchFirst.__or__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.MatchFirst.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Regex.__radd__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.__mul__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.pyparsing_common" -> "pyparsing.Optional.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.addCondition" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.setName" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.pyparsing_common" -> "pyparsing.And.suppress" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.suppress" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Suppress.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing._SingleCharLiteral.__invert__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.LineEnd.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.LineEnd.__invert__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.NotAny.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.White.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.OneOrMore.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.streamline" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.Combine.__or__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_common" -> "pyparsing.delimitedList" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Regex.__call__" -> "pyparsing.Regex.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional.suppress" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.MatchFirst.addParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Regex.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Regex.__radd__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.Regex.__radd__" -> "pyparsing._SingleCharLiteral.__add__" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.Regex.__radd__" -> "pyparsing.Literal.__add__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__mul__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.__mul__" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "6"];
    "pyparsing.And.__mul__" -> "pyparsing.And.makeOptionalList" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.And.makeOptionalList" -> "pyparsing.And.makeOptionalList" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.And.makeOptionalList" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.And.makeOptionalList" -> "pyparsing.And.__add__" [color = "#b2b2b2ff", label = "10"];
    "pyparsing.And.addCondition" -> "pyparsing.conditionAsParseAction" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.conditionAsParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.conditionAsParseAction" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.conditionAsParseAction" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "sre_parse._escape" -> "sre_parse.Pattern.groups" [color = "#b2b2b2ff", label = "1"];
    "sre_parse._escape" -> "sre_parse.Pattern.checkgroup" [color = "#b2b2b2ff", label = "1"];
    "sre_parse._escape" -> "sre_parse.Pattern.checklookbehindgroup" [color = "#b2b2b2ff", label = "1"];
    "sre_parse.Pattern.checkgroup" -> "sre_parse.Pattern.groups" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.suppress" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Combine.suppress" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Suppress.__or__" -> "pyparsing.MatchFirst.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.NotAny.__add__" -> "pyparsing.And.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.White.__init__" -> "pyparsing.White.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.White.__init__" -> "pyparsing.White.<genexpr>" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.White.__init__" -> "pyparsing.White.setWhitespaceChars" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.White.__init__" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "3"];
    "pyparsing.White.copy" -> "copy.copy" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.unicode_set" -> "pyparsing._lazyclassproperty.__init__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Latin1" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.LatinA" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.LatinB" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Greek" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Cyrillic" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Chinese" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Japanese" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Korean" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.CJK" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Thai" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Arabic" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Hebrew" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_unicode" -> "pyparsing.Devanagari" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Japanese" -> "pyparsing.Kanji" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Japanese" -> "pyparsing.Hiragana" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.Japanese" -> "pyparsing.Katakana" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_test" -> "pyparsing.reset_pyparsing_context" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.pyparsing_test" -> "pyparsing.TestParseResultsAsserts" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.TestParseResultsAsserts" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Regex.__init__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Regex.setParseAction" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Literal.__init__" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing._SingleCharLiteral.__add__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.ZeroOrMore.__init__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Regex.__add__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.And.setParseAction" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Suppress.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.And.__add__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Suppress.__add__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.And.__or__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.MatchFirst.setParseAction" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Optional.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.Optional.__add__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.__init__" -> "pyparsing.StringEnd.__init__" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.And.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.And.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst.setParseAction" -> "pyparsing.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst.setParseAction" -> "pyparsing._trim_arity" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.colors.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colors.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors._ColorMapping" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.<dictcomp>" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colors.<module>" -> "matplotlib.colors._ColorMapping.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.ColorConverter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colors.<module>" -> "matplotlib.docstring.copy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.docstring.do_copy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.Colormap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.LinearSegmentedColormap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.ListedColormap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.Normalize" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.TwoSlopeNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.DivergingNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.LogNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.SymLogNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.PowerNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.BoundaryNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.NoNorm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colors.<module>" -> "matplotlib.colors.LightSource" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.docstring.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.docstring.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.docstring.<module>" -> "matplotlib.docstring.Substitution" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.docstring.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.docstring.<module>" -> "matplotlib.docstring.Appender" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.docstring.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.docstring.<module>" -> "matplotlib.docstring.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._color_data.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib._color_data.<module>" -> "matplotlib._color_data.<genexpr>" [color = "#b2b2b2ff", label = "11"];
    "matplotlib._color_data.<module>" -> "matplotlib._color_data.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "cycler.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "cycler.<module>" -> "cycler.Cycler" [color = "#b2b2b2ff", label = "1"];
    "six.MovedAttribute.__get__" -> "six.MovedAttribute._resolve" [color = "#b2b2b2ff", label = "3"];
    "six.MovedAttribute._resolve" -> "six._import_module" [color = "#b2b2b2ff", label = "3"];
    "logging.getLogger" -> "logging.Manager.getLogger" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager.getLogger" -> "logging._acquireLock" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager.getLogger" -> "logging.Logger.__init__" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager.getLogger" -> "logging.Manager._fixupParents" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager.getLogger" -> "logging._releaseLock" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager.getLogger" -> "logging.Manager._fixupChildren" [color = "#b2b2b2ff", label = "1"];
    "logging.Logger.__init__" -> "logging.Logger.__init__" [color = "#b2b2b2ff", label = "30"];
    "logging.Logger.__init__" -> "logging._checkLevel" [color = "#b2b2b2ff", label = "30"];
    "logging.Manager._fixupParents" -> "logging.PlaceHolder.__init__" [color = "#b2b2b2ff", label = "4"];
    "logging.Manager._fixupParents" -> "logging.PlaceHolder.append" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rcsetup.ValidateInStrings.__init__" -> "matplotlib.rcsetup.<dictcomp>" [color = "#b2b2b2ff", label = "26"];
    "matplotlib.rcsetup.<dictcomp>" -> "matplotlib.rcsetup.func" [color = "#b1b2b2ff", label = "183"];
    "cycler.cycler" -> "cycler._cycler" [color = "#b2b2b2ff", label = "16"];
    "cycler._cycler" -> "cycler._from_iter" [color = "#b2b2b2ff", label = "16"];
    "cycler._from_iter" -> "cycler.Cycler.__init__" [color = "#b2b2b2ff", label = "16"];
    "cycler._from_iter" -> "cycler.<genexpr>" [color = "#b1b2b2ff", label = "130"];
    "cycler.Cycler.__init__" -> "cycler._process_keys" [color = "#b2b2b2ff", label = "16"];
    "matplotlib._version.get_versions" -> "json.loads" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._check_versions" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._check_versions" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._check_versions" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib._check_versions" -> "importlib.import_module" [color = "#b1b2b2ff", label = "5"];
    "matplotlib._check_versions" -> "distutils.version.LooseVersion.__init__" [color = "#b2b2b2ff", label = "5"];
    "matplotlib._check_versions" -> "distutils.version.LooseVersion.__lt__" [color = "#b2b2b2ff", label = "5"];
    "matplotlib._logged_cached" -> "functools.wraps" [color = "#b2b2b2ff", label = "5"];
    "matplotlib._logged_cached" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.RcParams" -> "matplotlib.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params" -> "matplotlib.matplotlib_fname" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params" -> "matplotlib.rc_params_from_file" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.matplotlib_fname" -> "matplotlib.gen_candidates" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.matplotlib_fname" -> "genericpath.exists" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.matplotlib_fname" -> "genericpath.isdir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gen_candidates" -> "posixpath.join" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.gen_candidates" -> "os._Environ.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gen_candidates" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.wrapper" -> "matplotlib.get_configdir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.wrapper" -> "logging.Logger.debug" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.wrapper" -> "matplotlib._get_data_path" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.wrapper" -> "matplotlib.get_data_path" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.wrapper" -> "matplotlib.get_cachedir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_configdir" -> "matplotlib._get_xdg_config_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_configdir" -> "matplotlib._get_config_or_cache_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_config_dir" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_config_dir" -> "pathlib.home" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_config_dir" -> "pathlib.PosixPath.__truediv__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_config_dir" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "1"];
    "pathlib.home" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "14"];
    "pathlib.home" -> "pathlib._PosixFlavour.gethomedir" [color = "#b2b2b2ff", label = "7"];
    "pathlib.__new__" -> "pathlib._from_parts" [color = "#b2b2b2ff", label = "22"];
    "pathlib.__new__" -> "pathlib.PosixPath._init" [color = "#b2b2b2ff", label = "22"];
    "pathlib._from_parts" -> "pathlib._parse_args" [color = "#b2b2b2ff", label = "22"];
    "pathlib._parse_args" -> "pathlib._PosixFlavour.parse_parts" [color = "#b2b2b2ff", label = "30"];
    "pathlib._PosixFlavour.gethomedir" -> "os._Environ.__getitem__" [color = "#b2b2b2ff", label = "7"];
    "pathlib._PosixFlavour.parse_parts" -> "pathlib._PosixFlavour.splitroot" [color = "#b2b2b2ff", label = "31"];
    "pathlib.PosixPath.__truediv__" -> "pathlib.PosixPath._make_child" [color = "#b2b2b2ff", label = "8"];
    "pathlib.PosixPath._make_child" -> "pathlib._parse_args" [color = "#b2b2b2ff", label = "8"];
    "pathlib.PosixPath._make_child" -> "pathlib._PosixFlavour.join_parsed_parts" [color = "#b2b2b2ff", label = "8"];
    "pathlib.PosixPath._make_child" -> "pathlib._from_parsed_parts" [color = "#b2b2b2ff", label = "8"];
    "pathlib._from_parsed_parts" -> "pathlib.PosixPath._init" [color = "#b2b2b2ff", label = "35"];
    "pathlib.PosixPath.__str__" -> "pathlib._format_parsed_parts" [color = "#b2b2b2ff", label = "40"];
    "matplotlib._get_config_or_cache_dir" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "2"];
    "matplotlib._get_config_or_cache_dir" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib._get_config_or_cache_dir" -> "pathlib.PosixPath.mkdir" [color = "#b2b2b2ff", label = "2"];
    "matplotlib._get_config_or_cache_dir" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib._get_config_or_cache_dir" -> "pathlib.PosixPath.is_dir" [color = "#b2b2b2ff", label = "2"];
    "pathlib.PosixPath.mkdir" -> "pathlib.wrapped" [color = "#b2b2b2ff", label = "3"];
    "pathlib.PosixPath.mkdir" -> "pathlib.PosixPath.is_dir" [color = "#b2b2b2ff", label = "3"];
    "pathlib.wrapped" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "12"];
    "pathlib.PosixPath.is_dir" -> "pathlib.PosixPath.stat" [color = "#b2b2b2ff", label = "8"];
    "pathlib.PosixPath.stat" -> "pathlib.wrapped" [color = "#b2b2b2ff", label = "8"];
    "logging.Logger.debug" -> "logging.Logger.isEnabledFor" [color = "#b2b2b2ff", label = "13"];
    "logging.Logger.isEnabledFor" -> "logging.Logger.getEffectiveLevel" [color = "#b2b2b2ff", label = "13"];
    "matplotlib._get_data_path" -> "collections.abc._Environ.__contains__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_data_path" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_data_path" -> "pathlib.PosixPath.with_name" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_data_path" -> "pathlib.PosixPath.is_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_data_path" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "2"];
    "pathlib.PosixPath.with_name" -> "pathlib.PosixPath.name" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.with_name" -> "pathlib._PosixFlavour.parse_parts" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.with_name" -> "pathlib._from_parsed_parts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "matplotlib._rc_params_in_file" [color = "#b1b2b2ff", label = "27"];
    "matplotlib.rc_params_from_file" -> "contextlib.helper" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.rc_params_from_file" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.rc_params_from_file" -> "matplotlib.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "matplotlib.RcParams.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.rc_params_from_file" -> "collections.abc.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "3"];
    "matplotlib.rc_params_from_file" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "matplotlib.RcParams.__setitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.rc_params_from_file" -> "logging.Logger.debug" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._rc_params_in_file" -> "contextlib.helper" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._rc_params_in_file" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._rc_params_in_file" -> "encodings.ascii.IncrementalDecoder.decode" [color = "#b2b2b2ff", label = "61"];
    "matplotlib._rc_params_in_file" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._rc_params_in_file" -> "matplotlib.RcParams.__init__" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._rc_params_in_file" -> "matplotlib.RcParams.__setitem__" [color = "#aeb2b2ff", label = "633"];
    "matplotlib._open_file_or_url" -> "matplotlib.is_url" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._open_file_or_url" -> "posixpath.expanduser" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._open_file_or_url" -> "locale.getpreferredencoding" [color = "#b2b2b2ff", label = "27"];
    "matplotlib._open_file_or_url" -> "codecs.IncrementalDecoder.__init__" [color = "#b2b2b2ff", label = "27"];
    "locale.getpreferredencoding" -> "_bootlocale.getpreferredencoding" [color = "#b2b2b2ff", label = "27"];
    "matplotlib.RcParams.__init__" -> "collections.abc.update" [color = "#b2b2b2ff", label = "30"];
    "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" -> "warnings.catch_warnings.__init__" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" -> "warnings.catch_warnings.__enter__" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" -> "warnings.simplefilter" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.cbook.deprecation._suppress_matplotlib_deprecation_warning" -> "warnings.catch_warnings.__exit__" [color = "#b2b2b2ff", label = "5"];
    "collections.abc.update" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "4"];
    "collections.abc.update" -> "matplotlib.RcParams.__setitem__" [color = "#acb1b2ff", label = "906"];
    "collections.abc.update" -> "matplotlib.RcParams.__iter__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.RcParams.__setitem__" -> "collections.abc.RcParams.__contains__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_backend" [color = "#b2b2b2ff", label = "11"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_bool" [color = "#b0b2b2ff", label = "293"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validator" [color = "#afb2b2ff", label = "513"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_webagg_address" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.ValidateInStrings.__call__" [color = "#b1b2b2ff", label = "100"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.cbook.deprecation.warn_deprecated" [color = "#b2b2b2ff", label = "16"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_any" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup._validate_linestyle" [color = "#b2b2b2ff", label = "46"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_color" [color = "#b1b2b2ff", label = "208"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_color_or_auto" [color = "#b2b2b2ff", label = "15"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_hist_bins" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_whiskers" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.f" [color = "#b1b2b2ff", label = "111"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_fontweight" [color = "#b2b2b2ff", label = "16"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup._validate_tex_preamble" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_hinting" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_font_properties" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_mathtext_default" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_aspect" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_axisbelow" [color = "#b2b2b2ff", label = "13"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_fontsize" [color = "#b2b2b2ff", label = "57"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_cycler" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup._validate_greaterequal0_lessequal1" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_fontsize_None" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_color_or_inherit" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup._validate_greaterequal0_lessthan1" [color = "#b2b2b2ff", label = "14"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_dpi" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup._update_savefig_format" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_bbox" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_ps_distiller" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_fonttype" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.RcParams.__setitem__" -> "matplotlib.rcsetup.validate_sketch" [color = "#b2b2b2ff", label = "4"];
    "collections.abc.RcParams.__contains__" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "3"];
    "matplotlib.cbook.deprecation.warn_deprecated" -> "matplotlib.cbook.deprecation._generate_deprecation_warning" [color = "#b2b2b2ff", label = "17"];
    "matplotlib.cbook.deprecation.warn_deprecated" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "17"];
    "matplotlib.cbook.deprecation.warn_deprecated" -> "_handle_fromlist" [color = "#a5afb2ff", label = "17"];
    "matplotlib.cbook.deprecation.warn_deprecated" -> "matplotlib.cbook._warn_external" [color = "#b2b2b2ff", label = "17"];
    "matplotlib.cbook._warn_external" -> "re.match" [color = "#b1b2b2ff", label = "75"];
    "matplotlib.rcsetup._validate_linestyle" -> "matplotlib.rcsetup.ValidateInStrings.__call__" [color = "#b2b2b2ff", label = "46"];
    "matplotlib.rcsetup.validate_color" -> "matplotlib.colors.is_color_like" [color = "#afb2b2ff", label = "451"];
    "matplotlib.colors.is_color_like" -> "matplotlib.colors._is_nth_color" [color = "#afb2b2ff", label = "451"];
    "matplotlib.colors.is_color_like" -> "matplotlib.colors.to_rgba" [color = "#afb2b2ff", label = "433"];
    "matplotlib.colors._is_nth_color" -> "re.match" [color = "#adb2b2ff", label = "884"];
    "matplotlib.rcsetup.validator" -> "matplotlib.rcsetup.<listcomp>" [color = "#b2b2b2ff", label = "36"];
    "matplotlib.colors.to_rgba" -> "matplotlib.colors._is_nth_color" [color = "#aeb2b2ff", label = "719"];
    "matplotlib.colors.to_rgba" -> "matplotlib.colors._to_rgba_no_colorcycle" [color = "#b0b2b2ff", label = "371"];
    "matplotlib.colors._to_rgba_no_colorcycle" -> "re.match" [color = "#b1b2b2ff", label = "152"];
    "matplotlib.colors._to_rgba_no_colorcycle" -> "matplotlib.colors.<genexpr>" [color = "#a9b1b2ff", label = "1692"];
    "matplotlib.colors._to_rgba_no_colorcycle" -> "can_cast" [color = "#b1b2b2ff", label = "252"];
    "matplotlib.rcsetup.validate_whiskers" -> "matplotlib.rcsetup._make_nseq_validator" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.rcsetup.validate_whiskers" -> "matplotlib.rcsetup.validator" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.rcsetup.validate_color_or_auto" -> "matplotlib.rcsetup.validate_color" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.rcsetup.f" -> "abc.__instancecheck__" [color = "#b1b2b2ff", label = "220"];
    "matplotlib.rcsetup.f" -> "matplotlib.rcsetup.<listcomp>" [color = "#b1b2b2ff", label = "145"];
    "matplotlib.rcsetup.<listcomp>" -> "matplotlib.rcsetup.validator" [color = "#b0b2b2ff", label = "349"];
    "matplotlib.rcsetup.<listcomp>" -> "matplotlib.rcsetup.validate_color_for_prop_cycle" [color = "#b1b2b2ff", label = "239"];
    "matplotlib.rcsetup.validate_font_properties" -> "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse" -> "pyparsing.And.parseString" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser.parse" -> "pyparsing.resetCache" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.ZeroOrMore.streamline" -> "pyparsing.ZeroOrMore.streamline" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ZeroOrMore.streamline" -> "pyparsing.And.streamline" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.ZeroOrMore.__str__" -> "pyparsing.And.__str__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" -> "re._subx" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._family" -> "re.filter" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.ZeroOrMore._parseNoCache" -> "pyparsing.ZeroOrMore.preParse" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore._parseNoCache" -> "pyparsing.ZeroOrMore.parseImpl" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore._parseNoCache" -> "pyparsing.ZeroOrMore.postParse" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore.parseImpl" -> "pyparsing.ZeroOrMore.parseImpl" [color = "#b2b2b2ff", label = "18"];
    "pyparsing.ZeroOrMore.parseImpl" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "12"];
    "pyparsing.ZeroOrMore.parseImpl" -> "pyparsing.And._parseCache" [color = "#b2b2b2ff", label = "10"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._families" -> "pyparsing.ParseResults.__iter__" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._families" -> "matplotlib.fontconfig_pattern.<listcomp>" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.StringEnd._parseNoCache" -> "pyparsing.StringEnd.preParse" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.StringEnd._parseNoCache" -> "pyparsing.StringEnd.parseImpl" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.StringEnd._parseNoCache" -> "pyparsing.StringEnd.postParse" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.StringEnd._parseNoCache" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "9"];
    "pyparsing.StringEnd._parseNoCache" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._name" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._property" -> "pyparsing.ParseResults.__len__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.fontconfig_pattern.FontconfigPatternParser._property" -> "pyparsing.ParseResults.__getitem__" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.rcsetup.validate_mathtext_default" -> "matplotlib.rcsetup.ValidateInStrings.__init__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.rcsetup.validate_mathtext_default" -> "matplotlib.rcsetup.ValidateInStrings.__call__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.rcsetup.validate_axisbelow" -> "matplotlib.rcsetup.validate_bool" [color = "#b2b2b2ff", label = "13"];
    "matplotlib.rcsetup.validate_cycler" -> "cycler.Cycler.keys" [color = "#b2b2b2ff", label = "72"];
    "matplotlib.rcsetup.validate_cycler" -> "cycler.Cycler.change_key" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.rcsetup.validate_cycler" -> "cycler.Cycler.by_key" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.rcsetup.validate_cycler" -> "matplotlib.rcsetup.f" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.rcsetup.validate_cycler" -> "<module>" [color = "#b23bb2ff", label = "15"];
    "cycler.Cycler.by_key" -> "cycler.Cycler.keys" [color = "#b2b2b2ff", label = "18"];
    "cycler.Cycler.by_key" -> "cycler.<genexpr>" [color = "#b1b2b2ff", label = "188"];
    "cycler.Cycler.by_key" -> "cycler.Cycler.__iter__" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.rcsetup.validate_color_for_prop_cycle" -> "re.match" [color = "#b1b2b2ff", label = "239"];
    "matplotlib.rcsetup.validate_color_for_prop_cycle" -> "matplotlib.rcsetup.validate_color" [color = "#b0b2b2ff", label = "239"];
    "matplotlib.rcsetup._validate_greaterequal0_lessequal1" -> "matplotlib.rcsetup.validator" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.rcsetup.validate_color_or_inherit" -> "matplotlib.rcsetup.validate_color" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.rcsetup._validate_greaterequal0_lessthan1" -> "matplotlib.rcsetup.validator" [color = "#b2b2b2ff", label = "14"];
    "matplotlib.rcsetup._update_savefig_format" -> "matplotlib.rcsetup.validator" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.rcsetup.validate_fonttype" -> "matplotlib.rcsetup.validator" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.RcParams.__iter__" -> "contextlib.helper" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.RcParams.__iter__" -> "contextlib._GeneratorContextManager.__enter__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.RcParams.__iter__" -> "contextlib._GeneratorContextManager.__exit__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.get_data_path" -> "matplotlib.cbook.deprecation.warn_deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_data_path" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_data_path" -> "pathlib.PosixPath.is_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_data_path" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.RcParams.copy" -> "matplotlib.RcParams.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.RcParams.<dictcomp>" -> "matplotlib.RcParams.__iter__" [color = "#b0b2b2ff", label = "303"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "inspect.signature" [color = "#b1b2b2ff", label = "12"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "matplotlib.cbook.deprecation.<listcomp>" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "inspect.Signature.replace" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "functools.wraps" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.cbook.deprecation._delete_parameter" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "12"];
    "inspect.signature" -> "inspect.from_callable" [color = "#adb2b2ff", label = "654"];
    "inspect.from_callable" -> "inspect._signature_from_callable" [color = "#adb2b2ff", label = "654"];
    "inspect._signature_from_callable" -> "inspect.unwrap" [color = "#aeb2b2ff", label = "710"];
    "inspect._signature_from_callable" -> "inspect.isfunction" [color = "#aeb2b2ff", label = "701"];
    "inspect._signature_from_callable" -> "inspect._signature_from_function" [color = "#aeb2b2ff", label = "645"];
    "inspect._signature_from_callable" -> "inspect._signature_is_functionlike" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_from_callable" -> "inspect._signature_is_builtin" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_from_callable" -> "inspect._signature_get_user_defined_method" [color = "#b1b2b2ff", label = "168"];
    "inspect._signature_from_callable" -> "inspect._signature_from_callable" [color = "#b1b2b2ff", label = "56"];
    "inspect._signature_from_callable" -> "inspect._signature_bound_method" [color = "#b2b2b2ff", label = "56"];
    "inspect.unwrap" -> "inspect._is_wrapper" [color = "#aeb2b2ff", label = "782"];
    "inspect._signature_from_function" -> "inspect.isfunction" [color = "#aeb2b2ff", label = "645"];
    "inspect._signature_from_function" -> "inspect.Parameter.__init__" [color = "#a7b0b2ff", label = "1868"];
    "inspect._signature_from_function" -> "inspect.Signature.__init__" [color = "#aeb2b2ff", label = "645"];
    "inspect.<genexpr>" -> "inspect.Parameter.name" [color = "#a8b0b2ff", label = "1868"];
    "matplotlib.cbook.deprecation.<listcomp>" -> "inspect.Parameter.name" [color = "#b1b2b2ff", label = "128"];
    "matplotlib.cbook.deprecation.<listcomp>" -> "inspect.Parameter.replace" [color = "#b2b2b2ff", label = "20"];
    "matplotlib.cbook.deprecation.<listcomp>" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.cbook.deprecation.<listcomp>" -> "inspect.Parameter.kind" [color = "#b2b2b2ff", label = "8"];
    "inspect.Parameter.replace" -> "inspect.Parameter.__init__" [color = "#b2b2b2ff", label = "20"];
    "inspect.Signature.replace" -> "inspect.Signature.__init__" [color = "#b1b2b2ff", label = "112"];
    "matplotlib.cbook.deprecation._rename_parameter" -> "inspect.signature" [color = "#b1b2b2ff", label = "10"];
    "matplotlib.cbook.deprecation._rename_parameter" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "20"];
    "matplotlib.cbook.deprecation._rename_parameter" -> "functools.wraps" [color = "#b2b2b2ff", label = "10"];
    "matplotlib.cbook.deprecation._rename_parameter" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "10"];
    "inspect._is_wrapper" -> "inspect.<lambda>" [color = "#b2b2b2ff", label = "81"];
    "matplotlib.is_interactive" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "28"];
    "matplotlib.pyplot.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "matplotlib.pyplot.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "matplotlib.docstring.copy" [color = "#b2b2b2ff", label = "89"];
    "matplotlib.pyplot.<module>" -> "matplotlib.docstring.do_copy" [color = "#b2b2b2ff", label = "89"];
    "matplotlib.pyplot.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.pyplot.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "2"];
    "matplotlib.pyplot.<module>" -> "matplotlib.pyplot.switch_backend" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "matplotlib.pyplot.install_repl_displayhook" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.<module>" -> "matplotlib.pyplot._setup_pyplot_info_docstrings" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "matplotlib.colorbar.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar._ColorbarAutoLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar._ColorbarAutoMinorLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar._ColorbarLogLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar._ColorbarMappableDummy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar.ColorbarBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar.Colorbar" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar.<module>" -> "matplotlib.docstring.Substitution.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colorbar.<module>" -> "matplotlib.docstring.Substitution.__call__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.colorbar.<module>" -> "matplotlib.colorbar.ColorbarPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.artist.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.artist.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.artist.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "matplotlib.artist.Artist" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "matplotlib.artist.ArtistInspector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.artist.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.path.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.path.<module>" -> "matplotlib.path.Path" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.Path" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.Path" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.Path" -> "weakref.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.path.Path" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.Path" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.transforms.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.TransformNode" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BboxBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.Bbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.TransformedBbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.LockableBbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.Transform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.TransformWrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "14"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.AffineBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.Affine2DBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.Affine2D" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.IdentityTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms._BlendedMixin" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BlendedGenericTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BlendedAffine2D" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.CompositeGenericTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.CompositeAffine2D" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BboxTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BboxTransformTo" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BboxTransformToMaxOnly" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.BboxTransformFrom" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.ScaledTranslation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.TransformedPath" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.<module>" -> "matplotlib.transforms.TransformedPatchPath" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.BboxBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.BboxBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.__init_subclass__" -> "matplotlib.transforms.<genexpr>" [color = "#afb2b2ff", label = "502"];
    "matplotlib.transforms.Affine2DBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.Affine2DBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.IdentityTransform" -> "numpy.core.numeric.identity" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.identity" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "numpy.core.numeric.identity" -> "numpy.lib.twodim_base.eye" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.Artist" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.Artist" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.ArtistInspector" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.artist.kwdoc" -> "matplotlib.artist.ArtistInspector.__init__" [color = "#b2b2b2ff", label = "11"];
    "matplotlib.artist.kwdoc" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "11"];
    "matplotlib.artist.kwdoc" -> "matplotlib.artist.ArtistInspector.pprint_setters" [color = "#b0b2b2ff", label = "11"];
    "matplotlib.artist.ArtistInspector.__init__" -> "numpy.lib.function_base.iterable" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.artist.ArtistInspector.__init__" -> "matplotlib.artist.ArtistInspector.get_aliases" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.artist.ArtistInspector.get_aliases" -> "matplotlib.artist.ArtistInspector.<listcomp>" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.artist.ArtistInspector.get_aliases" -> "matplotlib.artist.ArtistInspector.is_alias" [color = "#abb1b2ff", label = "1162"];
    "matplotlib.artist.ArtistInspector.get_aliases" -> "inspect.getdoc" [color = "#b1b2b2ff", label = "136"];
    "matplotlib.artist.ArtistInspector.get_aliases" -> "re.search" [color = "#b0b2b2ff", label = "136"];
    "matplotlib.artist.ArtistInspector.is_alias" -> "inspect.getdoc" [color = "#a8b0b2ff", label = "1689"];
    "inspect.getdoc" -> "inspect.cleandoc" [color = "#a5afb2ff", label = "2270"];
    "inspect.getdoc" -> "inspect._finddoc" [color = "#b1b2b2ff", label = "91"];
    "inspect._finddoc" -> "inspect.isclass" [color = "#b1b2b2ff", label = "91"];
    "inspect._finddoc" -> "inspect.ismethod" [color = "#b1b2b2ff", label = "91"];
    "inspect._finddoc" -> "inspect.isfunction" [color = "#b1b2b2ff", label = "91"];
    "inspect._finddoc" -> "inspect._findclass" [color = "#b1b2b2ff", label = "91"];
    "inspect._findclass" -> "inspect.isclass" [color = "#b2b2b2ff", label = "90"];
    "matplotlib.artist.ArtistInspector.pprint_setters" -> "matplotlib.artist.ArtistInspector._get_setters_and_targets" [color = "#b1b2b2ff", label = "11"];
    "matplotlib.artist.ArtistInspector.pprint_setters" -> "matplotlib.artist.ArtistInspector.get_valid_values" [color = "#afb2b2ff", label = "412"];
    "matplotlib.artist.ArtistInspector.pprint_setters" -> "matplotlib.artist.ArtistInspector.aliased_name" [color = "#b0b2b2ff", label = "412"];
    "matplotlib.artist.ArtistInspector._get_setters_and_targets" -> "inspect.signature" [color = "#aeb2b2ff", label = "532"];
    "matplotlib.artist.ArtistInspector._get_setters_and_targets" -> "inspect.Signature.parameters" [color = "#afb2b2ff", label = "532"];
    "matplotlib.artist.ArtistInspector._get_setters_and_targets" -> "matplotlib.artist.ArtistInspector.is_alias" [color = "#afb2b2ff", label = "527"];
    "matplotlib.artist.ArtistInspector.get_valid_values" -> "inspect.getdoc" [color = "#afb2b2ff", label = "412"];
    "matplotlib.artist.ArtistInspector.get_valid_values" -> "re.sub" [color = "#b2b2b2ff", label = "39"];
    "matplotlib.artist.ArtistInspector.get_valid_values" -> "re.search" [color = "#afb2b2ff", label = "370"];
    "matplotlib.artist.ArtistInspector.aliased_name" -> "matplotlib.artist.<genexpr>" [color = "#afb2b2ff", label = "471"];
    "re.search" -> "re._compile" [color = "#acb1b2ff", label = "507"];
    "matplotlib.collections.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.collections.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.cbook._define_aliases" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.Collection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.collections.<module>" -> "matplotlib.collections._CollectionWithSizes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.PathCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.PolyCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.BrokenBarHCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.RegularPolyCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.StarPolygonCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.AsteriskPolygonCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.LineCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.EventCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.CircleCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.EllipseCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.PatchCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.TriMesh" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.collections.QuadMesh" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "2"];
    "matplotlib.cm.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.cm.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.cm.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cm.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cm.<module>" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.cm.<module>" -> "matplotlib.cm._gen_cmap_d" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cm.<module>" -> "matplotlib.cm.ScalarMappable" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._cm.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib._cm.<module>" -> "matplotlib._cm.cubehelix" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._cm.<module>" -> "matplotlib._cm.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._cm_listed.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._cm_listed.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib._cm_listed.<module>" -> "matplotlib._cm_listed.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._cm_listed.<dictcomp>" -> "matplotlib.colors.ListedColormap.__init__" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.colors.ListedColormap.__init__" -> "matplotlib.colors.ListedColormap.__init__" [color = "#b2b2b2ff", label = "38"];
    "matplotlib.colors.ListedColormap.__init__" -> "numpy.lib.function_base.iterable" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.cm._gen_cmap_d" -> "matplotlib.colors.from_list" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.cm._gen_cmap_d" -> "matplotlib.colors.LinearSegmentedColormap.__init__" [color = "#b2b2b2ff", label = "31"];
    "matplotlib.cm._gen_cmap_d" -> "matplotlib.colors.ListedColormap.__init__" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.cm._gen_cmap_d" -> "matplotlib.colors.ListedColormap.reversed" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.cm._gen_cmap_d" -> "matplotlib.colors.LinearSegmentedColormap.reversed" [color = "#b2b2b2ff", label = "63"];
    "matplotlib.colors.from_list" -> "numpy.lib.function_base.iterable" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.colors.from_list" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.colors.from_list" -> "linspace" [color = "#b2b2b2ff", label = "30"];
    "matplotlib.colors.from_list" -> "matplotlib.colors.to_rgba" [color = "#b0b2b2ff", label = "286"];
    "matplotlib.colors.from_list" -> "matplotlib.colors.LinearSegmentedColormap.__init__" [color = "#b2b2b2ff", label = "32"];
    "linspace" -> "numpy.core.function_base._linspace_dispatcher" [color = "#b2b2b2ff", label = "30"];
    "linspace" -> "numpy.core.function_base.linspace" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.function_base.linspace" -> "numpy.core._asarray.asanyarray" [color = "#b2b2b2ff", label = "60"];
    "numpy.core.function_base.linspace" -> "result_type" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.function_base.linspace" -> "ndim" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.function_base.linspace" -> "numpy.core.numeric.isscalar" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.function_base.linspace" -> "any" [color = "#b2b2b2ff", label = "30"];
    "result_type" -> "numpy.core.multiarray.result_type" [color = "#b2b2b2ff", label = "30"];
    "ndim" -> "numpy.core.fromnumeric._ndim_dispatcher" [color = "#b2b2b2ff", label = "30"];
    "ndim" -> "numpy.core.fromnumeric.ndim" [color = "#b2b2b2ff", label = "30"];
    "any" -> "numpy.core.fromnumeric._any_dispatcher" [color = "#b2b2b2ff", label = "30"];
    "any" -> "numpy.core.fromnumeric.any" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.fromnumeric.any" -> "numpy.core.fromnumeric._wrapreduction" [color = "#b2b2b2ff", label = "30"];
    "numpy.core.fromnumeric._wrapreduction" -> "numpy.core.fromnumeric.<dictcomp>" [color = "#b2b2b2ff", label = "31"];
    "numpy.core.fromnumeric._wrapreduction" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "30"];
    "can_cast" -> "numpy.core.multiarray.can_cast" [color = "#b1b2b2ff", label = "252"];
    "matplotlib.colors.LinearSegmentedColormap.__init__" -> "matplotlib.colors.LinearSegmentedColormap.__init__" [color = "#b1b2b2ff", label = "126"];
    "matplotlib.colors.ListedColormap.reversed" -> "matplotlib.colors.ListedColormap.__init__" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.colors.LinearSegmentedColormap.reversed" -> "matplotlib.colors.LinearSegmentedColormap.<dictcomp>" [color = "#b2b2b2ff", label = "63"];
    "matplotlib.colors.LinearSegmentedColormap.reversed" -> "matplotlib.colors.LinearSegmentedColormap.__init__" [color = "#b2b2b2ff", label = "63"];
    "matplotlib.colors.LinearSegmentedColormap.<dictcomp>" -> "matplotlib.colors.<listcomp>" [color = "#b1b2b2ff", label = "188"];
    "matplotlib.lines.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "matplotlib.lines.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.lines.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "matplotlib.cbook._define_aliases" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.lines.<module>" -> "matplotlib.lines.Line2D" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "matplotlib.lines.VertexSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.markers.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "matplotlib.markers.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.markers.<module>" -> "matplotlib.path.Path.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.markers.<module>" -> "matplotlib.markers.MarkerStyle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.path.Path.__init__" -> "matplotlib.cbook._to_unmasked_float_array" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.path.Path.__init__" -> "matplotlib.path.Path._update_values" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.path.Path.__init__" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.cbook._to_unmasked_float_array" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "19"];
    "matplotlib.path.Path._update_values" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "38"];
    "matplotlib.markers.MarkerStyle" -> "matplotlib.path.Path.__init__" [color = "#b2b2b2ff", label = "17"];
    "matplotlib.lines.Line2D" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.Line2D" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.Line2D" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.lines.Line2D" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.artist.allow_rasterization" -> "functools.wraps" [color = "#b2b2b2ff", label = "27"];
    "matplotlib.artist.allow_rasterization" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "27"];
    "matplotlib.docstring.dedent_interpd" -> "inspect.getdoc" [color = "#b1b2b2ff", label = "83"];
    "matplotlib.docstring.dedent_interpd" -> "matplotlib.docstring.Substitution.__call__" [color = "#b2b2b2ff", label = "83"];
    "matplotlib.cbook._define_aliases" -> "matplotlib.cbook.make_alias" [color = "#b2b2b2ff", label = "72"];
    "matplotlib.cbook.make_alias" -> "functools.wraps" [color = "#b2b2b2ff", label = "72"];
    "matplotlib.cbook.make_alias" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "72"];
    "matplotlib.collections.Collection" -> "matplotlib.transforms.IdentityTransform.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.Collection" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.transforms.IdentityTransform.__init__" -> "matplotlib.transforms.IdentityTransform.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections._CollectionWithSizes" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.PathCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.PolyCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.BrokenBarHCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.RegularPolyCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.RegularPolyCollection" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.CircleCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.EllipseCollection" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.EllipseCollection" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.TriMesh" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.collections.QuadMesh" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.contour.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.contour.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "5"];
    "matplotlib.contour.<module>" -> "matplotlib.contour.ClabelText" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.contour.<module>" -> "matplotlib.contour.ContourLabeler" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.contour.<module>" -> "matplotlib.contour.ContourSet" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.contour.<module>" -> "matplotlib.contour.QuadContourSet" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.ticker.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker._DummyAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.TickHelper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.Formatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.IndexFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.NullFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.FixedFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.FuncFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.FormatStrFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.StrMethodFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.OldScalarFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.ScalarFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogFormatterExponent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogFormatterMathtext" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogFormatterSciNotation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogitFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.EngFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.PercentFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.Locator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.IndexLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.FixedLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.NullLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LinearLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.MultipleLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker._Edge_integer" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.MaxNLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.ticker.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.SymmetricalLogLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.LogitLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.AutoLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.AutoMinorLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.<module>" -> "matplotlib.ticker.OldAutoLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.OldScalarFormatter" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.OldScalarFormatter" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.ScalarFormatter" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.ScalarFormatter" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.LogFormatter" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.LogFormatter" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.Locator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.ticker.Locator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.font_manager.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "pathlib.home" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.font_manager.<module>" -> "pathlib.PosixPath.__truediv__" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.font_manager.<module>" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.font_manager.<module>" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.font_manager.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.font_manager.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.font_manager.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager.FontEntry" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager.FontProperties" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager._JSONEncoder" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager.JSONEncoder" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager.FontManager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "posixpath.join" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "matplotlib.font_manager.json_load" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.<module>" -> "logging.Logger.debug" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.afm.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.afm.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.afm.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.afm.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.afm.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.afm.<module>" -> "matplotlib.afm.AFM" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._mathtext_data.<module>" -> "matplotlib._mathtext_data.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.FontManager" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.FontManager" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_cachedir" -> "matplotlib._get_xdg_cache_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.get_cachedir" -> "matplotlib._get_config_or_cache_dir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_cache_dir" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_cache_dir" -> "pathlib.home" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_cache_dir" -> "pathlib.PosixPath.__truediv__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._get_xdg_cache_dir" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.json_load" -> "_bootlocale.getpreferredencoding" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.json_load" -> "codecs.IncrementalDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.font_manager.json_load" -> "json.load" [color = "#b2b2b2ff", label = "1"];
    "json.load" -> "encodings.ascii.IncrementalDecoder.decode" [color = "#b2b2b2ff", label = "1"];
    "json.load" -> "json.loads" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.JSONDecoder.raw_decode" -> "matplotlib.font_manager._json_decode" [color = "#b1b2b2ff", label = "100"];
    "matplotlib.font_manager._json_decode" -> "posixpath.isabs" [color = "#b1b2b2ff", label = "98"];
    "matplotlib.font_manager._json_decode" -> "matplotlib.wrapper" [color = "#b1b2b2ff", label = "98"];
    "matplotlib.font_manager._json_decode" -> "posixpath.join" [color = "#b1b2b2ff", label = "98"];
    "posixpath.isabs" -> "posixpath._get_sep" [color = "#b1b2b2ff", label = "99"];
    "matplotlib.text.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.text.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.text.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.text.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.cbook._define_aliases" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.text.<module>" -> "matplotlib.text.Text" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "2"];
    "matplotlib.text.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.text.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.text.TextWithDash" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.text.OffsetFrom" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.text._AnnotationBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.<module>" -> "matplotlib.text.Annotation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.patches.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.patches.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.cbook._define_aliases" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Patch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "15"];
    "matplotlib.patches.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Shadow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Rectangle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.RegularPolygon" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.PathPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Polygon" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Wedge" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Arrow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.FancyArrow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.CirclePolygon" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Ellipse" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Circle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.Arc" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches._Style" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.BoxStyle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches._pprint_styles" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.patches.<module>" -> "matplotlib.patches._simpleprint_styles" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.FancyBboxPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.ConnectionStyle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.ArrowStyle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.FancyArrowPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.<module>" -> "matplotlib.patches.ConnectionPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.bezier.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.bezier.<module>" -> "matplotlib.bezier.NonIntersectingPathException" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.bezier.<module>" -> "matplotlib.cbook.deprecation._rename_parameter" [color = "#b2b2b2ff", label = "10"];
    "matplotlib.bezier.<module>" -> "matplotlib.bezier.BezierSegment" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.bezier.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.bezier.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Patch" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Patch" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Shadow" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Rectangle" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.RegularPolygon" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.PathPatch" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Polygon" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Wedge" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Arrow" -> "matplotlib.path.Path.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Arrow" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.FancyArrow" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.CirclePolygon" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Ellipse" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Circle" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Arc" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.Arc" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches._Base" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches._register_style" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Square" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Circle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.LArrow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.RArrow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.DArrow" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Round" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Round4" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Sawtooth" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches.Roundtooth" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.patches.BoxStyle" -> "matplotlib.patches._pprint_styles" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches._pprint_styles" -> "matplotlib.patches.<listcomp>" [color = "#b2b2b2ff", label = "18"];
    "matplotlib.patches._pprint_styles" -> "matplotlib.patches.<genexpr>" [color = "#b2b2b2ff", label = "48"];
    "matplotlib.patches._pprint_styles" -> "textwrap.indent" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.patches.<listcomp>" -> "inspect.signature" [color = "#b1b2b2ff", label = "56"];
    "matplotlib.patches.<listcomp>" -> "inspect.Signature.__str__" [color = "#b2b2b2ff", label = "56"];
    "matplotlib.patches.<listcomp>" -> "matplotlib.patches.<genexpr>" [color = "#b0b2b2ff", label = "428"];
    "inspect._signature_is_functionlike" -> "inspect.isclass" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_is_builtin" -> "inspect.isbuiltin" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_is_builtin" -> "inspect.ismethoddescriptor" [color = "#b2b2b2ff", label = "56"];
    "inspect.ismethoddescriptor" -> "inspect.isclass" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_bound_method" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "56"];
    "inspect._signature_bound_method" -> "inspect.Parameter.kind" [color = "#b1b2b2ff", label = "112"];
    "inspect._signature_bound_method" -> "inspect.Signature.replace" [color = "#b2b2b2ff", label = "56"];
    "inspect.Signature.__str__" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "56"];
    "inspect.Signature.__str__" -> "inspect.Parameter.__str__" [color = "#b1b2b2ff", label = "128"];
    "inspect.Signature.__str__" -> "inspect.Parameter.kind" [color = "#b1b2b2ff", label = "128"];
    "inspect.Signature.__str__" -> "inspect.Signature.return_annotation" [color = "#b2b2b2ff", label = "56"];
    "inspect.Parameter.__str__" -> "inspect.Parameter.kind" [color = "#b1b2b2ff", label = "128"];
    "matplotlib.patches.FancyBboxPatch" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches._Base" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches._register_style" [color = "#b2b2b2ff", label = "10"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches.Arc3" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches.Angle3" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches.Angle" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches.Arc" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches.Bar" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionStyle" -> "matplotlib.patches._pprint_styles" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches._Base" -> "matplotlib.patches.SimpleEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches._Base" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches._Curve" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches._register_style" [color = "#b2b2b2ff", label = "28"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.Curve" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveA" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveAB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveFilledA" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveFilledB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.CurveFilledAB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches._Bracket" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.BracketAB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.BracketA" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.BracketB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.BarAB" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.Simple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.Fancy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches.Wedge" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.patches.ArrowStyle" -> "matplotlib.patches._pprint_styles" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.FancyArrowPatch" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.patches.ConnectionPatch" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.textpath.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.textpath.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.<module>" -> "matplotlib.textpath.TextToPath" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.<module>" -> "matplotlib.textpath.TextToPath.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.<module>" -> "matplotlib.textpath.TextPath" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._text_layout.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._text_layout.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.dviread.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "enum.__call__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.Dvi" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.DviFont" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.Vf" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.Tfm" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.PsfontsMap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "matplotlib.dviread.Encoding" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.dviread.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.dviread.Dvi" -> "matplotlib.dviread._dispatch" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.dviread.Dvi" -> "matplotlib.dviread.decorate" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.dviread.decorate" -> "matplotlib.dviread.<listcomp>" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.dviread.decorate" -> "functools.wraps" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.dviread.decorate" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "24"];
    "matplotlib.dviread.PsfontsMap" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dviread.PsfontsMap" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "9"];
    "matplotlib.mathtext.<module>" -> "pyparsing.enablePackrat" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackend" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendAgg" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendBitmap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendPs" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendPdf" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendSvg" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendPath" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathtextBackendCairo" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Fonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.TruetypeFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.BakomaFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.UnicodeFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.DejaVuFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.DejaVuSerifFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.DejaVuSansFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.StixFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.StixSansFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.StandardPsFonts" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.FontConstantsBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.ComputerModernFontConstants" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.STIXFontConstants" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.STIXSansFontConstants" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.DejaVuSerifFontConstants" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.DejaVuSansFontConstants" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathTextWarning" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Node" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Box" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Vbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Hbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Char" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Accent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.List" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Hlist" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Vlist" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Rule" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Hrule" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Vrule" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Glue" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.GlueSpec" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.GlueSpec.__init__" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Fil" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Fill" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Filll" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.NegFil" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.NegFill" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.NegFilll" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.SsGlue" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.HCentered" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.VCentered" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Kern" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.SubSuperCluster" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.AutoHeightChar" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.AutoWidthChar" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Ship" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.Parser" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<module>" -> "matplotlib.mathtext.MathTextParser" [color = "#b2b2b2ff", label = "1"];
    "pyparsing.enablePackrat" -> "pyparsing._FifoCache.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.MathtextBackendPs" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.MathtextBackendPdf" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.StixFonts" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.StixFonts" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.StandardPsFonts" -> "matplotlib.cbook._get_data_path" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.StandardPsFonts" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook._get_data_path" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.cbook._get_data_path" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.Parser" -> "matplotlib.mathtext.State" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.Parser" -> "matplotlib.mathtext.<lambda>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.Parser" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.Parser" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<lambda>" -> "matplotlib.mathtext.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.<listcomp>" -> "matplotlib.mathtext.<genexpr>" [color = "#7776b2ff", label = "10762"];
    "matplotlib.mathtext.MathTextParser" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.mathtext.MathTextParser" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextToPath" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextToPath" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextToPath" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.textpath.TextToPath" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextToPath" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextToPath.__init__" -> "matplotlib.mathtext.MathTextParser.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.textpath.TextPath" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.textpath.TextPath" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.text.Text" -> "matplotlib.cbook.maxdict.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.Text" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.Text" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.Text" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.text.Annotation" -> "matplotlib.cbook.deprecation._rename_parameter" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.text.Annotation" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.texmanager.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.<module>" -> "matplotlib.texmanager.TexManager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "posixpath.join" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "pathlib.PosixPath.mkdir" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "matplotlib.texmanager.<genexpr>" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.texmanager.TexManager" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.texmanager.TexManager" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.blocking_input.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.blocking_input.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.blocking_input.<module>" -> "matplotlib.blocking_input.BlockingInput" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.blocking_input.<module>" -> "matplotlib.blocking_input.BlockingMouseInput" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.blocking_input.<module>" -> "matplotlib.blocking_input.BlockingContourLabeler" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.blocking_input.<module>" -> "matplotlib.blocking_input.BlockingKeyMouseInput" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.gridspec.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "matplotlib.gridspec.GridSpecBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "matplotlib.gridspec.GridSpec" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "matplotlib.gridspec.GridSpecFromSubplotSpec" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.gridspec.<module>" -> "matplotlib.gridspec.SubplotSpec" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._pylab_helpers.<module>" -> "matplotlib._pylab_helpers.Gcf" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tight_layout.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib._layoutbox.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._layoutbox.<module>" -> "matplotlib._layoutbox.LayoutBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._constrained_layout.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.colorbar._ColorbarMappableDummy" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.colorbar._ColorbarMappableDummy" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "5"];
    "matplotlib.image.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.image.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.image.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image._ImageBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image.AxesImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image.NonUniformImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image.PcolorImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image.FigureImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.<module>" -> "matplotlib.image.BboxImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "matplotlib.backend_bases.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "distutils.version.LooseVersion.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "distutils.version.LooseVersion.__ge__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.RendererBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.GraphicsContextBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.TimerBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.Event" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.DrawEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.ResizeEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.CloseEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.LocationEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "enum.__prepare__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.MouseButton" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "enum.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.MouseEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.PickEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.KeyEvent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.FigureCanvasBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.NonGuiException" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.FigureManagerBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.NavigationToolbar2" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.ToolContainerBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.StatusbarBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases._Backend" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.<module>" -> "matplotlib.backend_bases.ShowBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "matplotlib.backend_tools.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "enum.__prepare__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.Cursors" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "enum.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolToggleBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.SetCursorBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolCursorPosition" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.RubberbandBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolQuit" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolQuitAll" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolEnableAllNavigation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolEnableNavigation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools._ToolGridBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolGrid" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolMinorGrid" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolFullScreen" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.AxisScaleBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolYScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolXScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolViewsPositions" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ViewsPositionsBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolHome" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolBack" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolForward" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ConfigureSubplotsBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.SaveFigureBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ZoomPanBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolZoom" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolPan" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolHelpBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.<module>" -> "matplotlib.backend_tools.ToolCopyToClipboardBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_tools.Cursors" -> "enum._EnumDict.__setitem__" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.backend_tools.ToolQuit" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolQuitAll" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolEnableAllNavigation" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolGrid" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolMinorGrid" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolFullScreen" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolYScale" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolXScale" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolHome" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolBack" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolForward" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.SaveFigureBase" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolZoom" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolPan" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolHelpBase" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.backend_tools.ToolCopyToClipboardBase" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.tight_bbox.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.widgets.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.LockDraw" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.Widget" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.AxesWidget" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.Button" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.Slider" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.CheckButtons" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.TextBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.RadioButtons" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.SubplotTool" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.Cursor" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.MultiCursor" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets._SelectorWidget" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.SpanSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.ToolHandles" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.RectangleSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.EllipseSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.LassoSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.PolygonSelector" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.<module>" -> "matplotlib.widgets.Lasso" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.SpanSelector" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.widgets.SpanSelector" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "PIL.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "PIL.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "PIL.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "PIL.<module>" -> "PIL._Deprecated_Version" [color = "#b2b2b2ff", label = "1"];
    "PIL.<module>" -> "PIL.UnidentifiedImageError" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.RendererBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.RendererBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.MouseButton" -> "enum._EnumDict.__setitem__" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "matplotlib.backend_bases.register_backend" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "matplotlib.cbook._classproperty.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.FigureCanvasBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases.NavigationToolbar2" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backend_bases._Backend" -> "matplotlib.cbook.deprecation._make_keyword_only" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "inspect.signature" [color = "#b1b2b2ff", label = "8"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "32"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "inspect.Parameter.kind" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "matplotlib.cbook.deprecation.<listcomp>" [color = "#b2b2b2ff", label = "16"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "inspect.Signature.replace" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "functools.wraps" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.cbook.deprecation._make_keyword_only" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.image._ImageBase" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.BboxImage" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.image.BboxImage" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.image.BboxImage" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.style.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.style.core.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.style.core.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.<module>" -> "matplotlib.wrapper" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.style.core.<module>" -> "posixpath.join" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.style.core.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.style.core.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.style.core.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.style.core.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.<module>" -> "matplotlib.style.core.load_base_library" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.style.core.<module>" -> "matplotlib.style.core.reload_library" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.load_base_library" -> "matplotlib.style.core.read_style_directory" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.style.core.read_style_directory" -> "pathlib.__new__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.read_style_directory" -> "pathlib.PosixPath.glob" [color = "#b2b2b2ff", label = "27"];
    "matplotlib.style.core.read_style_directory" -> "warnings.catch_warnings.__init__" [color = "#b2b2b2ff", label = "26"];
    "matplotlib.style.core.read_style_directory" -> "warnings.catch_warnings.__enter__" [color = "#b2b2b2ff", label = "26"];
    "matplotlib.style.core.read_style_directory" -> "matplotlib.rc_params_from_file" [color = "#b1b2b2ff", label = "26"];
    "matplotlib.style.core.read_style_directory" -> "pathlib.PosixPath.stem" [color = "#b2b2b2ff", label = "26"];
    "matplotlib.style.core.read_style_directory" -> "warnings.catch_warnings.__exit__" [color = "#b2b2b2ff", label = "26"];
    "pathlib.PosixPath.glob" -> "pathlib._PosixFlavour.casefold" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.glob" -> "pathlib._PosixFlavour.parse_parts" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.glob" -> "pathlib._make_selector" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.glob" -> "pathlib._WildcardSelector.select_from" [color = "#b2b2b2ff", label = "1"];
    "pathlib.PosixPath.glob" -> "pathlib._WildcardSelector._select_from" [color = "#b2b2b2ff", label = "27"];
    "pathlib._make_selector" -> "pathlib._is_wildcard_pattern" [color = "#b2b2b2ff", label = "1"];
    "pathlib._make_selector" -> "pathlib._WildcardSelector.__init__" [color = "#b2b2b2ff", label = "1"];
    "pathlib._WildcardSelector.__init__" -> "fnmatch.translate" [color = "#b2b2b2ff", label = "1"];
    "pathlib._WildcardSelector.__init__" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "pathlib._WildcardSelector.__init__" -> "pathlib._WildcardSelector.__init__" [color = "#b2b2b2ff", label = "1"];
    "fnmatch.translate" -> "re.escape" [color = "#b2b2b2ff", label = "9"];
    "pathlib._WildcardSelector.select_from" -> "pathlib.PosixPath.is_dir" [color = "#b2b2b2ff", label = "1"];
    "pathlib._WildcardSelector._select_from" -> "pathlib.wrapped" [color = "#b2b2b2ff", label = "1"];
    "pathlib._WildcardSelector._select_from" -> "pathlib._PosixFlavour.casefold" [color = "#b2b2b2ff", label = "26"];
    "pathlib._WildcardSelector._select_from" -> "pathlib.PosixPath._make_child_relpath" [color = "#b2b2b2ff", label = "26"];
    "pathlib._WildcardSelector._select_from" -> "pathlib._TerminatingSelector._select_from" [color = "#b2b2b2ff", label = "52"];
    "pathlib.PosixPath._make_child_relpath" -> "pathlib._from_parsed_parts" [color = "#b2b2b2ff", label = "26"];
    "posixpath.expanduser" -> "pathlib.PosixPath.__fspath__" [color = "#b2b2b2ff", label = "26"];
    "pathlib.PosixPath.__fspath__" -> "pathlib.PosixPath.__str__" [color = "#b2b2b2ff", label = "26"];
    "matplotlib.rcsetup.cycler" -> "matplotlib.rcsetup.f" [color = "#b2b2b2ff", label = "15"];
    "matplotlib.rcsetup.cycler" -> "matplotlib.rcsetup.<genexpr>" [color = "#b2b2b2ff", label = "30"];
    "matplotlib.rcsetup.<genexpr>" -> "cycler.cycler" [color = "#b2b2b2ff", label = "15"];
    "pathlib.PosixPath.stem" -> "pathlib.PosixPath.name" [color = "#b2b2b2ff", label = "26"];
    "pyparsing.resetCache" -> "pyparsing._FifoCache.clear" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.And._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.And._parseCache" -> "pyparsing.And._parseNoCache" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.And._parseCache" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "14"];
    "pyparsing.And._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "24"];
    "pyparsing.And._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "10"];
    "pyparsing._FifoCache.get" -> "pyparsing.And.__hash__" [color = "#b2b2b2ff", label = "24"];
    "pyparsing._FifoCache.get" -> "pyparsing.Optional.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.get" -> "pyparsing.Regex.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.get" -> "pyparsing.ZeroOrMore.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.get" -> "pyparsing._SingleCharLiteral.__hash__" [color = "#b2b2b2ff", label = "16"];
    "pyparsing._FifoCache.get" -> "pyparsing.StringEnd.__hash__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing._FifoCache.get" -> "pyparsing.MatchFirst.__hash__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._FifoCache.get" -> "pyparsing.Suppress.__hash__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Optional._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Optional._parseCache" -> "pyparsing.Optional._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Optional._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Optional._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Regex._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Regex._parseCache" -> "pyparsing.Regex._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Regex._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.Regex._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.ParseResults.copy" -> "pyparsing.__new__" [color = "#b2b2b2ff", label = "42"];
    "pyparsing.ParseResults.copy" -> "pyparsing.ParseResults.__init__" [color = "#b2b2b2ff", label = "42"];
    "pyparsing._FifoCache.set" -> "pyparsing.Regex.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.set" -> "pyparsing._SingleCharLiteral.__hash__" [color = "#b2b2b2ff", label = "16"];
    "pyparsing._FifoCache.set" -> "pyparsing.And.__hash__" [color = "#b2b2b2ff", label = "24"];
    "pyparsing._FifoCache.set" -> "pyparsing.ZeroOrMore.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.set" -> "pyparsing.Optional.__hash__" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._FifoCache.set" -> "pyparsing.StringEnd.__hash__" [color = "#b2b2b2ff", label = "4"];
    "pyparsing._FifoCache.set" -> "pyparsing.Suppress.__hash__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing._FifoCache.set" -> "pyparsing.MatchFirst.__hash__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.ZeroOrMore._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.ZeroOrMore._parseCache" -> "pyparsing.ZeroOrMore._parseNoCache" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.ZeroOrMore._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "8"];
    "pyparsing.ZeroOrMore._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "8"];
    "pyparsing._SingleCharLiteral._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "16"];
    "pyparsing._SingleCharLiteral._parseCache" -> "pyparsing._SingleCharLiteral._parseNoCache" [color = "#b2b2b2ff", label = "16"];
    "pyparsing._SingleCharLiteral._parseCache" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "14"];
    "pyparsing._SingleCharLiteral._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "16"];
    "pyparsing._SingleCharLiteral._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.StringEnd._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.StringEnd._parseCache" -> "pyparsing.StringEnd._parseNoCache" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.StringEnd._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.StringEnd._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "4"];
    "pyparsing.MatchFirst._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst._parseCache" -> "pyparsing.MatchFirst._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst._parseCache" -> "pyparsing.ParseResults.copy" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.MatchFirst._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Suppress._parseCache" -> "pyparsing._FifoCache.get" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Suppress._parseCache" -> "pyparsing.Suppress._parseNoCache" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Suppress._parseCache" -> "pyparsing.ParseException.__init__" [color = "#b2b2b2ff", label = "2"];
    "pyparsing.Suppress._parseCache" -> "pyparsing._FifoCache.set" [color = "#b2b2b2ff", label = "2"];
    "re.filter" -> "sre_parse.expand_template" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.reload_library" -> "matplotlib.style.core.update_user_library" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.update_user_library" -> "matplotlib.style.core.iter_user_libraries" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.iter_user_libraries" -> "posixpath.expanduser" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.style.core.iter_user_libraries" -> "genericpath.exists" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "matplotlib.figure.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.figure._AxesStack" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.figure.AxesStack" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.figure.SubplotParams" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.figure.Figure" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.figure.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.backends.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.projections.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.projections.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "matplotlib.projections.<module>" -> "matplotlib.projections.ProjectionRegistry" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.projections.ProjectionRegistry.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.projections.ProjectionRegistry.register" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.projections.ProjectionRegistry.get_projection_names" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.axes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.axes._subplots.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.axes._subplots.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.axes._subplots.<module>" -> "matplotlib.axes._subplots.SubplotBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._subplots.<module>" -> "functools.lru_cache" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._subplots.<module>" -> "functools.decorating_function" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._subplots.<module>" -> "matplotlib.axes._subplots.subplot_class_factory" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._subplots.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "2"];
    "matplotlib.axes._subplots.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axes._subplots.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "uuid.<module>" -> "uuid.UUID" [color = "#b2b2b2ff", label = "1"];
    "uuid.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "uuid.<module>" -> "ctypes.util.find_library" [color = "#b2b2b2ff", label = "1"];
    "uuid.<module>" -> "ctypes.CDLL.__init__" [color = "#b2b2b2ff", label = "1"];
    "uuid.<module>" -> "ctypes.CDLL.__getattr__" [color = "#b2b2b2ff", label = "1"];
    "uuid.<module>" -> "uuid.UUID.__init__" [color = "#b2b2b2ff", label = "4"];
    "ctypes.util.find_library" -> "ctypes.util._findSoname_ldconfig" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util.find_library" -> "subprocess.Popen.__del__" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "re.escape" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "os.fsencode" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "subprocess.Popen.__init__" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "subprocess.Popen.__enter__" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "re.search" [color = "#b1b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "os.fsdecode" [color = "#b2b2b2ff", label = "1"];
    "ctypes.util._findSoname_ldconfig" -> "subprocess.Popen.__exit__" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.__init__" -> "subprocess._cleanup" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.__init__" -> "subprocess.Popen._get_handles" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.__init__" -> "subprocess.Popen._execute_child" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen._get_handles" -> "subprocess.Popen._get_devnull" [color = "#b2b2b2ff", label = "2"];
    "subprocess.Popen._execute_child" -> "os.fsencode" [color = "#b2b2b2ff", label = "5"];
    "subprocess.Popen._execute_child" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.__exit__" -> "subprocess.Popen.wait" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.wait" -> "subprocess.Popen._try_wait" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.wait" -> "subprocess.Popen._handle_exitstatus" [color = "#b2b2b2ff", label = "1"];
    "subprocess.Popen.__del__" -> "subprocess.Popen._internal_poll" [color = "#b2b2b2ff", label = "1"];
    "ctypes.CDLL.__init__" -> "ctypes._FuncPtr" [color = "#b2b2b2ff", label = "1"];
    "ctypes.CDLL.__getattr__" -> "ctypes.CDLL.__getitem__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._axes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.axes._axes.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "11"];
    "matplotlib.axes._axes.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._axes.<module>" -> "matplotlib.axes._axes.Axes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.category.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.category.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.category.<module>" -> "matplotlib.category.StrCategoryConverter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.category.<module>" -> "matplotlib.category.StrCategoryLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.category.<module>" -> "matplotlib.category.StrCategoryFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.category.<module>" -> "matplotlib.category.UnitData" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.units.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.units.<module>" -> "matplotlib.units.ConversionError" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.units.<module>" -> "matplotlib.units.AxisInfo" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.units.<module>" -> "matplotlib.units.ConversionInterface" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.units.<module>" -> "matplotlib.units.DecimalConverter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.units.<module>" -> "matplotlib.units.Registry" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.dates.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "numpy.lib.function_base.vectorize.__init__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.dates.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.strpdate2num" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "7"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.bytespdate2num" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.DateFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.IndexDateFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.ConciseDateFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.AutoDateFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.rrulewrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.DateLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.RRuleLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.AutoDateLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.YearLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.MonthLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.WeekdayLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.DayLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.HourLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.MinuteLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.SecondLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.MicrosecondLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.DateConverter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.<module>" -> "matplotlib.dates.ConciseDateConverter" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "dateutil.rrule.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule.weekday" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule.<genexpr>" [color = "#b2b2b2ff", label = "8"];
    "dateutil.rrule.<module>" -> "dateutil.rrule.rrulebase" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule.rrule" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule._iterinfo" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule.rruleset" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<module>" -> "dateutil.rrule._rrulestr" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.<genexpr>" -> "dateutil.rrule.weekday.__init__" [color = "#b2b2b2ff", label = "7"];
    "dateutil.rrule.weekday.__init__" -> "dateutil._common.weekday.__init__" [color = "#b2b2b2ff", label = "7"];
    "dateutil.rrule.rruleset" -> "dateutil.rrule._genitem" [color = "#b2b2b2ff", label = "1"];
    "dateutil.rrule.rruleset" -> "dateutil.rrule._invalidates_cache" [color = "#b2b2b2ff", label = "4"];
    "numpy.lib.function_base.vectorize.__init__" -> "numpy.lib.function_base.iterable" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.dates.DateFormatter" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.dates.RRuleLocator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.RRuleLocator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.AutoDateLocator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.AutoDateLocator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.YearLocator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.dates.YearLocator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "matplotlib.legend.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.legend.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.<module>" -> "matplotlib.legend.DraggableLegend" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.<module>" -> "matplotlib.legend.Legend" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.OffsetBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.PackerBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.VPacker" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.HPacker" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.PaddedBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.DrawingArea" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.TextArea" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.AuxTransformBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.AnchoredOffsetbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.AnchoredText" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.OffsetImage" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.AnnotationBbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.DraggableBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.DraggableOffsetBox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.<module>" -> "matplotlib.offsetbox.DraggableAnnotation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.offsetbox.AnnotationBbox" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.container.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.container.<module>" -> "matplotlib.container.Container" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.container.<module>" -> "matplotlib.container.BarContainer" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.container.<module>" -> "matplotlib.container.ErrorbarContainer" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.container.<module>" -> "matplotlib.container.StemContainer" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerNpoints" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerNpointsYoffsets" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerLine2D" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerPatch" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerLineCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerRegularPolyCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerPathCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerCircleCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerErrorbar" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerStem" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerTuple" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.<module>" -> "matplotlib.legend_handler.HandlerPolyCollection" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerStem.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerErrorbar.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerLine2D.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerPatch.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerLineCollection.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerCircleCollection.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerTuple.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerPathCollection.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend.Legend" -> "matplotlib.legend_handler.HandlerPolyCollection.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.HandlerStem.__init__" -> "matplotlib.legend_handler.HandlerStem.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.legend_handler.HandlerErrorbar.__init__" -> "matplotlib.legend_handler.HandlerErrorbar.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.legend_handler.HandlerLine2D.__init__" -> "matplotlib.legend_handler.HandlerLine2D.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.legend_handler.HandlerPatch.__init__" -> "matplotlib.legend_handler.HandlerPatch.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.legend_handler.HandlerLineCollection.__init__" -> "matplotlib.legend_handler.HandlerLineCollection.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__" -> "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.legend_handler.HandlerCircleCollection.__init__" -> "matplotlib.legend_handler.HandlerCircleCollection.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.legend_handler.HandlerTuple.__init__" -> "matplotlib.legend_handler.HandlerTuple.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.legend_handler.HandlerPathCollection.__init__" -> "matplotlib.legend_handler.HandlerPathCollection.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.mlab.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.mlab.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.mlab.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.mlab.<module>" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "3"];
    "matplotlib.mlab.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.mlab.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.mlab.<module>" -> "matplotlib.mlab.GaussianKDE" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.quiver.<module>" -> "matplotlib.quiver.QuiverKey" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.<module>" -> "matplotlib.quiver.Quiver" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.<module>" -> "matplotlib.quiver.Barbs" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.QuiverKey" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.QuiverKey" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.QuiverKey" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.Quiver" -> "matplotlib.docstring.Substitution.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.Quiver" -> "matplotlib.docstring.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.Quiver" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.quiver.Quiver" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.quiver.Quiver" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.quiver.Barbs" -> "matplotlib.docstring.Substitution.__call__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.StreamplotSet" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.DomainMap" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.Grid" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.StreamMask" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.InvalidIndexError" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.TerminateTrajectory" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.streamplot.<module>" -> "matplotlib.streamplot.OutOfBounds" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.table.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.table.<module>" -> "matplotlib.table.Cell" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "matplotlib.table.CustomCell" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "matplotlib.table.Table" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "matplotlib.artist.kwdoc" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.<module>" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.Cell" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.Cell" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.table.Table" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.tri.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "8"];
    "matplotlib.tri.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "8"];
    "matplotlib.tri.triangulation.<module>" -> "matplotlib.tri.triangulation.Triangulation" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.tricontour.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.tri.tricontour.<module>" -> "matplotlib.tri.tricontour.TriContourSet" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.tritools.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.tri.tritools.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.tritools.<module>" -> "matplotlib.tri.tritools.TriAnalyzer" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.trifinder.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.tri.trifinder.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.trifinder.<module>" -> "matplotlib.tri.trifinder.TriFinder" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.trifinder.<module>" -> "matplotlib.tri.trifinder.TrapezoidMapTriFinder" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.tri.triinterpolate.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate.TriInterpolator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate.LinearTriInterpolator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate.CubicTriInterpolator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._ReducedHCT_Element" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._DOF_estimator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._DOF_estimator_user" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._DOF_estimator_geom" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._DOF_estimator_min_E" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate.<module>" -> "matplotlib.tri.triinterpolate._Sparse_Matrix_coo" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.triinterpolate._ReducedHCT_Element" -> "numpy.core.numeric.ones" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.trirefine.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.tri.trirefine.<module>" -> "matplotlib.tri.trirefine.TriRefiner" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.trirefine.<module>" -> "matplotlib.tri.trirefine.UniformTriRefiner" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.tri.tripcolor.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.tri.triplot.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.axes._base.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "matplotlib.axes._base.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.axes._base.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base.<module>" -> "matplotlib.axes._base._process_plot_var_args" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base.<module>" -> "matplotlib.axes._base._AxesBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.axis.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.artist.ArtistInspector.__init__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.artist.ArtistInspector.get_setters" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.<listcomp>" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.Tick" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.XTick" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.YTick" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.Ticker" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis._LazyTickList" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.Axis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.XAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.<module>" -> "matplotlib.axis.YAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.ScaleBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LinearScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.FuncTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "15"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.FuncScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogTransformBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "9"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedLogTransformBase" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.Log10Transform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedLog10Transform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.Log2Transform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedLog2Transform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.NaturalLogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedNaturalLogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedLogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.FuncScaleLog" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.SymmetricalLogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.InvertedSymmetricalLogTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.SymmetricalLogScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogitTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogisticTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.LogitScale" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.get_scale_names" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.scale.<module>" -> "matplotlib.scale.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.scale._get_scale_docs" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.scale._get_scale_docs" -> "inspect.getdoc" [color = "#b1b2b2ff", label = "6"];
    "matplotlib.scale._get_scale_docs" -> "textwrap.indent" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.artist.ArtistInspector.get_setters" -> "matplotlib.artist.ArtistInspector._get_setters_and_targets" [color = "#b1b2b2ff", label = "1"];
    "matplotlib.artist.ArtistInspector.get_setters" -> "matplotlib.artist.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.Tick" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "11"];
    "matplotlib.axis.Tick" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "11"];
    "matplotlib.axis.Tick" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.Axis" -> "matplotlib.axis._LazyTickList.__init__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axis.Axis" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.axis.Axis" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.axis.Axis" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axis.Axis" -> "matplotlib.cbook.deprecation._make_keyword_only" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axis.XAxis" -> "matplotlib.axis._make_getset_interval" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axis.YAxis" -> "matplotlib.axis._make_getset_interval" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.spines.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.spines.<module>" -> "matplotlib.spines.Spine" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.spines.Spine" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.spines.Spine" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.spines.Spine" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.spines.Spine" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.cbook.Grouper.__init__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._base._AxesBase" -> "matplotlib.cbook.deprecation._make_keyword_only" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.cbook.Grouper.__init__" -> "matplotlib.cbook.<dictcomp>" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.axes._secondary_axes.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.axes._secondary_axes.<module>" -> "matplotlib.axes._secondary_axes.SecondaryAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._secondary_axes.<module>" -> "matplotlib.docstring.Substitution.update" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._secondary_axes.SecondaryAxis" -> "matplotlib.cbook.deprecation._make_keyword_only" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "33"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.axes._axes.Axes" -> "matplotlib._preprocess_data" [color = "#b1b2b2ff", label = "72"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.cbook.deprecation._rename_parameter" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.docstring.copy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.axes._axes.Axes" -> "matplotlib.docstring.do_copy" [color = "#b2b2b2ff", label = "1"];
    "matplotlib._preprocess_data" -> "inspect.signature" [color = "#b1b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "inspect.Signature.parameters" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "inspect.Parameter.kind" [color = "#aeb2b2ff", label = "747"];
    "matplotlib._preprocess_data" -> "inspect.Parameter.name" [color = "#b0b2b2ff", label = "378"];
    "matplotlib._preprocess_data" -> "inspect.Parameter.__init__" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "inspect.Signature.replace" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "functools.wraps" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._preprocess_data" -> "matplotlib._add_data_doc" [color = "#b2b2b2ff", label = "36"];
    "matplotlib._add_data_doc" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "33"];
    "matplotlib.axes._subplots.SubplotBase" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axes._subplots.SubplotBase" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.axes._subplots.subplot_class_factory" -> "matplotlib.axes._subplots.<genexpr>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo.GeoAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo._GeoTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo.AitoffAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo.HammerAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo.MollweideAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.<module>" -> "matplotlib.projections.geo.LambertAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.GeoAxes" -> "matplotlib.projections.geo.ThetaFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.AitoffAxes" -> "matplotlib.projections.geo.AitoffTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.AitoffAxes" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.projections.geo.AitoffAxes" -> "matplotlib.projections.geo.InvertedAitoffTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.HammerAxes" -> "matplotlib.projections.geo.HammerTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.HammerAxes" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.projections.geo.HammerAxes" -> "matplotlib.projections.geo.InvertedHammerTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.MollweideAxes" -> "matplotlib.projections.geo.MollweideTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.MollweideAxes" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.projections.geo.MollweideAxes" -> "matplotlib.projections.geo.InvertedMollweideTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.LambertAxes" -> "matplotlib.projections.geo.LambertTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.geo.LambertAxes" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.projections.geo.LambertAxes" -> "matplotlib.projections.geo.InvertedLambertTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.PolarTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.transforms.__init_subclass__" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.PolarAffine" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.InvertedPolarTransform" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.ThetaFormatter" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar._AxisWrapper" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.ThetaLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.ThetaTick" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.ThetaAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.RadialLocator" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar._ThetaShift" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.RadialTick" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.RadialAxis" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar._WedgeBbox" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.<module>" -> "matplotlib.projections.polar.PolarAxes" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.ThetaLocator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.ThetaLocator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.RadialLocator" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.projections.polar.RadialLocator" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "_NamespacePath.__iter__" -> "_NamespacePath._recalculate" [color = "#b2b2b2ff", label = "1"];
    "_NamespacePath._recalculate" -> "_NamespacePath._get_parent_path" [color = "#b2b2b2ff", label = "1"];
    "_NamespacePath._recalculate" -> "_get_spec" [color = "#b1b2b2ff", label = "1"];
    "_NamespacePath._get_parent_path" -> "_NamespacePath._find_parent_path_names" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "mpl_toolkits.mplot3d.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "10"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "3"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.<module>" -> "mpl_toolkits.mplot3d.axes3d.Axes3D" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "9"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "9"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Text3D" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Line3D" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Line3DCollection" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Patch3D" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.PathPatch3D" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Patch3DCollection" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Path3DCollection" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.<module>" -> "mpl_toolkits.mplot3d.art3d.Poly3DCollection" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.proj3d.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "mpl_toolkits.mplot3d.proj3d.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "8"];
    "mpl_toolkits.mplot3d.proj3d.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "8"];
    "mpl_toolkits.mplot3d.art3d.Text3D" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.Line3D" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.art3d.Line3DCollection" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "mpl_toolkits.mplot3d.axis3d.Axis" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "mpl_toolkits.mplot3d.axis3d.XAxis" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "mpl_toolkits.mplot3d.axis3d.YAxis" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.<module>" -> "mpl_toolkits.mplot3d.axis3d.ZAxis" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.Axis" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.Axis" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.Axis" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axis3d.XAxis" -> "matplotlib.axis._make_getset_interval" [color = "#b2b2b2ff", label = "2"];
    "mpl_toolkits.mplot3d.axis3d.YAxis" -> "matplotlib.axis._make_getset_interval" [color = "#b2b2b2ff", label = "2"];
    "mpl_toolkits.mplot3d.axis3d.ZAxis" -> "matplotlib.axis._make_getset_interval" [color = "#b2b2b2ff", label = "2"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.cbook.Grouper.__init__" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.cbook.deprecation.deprecated" [color = "#b2b2b2ff", label = "3"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.cbook.deprecation.deprecate" [color = "#b2b2b2ff", label = "3"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "mpl_toolkits.mplot3d.axes3d.Axes3D" -> "matplotlib.cbook.deprecation._make_keyword_only" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.figure.Figure" -> "matplotlib.docstring.dedent_interpd" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.figure.Figure" -> "matplotlib.artist.allow_rasterization" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.figure.Figure" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.RcParams.__getitem__" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.RcParams.__getitem__" -> "matplotlib.pyplot.switch_backend" [color = "#b1b2b2ff", label = "2"];
    "matplotlib.pyplot.switch_backend" -> "matplotlib.pyplot.close" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.pyplot.switch_backend" -> "matplotlib.pyplot.switch_backend" [color = "#b1b2b2ff", label = "9"];
    "matplotlib.pyplot.switch_backend" -> "importlib.import_module" [color = "#b1b2b2ff", label = "10"];
    "matplotlib.pyplot.switch_backend" -> "logging.Logger.debug" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.pyplot.switch_backend" -> "matplotlib.RcParams.__setitem__" [color = "#b1b2b2ff", label = "8"];
    "matplotlib.pyplot.close" -> "matplotlib._pylab_helpers.destroy_all" [color = "#b2b2b2ff", label = "12"];
    "matplotlib.backends.backend_macosx.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.backends.backend_qt5agg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.backends.backend_qt5agg.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.backends.backend_qt5agg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "3"];
    "matplotlib.backends.backend_agg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "14"];
    "matplotlib.backends.backend_agg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.backends.backend_agg.<module>" -> "matplotlib.backends.backend_agg.RendererAgg" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_agg.<module>" -> "matplotlib.backends.backend_agg.FigureCanvasAgg" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_agg.<module>" -> "matplotlib.backends.backend_agg._BackendAgg" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_agg.<module>" -> "matplotlib.backend_bases.export" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "PIL.Image.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "7"];
    "PIL.Image.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "5"];
    "PIL.Image.<module>" -> "logging.getLogger" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.DecompressionBombWarning" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.DecompressionBombError" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image._E" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.Image" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.ImagePointHandler" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.ImageTransformHandler" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image._apply_env_variables" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "PIL.Image.Exif" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.ParseError" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.Element" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.QName" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.ElementTree" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree._ListDataStream" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.XMLPullParser" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.TreeBuilder" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "xml.etree.ElementTree.XMLParser" [color = "#b2b2b2ff", label = "1"];
    "xml.etree.ElementTree.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "xml.etree.ElementPath.<module>" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "xml.etree.ElementPath.<module>" -> "xml.etree.ElementPath._SelectorContext" [color = "#b2b2b2ff", label = "1"];
    "PIL.ImageMode.<module>" -> "PIL.ImageMode.ModeDescriptor" [color = "#b2b2b2ff", label = "1"];
    "PIL.TiffTags.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "PIL.TiffTags.<module>" -> "collections.namedtuple" [color = "#b2b2b2ff", label = "1"];
    "PIL.TiffTags.<module>" -> "PIL.TiffTags.TagInfo" [color = "#b2b2b2ff", label = "1"];
    "PIL.TiffTags.<module>" -> "PIL.TiffTags._populate" [color = "#b2b2b2ff", label = "1"];
    "PIL.TiffTags._populate" -> "PIL.TiffTags.__new__" [color = "#b1b2b2ff", label = "104"];
    "PIL.TiffTags.__new__" -> "__new__" [color = "#b1b2b2ff", label = "104"];
    "PIL._binary.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "PIL._util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "PIL._util.<module>" -> "PIL._util.deferred_error" [color = "#b2b2b2ff", label = "1"];
    "PIL.Image._apply_env_variables" -> "collections.abc._Environ.__contains__" [color = "#b2b2b2ff", label = "3"];
    "matplotlib.backends.backend_agg.RendererAgg" -> "threading.RLock" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_agg.FigureCanvasAgg" -> "matplotlib.cbook.deprecation._delete_parameter" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.backend_bases.export" -> "matplotlib.backend_bases.Show" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_qt5.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "6"];
    "matplotlib.backends.backend_qt5.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.backends.qt_editor.figureoptions.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.backends.qt_editor.figureoptions.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.backends.qt_compat.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "matplotlib.backends.qt_compat.<module>" -> "collections.abc._Environ.get" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.backends.qt_compat.<module>" -> "matplotlib.RcParams.__getitem__" [color = "#b1b2b2ff", label = "4"];
    "matplotlib.backends.qt_compat.<module>" -> "matplotlib.backends.qt_compat._setup_pyqt5" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.backends.qt_compat.<module>" -> "matplotlib.backends.qt_compat._setup_pyqt4" [color = "#b2b2b2ff", label = "6"];
    "matplotlib.rcsetup.validate_backend" -> "matplotlib.rcsetup.ValidateInStrings.__call__" [color = "#b2b2b2ff", label = "8"];
    "matplotlib.backends.qt_compat._setup_pyqt5" -> "_find_and_load" [color = "#7b66b2ff", label = "4"];
    "matplotlib.backends.qt_compat._setup_pyqt4" -> "matplotlib.backends.qt_compat._setup_pyqt4_internal" [color = "#b2b2b2ff", label = "4"];
    "matplotlib.backends.qt_compat._setup_pyqt4" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.backends.qt_compat._setup_pyqt4_internal" -> "_find_and_load" [color = "#7b66b2ff", label = "8"];
    "matplotlib.backends.backend_qt4agg.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_qt4agg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.backends.backend_gtk3agg.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "matplotlib.backends.backend_gtk3agg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "matplotlib.backends.backend_cairo.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "2"];
    "matplotlib.backends.backend_tkagg.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.backends.backend_tkagg.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.backends._backend_tk.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "matplotlib.backends._backend_tk.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.backends.backend_wxagg.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "matplotlib.pyplot.install_repl_displayhook" -> "matplotlib.pyplot._NotIPython" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot._setup_pyplot_info_docstrings" -> "matplotlib.pyplot.get_plot_commands" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot._setup_pyplot_info_docstrings" -> "re.compile" [color = "#b0b2b2ff", label = "1"];
    "matplotlib.pyplot._setup_pyplot_info_docstrings" -> "inspect.cleandoc" [color = "#b1b2b2ff", label = "129"];
    "matplotlib.pyplot._setup_pyplot_info_docstrings" -> "matplotlib.pyplot.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.get_plot_commands" -> "matplotlib.pyplot.colormaps" [color = "#b2b2b2ff", label = "1"];
    "matplotlib.pyplot.get_plot_commands" -> "matplotlib.pyplot.<genexpr>" [color = "#b1b2b2ff", label = "130"];
    "inspect.getmodule" -> "inspect.ismodule" [color = "#b1b2b2ff", label = "143"];
    "matplotlib.pyplot.<genexpr>" -> "inspect.isfunction" [color = "#b1b2b2ff", label = "204"];
    "pandas.io.parsers.parser_f" -> "pandas.io.parsers._read" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.common.infer_compression" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.common.get_filepath_or_buffer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.parsers._validate_integer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.parsers._validate_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.parsers.TextFileReader.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.parsers.TextFileReader.read" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._read" -> "pandas.io.parsers.TextFileReader.close" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.infer_compression" -> "pandas.io.common.stringify_path" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.stringify_path" -> "pandas.io.common._expand_user" [color = "#b2b2b2ff", label = "2"];
    "pandas.io.common._expand_user" -> "posixpath.expanduser" [color = "#b2b2b2ff", label = "3"];
    "pandas.io.common.get_filepath_or_buffer" -> "pandas.io.common.stringify_path" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.get_filepath_or_buffer" -> "pandas.io.common.is_url" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.get_filepath_or_buffer" -> "pandas.io.common.is_s3_url" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.get_filepath_or_buffer" -> "pandas.io.common.is_gcs_url" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.get_filepath_or_buffer" -> "pandas.io.common._expand_user" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.is_url" -> "urllib.parse.urlparse" [color = "#b2b2b2ff", label = "1"];
    "urllib.parse.urlparse" -> "urllib.parse._coerce_args" [color = "#b2b2b2ff", label = "3"];
    "urllib.parse.urlparse" -> "urllib.parse.urlsplit" [color = "#b2b2b2ff", label = "3"];
    "urllib.parse.urlparse" -> "__new__" [color = "#b2b2b2ff", label = "3"];
    "urllib.parse.urlparse" -> "urllib.parse._noop" [color = "#b2b2b2ff", label = "3"];
    "urllib.parse.urlsplit" -> "urllib.parse._coerce_args" [color = "#b2b2b2ff", label = "3"];
    "urllib.parse.urlsplit" -> "urllib.parse._checknetloc" [color = "#b2b2b2ff", label = "1"];
    "urllib.parse.urlsplit" -> "__new__" [color = "#b2b2b2ff", label = "1"];
    "urllib.parse.urlsplit" -> "urllib.parse._noop" [color = "#b2b2b2ff", label = "3"];
    "pandas.io.common.is_s3_url" -> "urllib.parse.urlparse" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.common.is_gcs_url" -> "urllib.parse.urlparse" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.__init__" -> "pandas.io.parsers.TextFileReader._get_options_with_defaults" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.__init__" -> "pandas.io.parsers.TextFileReader._check_file_or_buffer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.__init__" -> "pandas.io.parsers.TextFileReader._clean_options" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.__init__" -> "pandas.io.parsers.TextFileReader._make_engine" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader._check_file_or_buffer" -> "pandas.core.dtypes.inference.is_file_like" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader._clean_options" -> "pandas.io.common.validate_header_arg" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader._clean_options" -> "pandas.io.parsers._is_index_col" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader._clean_options" -> "pandas.io.parsers._clean_na_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader._make_engine" -> "pandas.io.parsers.CParserWrapper.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers.CParserWrapper.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers._validate_parse_dates_arg" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers._make_date_converter" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers._validate_usecols_arg" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers.CParserWrapper._set_noconvert_columns" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers.CParserWrapper._has_complex_date_col" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.__init__" -> "pandas.io.parsers._is_index_col" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.read" -> "pandas.io.parsers._validate_integer" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.read" -> "pandas.io.parsers.CParserWrapper.read" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.read" -> "pandas.io.parsers.TextFileReader._create_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.read" -> "pandas.core.indexes.range.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.TextFileReader.read" -> "pandas.core.frame.DataFrame.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_categorical_dtype" [color = "#b2b2b2ff", label = "33"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "29"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_integer_dtype" [color = "#b2b2b2ff", label = "21"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_float_dtype" [color = "#b2b2b2ff", label = "15"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.io.parsers.CParserWrapper.read" -> "concatenate" [color = "#b2b2b2ff", label = "6"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.CParserWrapper._maybe_dedup_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.CParserWrapper._do_date_conversions" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.CParserWrapper._make_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper.read" -> "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_categorical_dtype" -> "pandas.core.dtypes.base.is_dtype" [color = "#b2b2b2ff", label = "75"];
    "pandas.core.dtypes.base.is_dtype" -> "pandas.core.dtypes.generic._check" [color = "#aeb2b2ff", label = "663"];
    "pandas.core.dtypes.base.is_dtype" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_extension_array_dtype" -> "pandas.core.dtypes.dtypes.Registry.find" [color = "#b1b2b2ff", label = "239"];
    "pandas.core.dtypes.common.is_extension_array_dtype" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_extension_array_dtype" -> "pandas.core.indexes.base.Index.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_extension_array_dtype" -> "pandas.core.indexes.base.Int64Index.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_integer_dtype" -> "pandas.core.dtypes.common.classes_and_not_datetimelike" [color = "#b2b2b2ff", label = "41"];
    "pandas.core.dtypes.common.is_integer_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "41"];
    "pandas.core.dtypes.common._is_dtype_type" -> "pandas.core.dtypes.common.<lambda>" [color = "#b1b2b2ff", label = "242"];
    "pandas.core.dtypes.common._is_dtype_type" -> "pandas.core.dtypes.common.pandas_dtype" [color = "#b2b2b2ff", label = "48"];
    "pandas.core.dtypes.common._is_dtype_type" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.dtypes.common._is_dtype_type" -> "pandas.core.indexes.base.Index.dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.dtypes.common._is_dtype_type" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.common._is_dtype_type" -> "pandas.core.indexes.base.Int64Index.dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.dtypes.common.is_float_dtype" -> "pandas.core.dtypes.common.classes" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.dtypes.common.is_float_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.dtypes.common.is_bool_dtype" -> "pandas.core.dtypes.common._get_dtype" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.dtypes.common.is_bool_dtype" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.dtypes.common.is_bool_dtype" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "34"];
    "pandas.core.dtypes.common.is_object_dtype" -> "pandas.core.dtypes.common.classes" [color = "#b2b2b2ff", label = "79"];
    "pandas.core.dtypes.common.is_object_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "79"];
    "pandas.io.parsers.CParserWrapper._maybe_dedup_names" -> "pandas.io.parsers._is_potential_multi_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers._is_potential_multi_index" -> "pandas.io.parsers.<genexpr>" [color = "#b2b2b2ff", label = "6"];
    "pandas.io.parsers.CParserWrapper._do_date_conversions" -> "pandas.io.parsers._process_date_conversion" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper._make_index" -> "pandas.io.parsers._is_index_col" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper._make_index" -> "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns" [color = "#b2b2b2ff", label = "1"];
    "pandas.io.parsers.CParserWrapper._maybe_make_multi_index_columns" -> "pandas.io.parsers._is_potential_multi_index" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.range.__new__" -> "pandas.core.indexes.numeric._validate_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.__new__" -> "pandas.core.indexes.base.maybe_extract_name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.__new__" -> "pandas.core.common.all_none" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.__new__" -> "pandas.core.dtypes.common.ensure_python_int" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.range.__new__" -> "pandas.core.indexes.range._simple_new" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.maybe_extract_name" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "36"];
    "pandas.core.indexes.base.maybe_extract_name" -> "pandas.core.dtypes.inference.is_hashable" [color = "#b2b2b2ff", label = "37"];
    "pandas.core.common.all_none" -> "pandas.core.common.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.range._simple_new" -> "pandas.core.indexes.base.RangeIndex.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range._simple_new" -> "pandas.core.indexes.base.RangeIndex._reset_identity" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.RangeIndex.name" -> "pandas.core.indexes.base.maybe_extract_name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__init__" -> "pandas.core.internals.construction.init_dict" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__init__" -> "pandas.core.generic.DataFrame.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.frame.DataFrame.__init__" -> "pandas.core.generic.DataFrame._init_mgr" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.construction.init_dict" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.internals.construction.init_dict" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.init_dict" -> "pandas.core.series.Series.isna" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.init_dict" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.init_dict" -> "pandas.core.generic.Series.logical_func" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.init_dict" -> "pandas.core.internals.construction.arrays_to_mgr" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__init__" -> "pandas.core.indexes.base.maybe_extract_name" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.series.Series.__init__" -> "pandas.core.construction.is_empty_data" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.series.Series.__init__" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.series.Series.__init__" -> "pandas.core.generic.Series._validate_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series.__init__" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.series.Series.__init__" -> "pandas.core.dtypes.inference.is_dict_like" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series.__init__" -> "pandas.core.series.Series._init_dict" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__init__" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__init__" -> "pandas.core.common.maybe_iterable_to_list" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__init__" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.series.Series.__init__" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series.__init__" -> "pandas.core.construction.sanitize_array" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.series.Series.__init__" -> "pandas.core.internals.managers.SingleBlockManager.__init__" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.series.Series.__init__" -> "pandas.core.generic.Series.__init__" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.series.Series.__init__" -> "pandas.core.generic.Series.__setattr__" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.series.Series.__init__" -> "pandas.core.series.Series._set_axis" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.series.Series.__init__" -> "pandas.core.indexes.range.RangeIndex.__len__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.series.Series.__init__" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.is_empty_data" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.indexes.base.ensure_index" -> "pandas.core.dtypes.inference.is_iterator" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.ensure_index" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.indexes.base.ensure_index" -> "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.ensure_index" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.ensure_index" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.ensure_index" -> "pandas.core.indexes.base.__new__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.__new__" -> "_handle_fromlist" [color = "#a5afb2ff", label = "23"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base.maybe_extract_name" [color = "#b2b2b2ff", label = "12"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_categorical_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_interval_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_datetime64_any_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_period_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_signed_integer_dtype" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_unsigned_integer_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_float_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.common.asarray_tuplesafe" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base._maybe_cast_data_without_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base.__new__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base._maybe_cast_with_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base._simple_new" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.__new__" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.dtypes.inference.is_iterator" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.base.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.__new__" -> "pandas.core.indexes.numeric.__new__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.dtypes.common.is_interval_dtype" -> "pandas.core.dtypes.dtypes.is_dtype" [color = "#b2b2b2ff", label = "45"];
    "pandas.core.dtypes.dtypes.is_dtype" -> "pandas.core.dtypes.base.is_dtype" [color = "#b1b2b2ff", label = "90"];
    "pandas.core.dtypes.common.is_datetime64_any_dtype" -> "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.dtypes.common.is_datetime64_any_dtype" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.dtypes.common.is_datetime64_dtype" -> "pandas.core.dtypes.common.classes" [color = "#b2b2b2ff", label = "37"];
    "pandas.core.dtypes.common.is_datetime64_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "37"];
    "pandas.core.dtypes.common.is_datetime64tz_dtype" -> "pandas.core.dtypes.base.is_dtype" [color = "#b2b2b2ff", label = "56"];
    "pandas.core.dtypes.common.is_timedelta64_dtype" -> "pandas.core.dtypes.common.classes" [color = "#b2b2b2ff", label = "43"];
    "pandas.core.dtypes.common.is_timedelta64_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "43"];
    "pandas.core.dtypes.common.is_period_dtype" -> "pandas.core.dtypes.dtypes.is_dtype" [color = "#b2b2b2ff", label = "45"];
    "pandas.core.dtypes.common.is_signed_integer_dtype" -> "pandas.core.dtypes.common.classes_and_not_datetimelike" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.dtypes.common.is_signed_integer_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.dtypes.common.is_unsigned_integer_dtype" -> "pandas.core.dtypes.common.classes_and_not_datetimelike" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common.is_unsigned_integer_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common._get_dtype" -> "pandas.core.dtypes.common.pandas_dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.common.asarray_tuplesafe" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.common.asarray_tuplesafe" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.indexes.base._maybe_cast_data_without_dtype" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "pandas.core.indexes.base._maybe_cast_data_without_dtype" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base._maybe_cast_with_dtype" -> "pandas.core.dtypes.common.is_integer_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base._maybe_cast_with_dtype" -> "pandas.core.dtypes.common.is_float_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base._simple_new" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "26"];
    "pandas.core.indexes.base._simple_new" -> "pandas.core.indexes.base.Index._reset_identity" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.base._simple_new" -> "pandas.core.indexes.base.Int64Index._reset_identity" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.generic.Series._validate_dtype" -> "pandas.core.dtypes.common.pandas_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.inference.is_dict_like" -> "pandas.core.dtypes.inference.<genexpr>" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.series.Series._init_dict" -> "pandas.core.construction.create_series_with_explicit_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._init_dict" -> "pandas.core.series.Series.reindex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.create_series_with_explicit_dtype" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.construction.create_series_with_explicit_dtype" -> "pandas.core.construction.is_empty_data" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.create_series_with_explicit_dtype" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.common.maybe_iterable_to_list" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.dtypes.common.pandas_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.construction.extract_array" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.construction._try_cast" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.dtypes.cast.maybe_cast_to_datetime" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "44"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "29"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.indexes.range.RangeIndex.__len__" [color = "#b2b2b2ff", label = "19"];
    "pandas.core.construction.sanitize_array" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.construction.sanitize_array" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction.extract_array" -> "pandas.core.dtypes.generic._check" [color = "#b1b2b2ff", label = "167"];
    "pandas.core.construction.extract_array" -> "pandas.core.series.Series.array" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.construction.extract_array" -> "pandas.core.arrays.numpy_.PandasArray.to_numpy" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.common.is_integer_dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.cast.maybe_cast_to_datetime" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.construction._try_cast" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.inference.is_iterator" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.cast.maybe_castable" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.construction._try_cast" -> "pandas.core.dtypes.cast.construct_1d_ndarray_preserving_na" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" -> "_handle_fromlist" [color = "#a5afb2ff", label = "20"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" -> "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" -> "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.dtypes.cast.maybe_cast_to_datetime" -> "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" -> "pandas.core.internals.blocks.make_block" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" -> "pandas.core.indexes.range.RangeIndex.__len__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.internals.managers.SingleBlockManager.__init__" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.make_block" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "36"];
    "pandas.core.internals.blocks.make_block" -> "pandas.core.internals.blocks.get_block_type" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.internals.blocks.make_block" -> "pandas.core.internals.blocks.ObjectBlock.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.internals.blocks.make_block" -> "pandas.core.internals.blocks.BoolBlock.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.internals.blocks.make_block" -> "pandas.core.internals.blocks.IntBlock.__init__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_sparse" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_categorical" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_interval_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_period_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.get_block_type" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.dtypes.common.is_sparse" -> "_handle_fromlist" [color = "#a5afb2ff", label = "28"];
    "pandas.core.dtypes.common.is_categorical" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.dtypes.common.is_categorical" -> "pandas.core.dtypes.common.is_categorical_dtype" [color = "#b2b2b2ff", label = "24"];
    "pandas.core.internals.blocks.ObjectBlock.__init__" -> "pandas.core.internals.blocks.ObjectBlock.__init__" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.internals.blocks.ObjectBlock.__init__" -> "pandas.core.internals.blocks.ObjectBlock._check_ndim" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.internals.blocks.ObjectBlock.__init__" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "28"];
    "pandas.core.generic.Series.__setattr__" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "68"];
    "pandas.core.series.Series.name" -> "pandas.core.generic.Series.__getattr__" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.series.Series.name" -> "pandas.core.dtypes.inference.is_hashable" [color = "#b2b2b2ff", label = "48"];
    "pandas.core.series.Series._set_axis" -> "pandas.core.indexes.base.Index.is_all_dates" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._set_axis" -> "pandas.core.series.Series._set_subtyp" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.series.Series._set_axis" -> "pandas.core.indexes.numeric.RangeIndex.is_all_dates" [color = "#b2b2b2ff", label = "15"];
    "pandas.core.series.Series._set_axis" -> "pandas.core.indexes.numeric.Int64Index.is_all_dates" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.indexes.base.Index.is_all_dates" -> "pandas.core.indexes.base.Index.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.reindex" -> "pandas.core.generic.Series.reindex" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.reindex" -> "pandas.core.generic.Series._construct_axes_from_arguments" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.reindex" -> "pandas.core.missing.clean_reindex_fill_method" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.reindex" -> "pandas.core.generic.Series._consolidate_inplace" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.reindex" -> "pandas.core.generic.Series.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic.Series._construct_axes_from_arguments" -> "pandas.core.generic.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.missing.clean_reindex_fill_method" -> "pandas.core.missing.clean_fill_method" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series._consolidate_inplace" -> "pandas.core.generic.Series._protect_consolidate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series._protect_consolidate" -> "pandas.core.generic.Series.f" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.f" -> "pandas.core.internals.managers.SingleBlockManager.consolidate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.f" -> "pandas.core.generic.Series.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.SingleBlockManager.consolidate" -> "pandas.core.internals.managers.SingleBlockManager.is_consolidated" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.<genexpr>" -> "pandas.core.generic.Series._get_axis" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.<genexpr>" -> "pandas.core.indexes.base.Index.identical" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series._get_axis" -> "pandas.core.generic._get_axis_name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index.identical" -> "pandas.core.indexes.base.Index.equals" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index.identical" -> "pandas.core.indexes.base.Index.<genexpr>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index.equals" -> "pandas.core.indexes.base.Index.is_" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Index.equals" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.base.Index.equals" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index.equals" -> "pandas.core.indexes.base.Index._internal_get_values" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.indexes.base.Index.equals" -> "pandas.core.dtypes.missing.array_equivalent" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index._internal_get_values" -> "pandas.core.indexes.base.Index.values" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.missing.array_equivalent" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.dtypes.missing.array_equivalent" -> "pandas.core.dtypes.common.is_string_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.common.is_string_dtype" -> "pandas.core.dtypes.common._is_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common._is_dtype" -> "pandas.core.dtypes.common._get_dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.common._is_dtype" -> "pandas.core.dtypes.common.condition" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common._is_dtype" -> "pandas.core.dtypes.common.<lambda>" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.common.condition" -> "pandas.core.dtypes.common.is_excluded_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common.is_excluded_dtype" -> "pandas.core.dtypes.common.<genexpr>" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.dtypes.common.<genexpr>" -> "pandas.core.dtypes.common.is_period_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common.<genexpr>" -> "pandas.core.dtypes.common.is_interval_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base.Index.<genexpr>" -> "pandas.core.indexes.base.Index.name" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.series.Series.isna" -> "pandas.core.generic.Series.isna" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.isna" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.isna" -> "pandas.core.generic.Series.__finalize__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.missing.isna" -> "pandas.core.dtypes.missing._isna_new" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.dtypes.missing._isna_new" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.dtypes.missing._isna_new" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.dtypes.missing._isna_new" -> "pandas.core.dtypes.missing._isna_ndarraylike" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.series.Series.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.dtypes.common.is_string_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.dtypes.common.is_string_like_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.series.Series._constructor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.missing._isna_ndarraylike" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.dtype" -> "pandas.core.internals.managers.SingleBlockManager.dtype" [color = "#b2b2b2ff", label = "36"];
    "pandas.core.internals.managers.SingleBlockManager.dtype" -> "pandas.core.internals.managers.SingleBlockManager._block" [color = "#b2b2b2ff", label = "36"];
    "pandas.core.internals.managers.SingleBlockManager.dtype" -> "pandas.core.internals.blocks.ObjectBlock.dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers.SingleBlockManager.dtype" -> "pandas.core.internals.blocks.BoolBlock.dtype" [color = "#b2b2b2ff", label = "30"];
    "pandas.core.series.Series.values" -> "pandas.core.internals.managers.SingleBlockManager.external_values" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.internals.managers.SingleBlockManager.external_values" -> "pandas.core.internals.managers.SingleBlockManager._block" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.internals.managers.SingleBlockManager.external_values" -> "pandas.core.internals.blocks.ObjectBlock.external_values" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.dtypes.common.is_string_like_dtype" -> "pandas.core.dtypes.common._is_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.dtypes.cast.maybe_castable" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.internals.blocks.BoolBlock.__init__" -> "pandas.core.internals.blocks.BoolBlock._check_ndim" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.internals.blocks.BoolBlock.__init__" -> "pandas.core.internals.blocks.BoolBlock.mgr_locs" [color = "#b2b2b2ff", label = "28"];
    "pandas.core.generic.Series.__finalize__" -> "pandas.core.generic.Series.attrs" [color = "#b2b2b2ff", label = "14"];
    "pandas.core.generic.Series.__finalize__" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "28"];
    "pandas.core.generic.Series.logical_func" -> "pandas.compat.numpy.function.CompatValidator.__call__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.Series.logical_func" -> "pandas.core.series.Series._reduce" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "pandas.core.series.Series._values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "pandas.core.generic._get_axis_number" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "numpy.core._ufunc_config.errstate.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "numpy.core._ufunc_config.errstate.__enter__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "pandas.core.nanops.nanany" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._reduce" -> "numpy.core._ufunc_config.errstate.__exit__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._values" -> "pandas.core.internals.managers.SingleBlockManager.internal_values" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.SingleBlockManager.internal_values" -> "pandas.core.internals.managers.SingleBlockManager._block" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.SingleBlockManager.internal_values" -> "pandas.core.internals.blocks.BoolBlock.internal_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.SingleBlockManager.internal_values" -> "pandas.core.internals.blocks.ObjectBlock.internal_values" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.nanops.nanany" -> "pandas.core.nanops._get_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops.nanany" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.nanops._maybe_get_mask" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.nanops._get_values" -> "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.nanops._na_ok_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.nanops._get_fill_value" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.dtypes.common.is_integer_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._get_values" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.nanops._maybe_get_mask" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype" -> "pandas.core.dtypes.common.classes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype" -> "pandas.core.dtypes.common._is_dtype_type" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.arrays_to_mgr" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.construction.arrays_to_mgr" -> "pandas.core.internals.construction._homogenize" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction.arrays_to_mgr" -> "pandas.core.internals.managers.create_block_manager_from_arrays" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction._homogenize" -> "pandas.core.base.Series.__iter__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.construction._homogenize" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.construction._homogenize" -> "pandas.core.construction.sanitize_array" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.base.Series.__iter__" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.Series.__iter__" -> "pandas.core.series.Series._values" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.base.Series.__iter__" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "35"];
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.create_block_manager_from_arrays" -> "pandas.core.internals.managers.form_blocks" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.create_block_manager_from_arrays" -> "pandas.core.internals.managers.BlockManager.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.create_block_manager_from_arrays" -> "pandas.core.internals.managers.BlockManager._consolidate_inplace" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.indexes.base.Index.equals" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.indexes.base.Index.__getitem__" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.internals.blocks.get_block_type" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.internals.managers._multi_blockify" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.form_blocks" -> "pandas.core.internals.managers._simple_blockify" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index.__getitem__" -> "pandas.core.common.cast_scalar_indexer" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.internals.managers._multi_blockify" -> "pandas.core.internals.managers.<lambda>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers._multi_blockify" -> "pandas.core.internals.managers._stack_arrays" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers._multi_blockify" -> "pandas.core.internals.blocks.make_block" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers._stack_arrays" -> "pandas.core.internals.managers._shape_compat" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers._stack_arrays" -> "pandas.core.internals.managers._asarray_compat" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers._shape_compat" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers._asarray_compat" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers._asarray_compat" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.blocks.IntBlock.__init__" -> "pandas.core.internals.blocks.IntBlock._check_ndim" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.blocks.IntBlock.__init__" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.blocks.IntBlock.mgr_locs" -> "numpy.core._asarray.require" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._asarray.require" -> "numpy.core._asarray.<setcomp>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers._simple_blockify" -> "pandas.core.internals.managers._stack_arrays" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers._simple_blockify" -> "pandas.core.internals.blocks.make_block" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock.mgr_locs" -> "numpy.core._asarray.require" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.__init__" -> "pandas.core.internals.managers.<listcomp>" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager.__init__" -> "pandas.core.internals.managers.BlockManager.ndim" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.managers.BlockManager.__init__" -> "pandas.core.internals.managers.BlockManager._verify_integrity" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager.__init__" -> "pandas.core.internals.managers.BlockManager._consolidate_check" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager.__init__" -> "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.IntBlock.ftype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.ObjectBlock.ftype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.IntBlock.fill_value" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.IntBlock.take_nd" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.ObjectBlock.fill_value" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.blocks.ObjectBlock.take_nd" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.managers.copy_func" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.<listcomp>" -> "pandas.core.internals.concat.get_mgr_concatenation_plan" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.internals.managers.BlockManager.shape" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.internals.managers.<genexpr>" [color = "#b2b2b2ff", label = "21"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.internals.blocks.IntBlock.shape" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.internals.blocks.ObjectBlock.shape" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.internals.managers.BlockManager.items" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager._verify_integrity" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager.shape" -> "pandas.core.internals.managers.<genexpr>" [color = "#b1b2b2ff", label = "93"];
    "pandas.core.internals.managers.<genexpr>" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "31"];
    "pandas.core.internals.managers.<genexpr>" -> "pandas.core.indexes.range.RangeIndex.__len__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.<genexpr>" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.<genexpr>" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.<genexpr>" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "23"];
    "pandas.core.internals.managers.BlockManager._consolidate_check" -> "pandas.core.internals.managers.<listcomp>" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.blocks.IntBlock.ftype" -> "pandas.core.internals.blocks.IntBlock.dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.blocks.IntBlock.ftype" -> "numpy.core._dtype.__str__" [color = "#b2b2b2ff", label = "8"];
    "numpy.core._dtype.__str__" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.blocks.ObjectBlock.ftype" -> "pandas.core.internals.blocks.ObjectBlock.dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.blocks.ObjectBlock.ftype" -> "numpy.core._dtype.__str__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" -> "pandas.core.internals.managers.BlockManager.shape" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager._rebuild_blknos_and_blklocs" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager._consolidate_inplace" -> "pandas.core.internals.managers.BlockManager.is_consolidated" [color = "#b2b2b2ff", label = "12"];
    "pandas.io.parsers.TextFileReader.close" -> "pandas.io.parsers.CParserWrapper.close" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.common.apply_if_callable" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.dtypes.inference.is_hashable" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.indexes.base.Index.is_unique" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.indexes.base.Index.__contains__" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.indexes.base.Index.nlevels" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.frame.DataFrame.__getitem__" -> "pandas.core.generic.DataFrame._get_item_cache" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.indexes.base.Index.is_unique" -> "pandas.core.indexes.base.Index._engine" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index.is_unique" -> "pandas.core.indexes.base.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index._engine" -> "pandas.core.base.Index._ndarray_values" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index._engine" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.base.Index._ndarray_values" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.base.Index._ndarray_values" -> "pandas.core.indexes.base.Index.values" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic.DataFrame._get_item_cache" -> "pandas.core.internals.managers.BlockManager.get" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.DataFrame._get_item_cache" -> "pandas.core.frame.DataFrame._box_item_values" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.DataFrame._get_item_cache" -> "pandas.core.generic.Series._set_as_cached" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.DataFrame._get_item_cache" -> "pandas.core.generic.Series.__setattr__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.get" -> "pandas.core.internals.managers.BlockManager.items" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.internals.managers.BlockManager.get" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.get" -> "pandas.core.indexes.base.Index.get_loc" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.get" -> "pandas.core.internals.managers.BlockManager.iget" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.iget" -> "pandas.core.internals.blocks.ObjectBlock.iget" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.iget" -> "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.BlockManager.iget" -> "pandas.core.internals.managers.SingleBlockManager.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" -> "pandas.core.internals.blocks.make_block" [color = "#b2b2b2ff", label = "11"];
    "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._box_item_values" -> "pandas.core.indexes.base.Index.get_loc" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.frame.DataFrame._box_item_values" -> "pandas.core.indexes.base.Index.__getitem__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.frame.DataFrame._box_item_values" -> "pandas.core.frame.DataFrame._box_col_values" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.frame.DataFrame._box_col_values" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.Series._set_as_cached" -> "pandas.core.generic.Series.__setattr__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.common.Series.new_method" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "48"];
    "pandas.core.ops.common.Series.new_method" -> "pandas.core.ops.Series.wrapper" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.ops.get_op_result_name" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.construction.extract_array" [color = "#b2b2b2ff", label = "26"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.ops.array_ops.comparison_op" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.ops._construct_result" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.ops._align_method_SERIES" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.Series.wrapper" -> "pandas.core.ops.array_ops.logical_op" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.get_op_result_name" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.ops.get_op_result_name" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.get_op_result_name" -> "pandas.core.ops._maybe_match_name" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.series.Series.array" -> "pandas.core.internals.managers.SingleBlockManager._block" [color = "#b2b2b2ff", label = "23"];
    "pandas.core.series.Series.array" -> "pandas.core.internals.blocks.ObjectBlock.array_values" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.series.Series.array" -> "pandas.core.internals.blocks.BoolBlock.array_values" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.internals.blocks.ObjectBlock.array_values" -> "pandas.core.arrays.numpy_.PandasArray.__init__" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.arrays.numpy_.PandasArray.__init__" -> "pandas.core.arrays.numpy_.PandasDtype.__init__" [color = "#b2b2b2ff", label = "23"];
    "pandas.core.arrays.numpy_.PandasArray.to_numpy" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.ops.array_ops.comparison_op" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.ops.array_ops.comparison_op" -> "pandas.core.ops.dispatch.should_extension_dispatch" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.array_ops.comparison_op" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.array_ops.comparison_op" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.array_ops.comparison_op" -> "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY" [color = "#b2b2b2ff", label = "9"];
    "pandas.core.ops.dispatch.should_extension_dispatch" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "17"];
    "pandas.core.ops.dispatch.should_extension_dispatch" -> "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops.dispatch.should_extension_dispatch" -> "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops.dispatch.should_extension_dispatch" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.ops._construct_result" -> "pandas.core.series.Series._constructor" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops._construct_result" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops._construct_result" -> "pandas.core.generic.Series.__finalize__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.ops._construct_result" -> "pandas.core.generic.Series.__setattr__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.indexing._LocIndexer.__getitem__" -> "pandas.core.common.apply_if_callable" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer.__getitem__" -> "pandas.core.indexing._LocIndexer._getitem_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getitem_axis" -> "pandas.core.dtypes.inference.is_iterator" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getitem_axis" -> "pandas.core.generic.DataFrame._get_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getitem_axis" -> "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getitem_axis" -> "pandas.core.common.is_bool_indexer" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getitem_axis" -> "pandas.core.indexing._LocIndexer._getbool_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.dtypes.inference.is_iterator" -> "pandas.core.generic.Series.__getattr__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.Series.__getattr__" -> "pandas.core.generic.Series._info_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.Series.__getattr__" -> "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name" -> "pandas.core.indexes.base.RangeIndex.is_object" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex._can_hold_identifiers_and_holds_name" -> "pandas.core.indexes.base.RangeIndex.is_categorical" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex.is_object" -> "pandas.core.indexes.range.RangeIndex.dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex.is_object" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex.is_categorical" -> "pandas.core.indexes.numeric.RangeIndex.inferred_type" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._get_axis" -> "pandas.core.generic._get_axis_name" [color = "#b2b2b2ff", label = "22"];
    "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.common.is_bool_indexer" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.common.is_bool_indexer" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.common.is_bool_indexer" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getbool_axis" -> "pandas.core.generic.DataFrame._get_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getbool_axis" -> "pandas.core.indexing.check_bool_indexer" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing._LocIndexer._getbool_axis" -> "pandas.core.generic.DataFrame._take_with_is_copy" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing.check_bool_indexer" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing.check_bool_indexer" -> "pandas.core.indexes.range.RangeIndex.equals" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing.check_bool_indexer" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexing.check_bool_indexer" -> "pandas.core.indexers.check_array_indexer" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "_handle_fromlist" [color = "#a5afb2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "pandas.core.dtypes.inference.is_array_like" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.check_array_indexer" -> "pandas.core.indexes.range.RangeIndex.__len__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.dtypes.inference.is_array_like" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.dtypes.inference.is_array_like" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "5"];
    "numpy.core._asarray.asarray" -> "pandas.core.generic.Series.__getattr__" [color = "#b2b2b2ff", label = "10"];
    "numpy.core._asarray.asarray" -> "pandas.core.series.Series.__array__" [color = "#b2b2b2ff", label = "5"];
    "numpy.core._asarray.asarray" -> "pandas.core.arrays.numpy_.PandasArray.__array__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.series.Series.__array__" -> "pandas.core.series.Series.array" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.series.Series.__array__" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.BoolBlock.array_values" -> "pandas.core.arrays.numpy_.PandasArray.__init__" [color = "#b2b2b2ff", label = "13"];
    "pandas.core.arrays.numpy_.PandasArray.__array__" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._take_with_is_copy" -> "pandas.core.generic.DataFrame.take" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._take_with_is_copy" -> "pandas.core.generic.DataFrame._get_axis" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.generic.DataFrame._take_with_is_copy" -> "pandas.core.indexes.base.Int64Index.equals" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._take_with_is_copy" -> "pandas.core.generic.DataFrame._set_is_copy" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.compat.numpy.function.CompatValidator.__call__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.generic.DataFrame._consolidate_inplace" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.generic._get_block_manager_axis" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.internals.managers.BlockManager.take" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.frame.DataFrame._constructor" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.frame.DataFrame.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.take" -> "pandas.core.generic.DataFrame.__finalize__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._consolidate_inplace" -> "pandas.core.generic.DataFrame._protect_consolidate" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.generic.DataFrame._protect_consolidate" -> "pandas.core.generic.DataFrame.f" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.generic.DataFrame.f" -> "pandas.core.internals.managers.BlockManager.consolidate" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.generic.DataFrame.f" -> "pandas.core.generic.DataFrame.__setattr__" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.managers.BlockManager.consolidate" -> "pandas.core.internals.managers.BlockManager.is_consolidated" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.generic._get_block_manager_axis" -> "pandas.core.generic._get_axis_number" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers.BlockManager.take" -> "pandas.core.internals.managers.BlockManager._consolidate_inplace" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "numpy.core._asarray.asanyarray" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "pandas.core.internals.managers.BlockManager.shape" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "pandas.core.indexers.maybe_convert_indices" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "pandas.core.indexes.base.RangeIndex.take" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.take" -> "pandas.core.internals.managers.BlockManager.reindex_indexer" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexers.maybe_convert_indices" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.indexes.base.RangeIndex.take" -> "pandas.core.indexes.base.RangeIndex.values" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex.take" -> "pandas.core.indexes.range.RangeIndex._shallow_copy" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex.values" -> "pandas.core.indexes.range.RangeIndex._data" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.indexes.range.RangeIndex._data" -> "pandas.core.indexes.range.RangeIndex.start" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._data" -> "pandas.core.indexes.range.RangeIndex.stop" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._data" -> "pandas.core.indexes.range.RangeIndex.step" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._shallow_copy" -> "pandas.core.indexes.base.RangeIndex.name" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.range.RangeIndex._shallow_copy" -> "pandas.core.indexes.range.RangeIndex._int64index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._shallow_copy" -> "pandas.core.indexes.numeric.Int64Index._shallow_copy" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.range.RangeIndex._int64index" -> "pandas.core.indexes.range.RangeIndex._data" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._int64index" -> "pandas.core.indexes.base.RangeIndex.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.range.RangeIndex._int64index" -> "pandas.core.indexes.base._simple_new" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._shallow_copy" -> "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.numeric.Int64Index._shallow_copy" -> "pandas.core.indexes.base.Int64Index._shallow_copy" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer" -> "pandas.core.indexes.base.Int64Index._get_attributes_dict" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index._shallow_copy_with_infer" -> "pandas.core.indexes.base.__new__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index._get_attributes_dict" -> "pandas.core.indexes.base.Int64Index.<dictcomp>" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.indexes.base.Int64Index.<dictcomp>" -> "pandas.core.indexes.base.Int64Index.name" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.indexes.numeric.__new__" -> "pandas.core.indexes.numeric._validate_dtype" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.numeric.__new__" -> "pandas.core.dtypes.common.is_dtype_equal" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.numeric.__new__" -> "pandas.core.indexes.base.maybe_extract_name" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.numeric.__new__" -> "pandas.core.indexes.base._simple_new" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.dtypes.common.is_dtype_equal" -> "pandas.core.dtypes.common._get_dtype" [color = "#b2b2b2ff", label = "32"];
    "pandas.core.internals.managers.BlockManager.reindex_indexer" -> "pandas.core.internals.managers.BlockManager._consolidate_inplace" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.reindex_indexer" -> "pandas.core.internals.managers.BlockManager.ndim" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.reindex_indexer" -> "pandas.core.internals.managers.<listcomp>" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.managers.BlockManager.reindex_indexer" -> "pandas.core.internals.managers.BlockManager.__init__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.IntBlock.take_nd" -> "pandas.core.algorithms.take_nd" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.IntBlock.take_nd" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.IntBlock.take_nd" -> "pandas.core.internals.blocks.IntBlock.dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.IntBlock.take_nd" -> "pandas.core.dtypes.common.is_dtype_equal" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.IntBlock.take_nd" -> "pandas.core.internals.blocks.IntBlock.make_block_same_class" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.algorithms.take_nd" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.algorithms.take_nd" -> "pandas.core.construction.extract_array" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.algorithms.take_nd" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.algorithms.take_nd" -> "pandas.core.dtypes.cast.maybe_promote" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.algorithms.take_nd" -> "numpy.core._methods._any" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.algorithms.take_nd" -> "pandas.core.algorithms._get_take_nd_function" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.cast.maybe_promote" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.cast.maybe_promote" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "20"];
    "pandas.core.dtypes.cast.maybe_promote" -> "pandas.core.dtypes.cast._ensure_dtype_type" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.cast._ensure_dtype_type" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "10"];
    "pandas.core.dtypes.cast._ensure_dtype_type" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.algorithms._get_take_nd_function" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "20"];
    "pandas.core.internals.blocks.IntBlock.make_block_same_class" -> "pandas.core.internals.blocks.make_block" [color = "#b2b2b2ff", label = "7"];
    "pandas.core.internals.blocks.IntBlock.make_block_same_class" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" -> "pandas.core.algorithms.take_nd" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" -> "pandas.core.internals.blocks.ObjectBlock.dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" -> "pandas.core.dtypes.common.is_dtype_equal" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.internals.blocks.ObjectBlock.take_nd" -> "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame.__finalize__" -> "pandas.core.generic.DataFrame.attrs" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.indexes.base.Int64Index.is_" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.indexes.base.Int64Index._internal_get_values" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.indexes.base.RangeIndex._internal_get_values" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index.equals" -> "pandas.core.dtypes.missing.array_equivalent" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.Int64Index._internal_get_values" -> "pandas.core.indexes.base.Int64Index.values" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.indexes.base.RangeIndex._internal_get_values" -> "pandas.core.indexes.base.RangeIndex.values" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.generic.DataFrame._set_is_copy" -> "pandas.core.generic.DataFrame.__setattr__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.ops._align_method_SERIES" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops._align_method_SERIES" -> "pandas.core.indexes.range.RangeIndex.equals" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops._maybe_match_name" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "16"];
    "pandas.core.ops.array_ops.logical_op" -> "pandas.core.dtypes.common.is_integer_dtype" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.ops.array_ops.logical_op" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.array_ops.logical_op" -> "pandas.core.ops.dispatch.should_extension_dispatch" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.array_ops.logical_op" -> "pandas.core.ops.array_ops.fill_bool" [color = "#b2b2b2ff", label = "8"];
    "pandas.core.ops.array_ops.logical_op" -> "pandas.core.ops.array_ops.na_logical_op" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.ops.array_ops.fill_bool" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.generic.DataFrame.copy" -> "pandas.core.internals.managers.BlockManager.copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame.copy" -> "pandas.core.frame.DataFrame._constructor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame.copy" -> "pandas.core.frame.DataFrame.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame.copy" -> "pandas.core.generic.DataFrame.__finalize__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.copy" -> "pandas.core.internals.managers.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.copy" -> "pandas.core.internals.managers.BlockManager.apply" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.copy_func" -> "pandas.core.indexes.base.Index.view" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.copy_func" -> "pandas.core.indexes.base.Int64Index.view" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index.view" -> "pandas.core.indexes.base.Index._shallow_copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index._shallow_copy" -> "pandas.core.indexes.base.Index.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index._shallow_copy" -> "pandas.core.indexes.base.Index._get_attributes_dict" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index._shallow_copy" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index._shallow_copy" -> "pandas.core.indexes.base._simple_new" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index._get_attributes_dict" -> "pandas.core.indexes.base.Index.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Index.<dictcomp>" -> "pandas.core.indexes.base.Index.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.view" -> "pandas.core.indexes.numeric.Int64Index._shallow_copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._shallow_copy" -> "pandas.core.indexes.base.Int64Index.values" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index._shallow_copy" -> "pandas.core.indexes.base.Int64Index._get_attributes_dict" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index._shallow_copy" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index._shallow_copy" -> "pandas.core.indexes.base._simple_new" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.managers.BlockManager._consolidate_inplace" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.managers.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.blocks.IntBlock.copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.blocks._extend_blocks" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.blocks.ObjectBlock.copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.apply" -> "pandas.core.internals.managers.BlockManager.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.IntBlock.copy" -> "pandas.core.internals.blocks.IntBlock.make_block_same_class" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks._extend_blocks" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "pandas.core.internals.blocks.ObjectBlock.copy" -> "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.accessor.CachedAccessor.__get__" -> "pandas.core.strings.StringMethods.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.__init__" -> "pandas.core.strings._validate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.__init__" -> "pandas.core.base.StringMethods.__setattr__" [color = "#b2b2b2ff", label = "5"];
    "pandas.core.strings.StringMethods.__init__" -> "pandas.core.dtypes.common.is_categorical_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.__init__" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.__init__" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.__init__" -> "pandas.core.base.StringMethods._freeze" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._validate" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.strings._validate" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._validate" -> "pandas.core.series.Series.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._validate" -> "numpy.core._dtype._name_get" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.wrapper" -> "pandas.core.strings.StringMethods.split" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.split" -> "pandas.core.strings.str_split" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods.split" -> "pandas.core.strings.StringMethods._wrap_result" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.str_split" -> "pandas.core.strings._na_map" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._na_map" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._na_map" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._na_map" -> "pandas.core.strings._map_object" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "pandas.core.series.Series.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "pandas.core.series.Series.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "all" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings._map_object" -> "pandas.core.strings.<lambda>" [color = "#95a4b2ff", label = "5286"];
    "pandas.core.strings._map_object" -> "numpy.core.numeric.full" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__len__" -> "pandas.core.internals.managers.SingleBlockManager.__len__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.SingleBlockManager.__len__" -> "pandas.core.internals.managers.SingleBlockManager.items" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.managers.SingleBlockManager.__len__" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "4"];
    "all" -> "numpy.core.fromnumeric._all_dispatcher" [color = "#b2b2b2ff", label = "1"];
    "all" -> "numpy.core.fromnumeric.all" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.fromnumeric.all" -> "numpy.core.fromnumeric._wrapreduction" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.full" -> "copyto" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods._wrap_result" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "pandas.core.strings.StringMethods._wrap_result" -> "pandas.core.series.Series.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods._wrap_result" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods._wrap_result" -> "pandas.core.series.Series._constructor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.strings.StringMethods._wrap_result" -> "pandas.core.series.Series.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__getitem__" -> "pandas.core.common.apply_if_callable" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__getitem__" -> "pandas.core.indexes.base.Int64Index.get_value" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series.__getitem__" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.series.Series.__getitem__" -> "pandas.core.indexes.base.Int64Index.get_loc" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.construction.extract_array" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.series.Series._internal_get_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.indexes.base.Int64Index._engine" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.series.Series.dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.get_value" -> "pandas.core.indexes.base.<lambda>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.series.Series._internal_get_values" -> "pandas.core.internals.managers.SingleBlockManager.get_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.SingleBlockManager.get_values" -> "pandas.core.internals.managers.SingleBlockManager._block" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.SingleBlockManager.get_values" -> "pandas.core.internals.blocks.ObjectBlock.to_dense" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer" -> "pandas.core.indexes.base.Int64Index._maybe_cast_indexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer" -> "pandas.core.indexes.base.Int64Index._convert_scalar_indexer" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._convert_scalar_indexer" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._convert_scalar_indexer" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._engine" -> "pandas.core.base.Int64Index._ndarray_values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._engine" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.Int64Index._ndarray_values" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.base.Int64Index._ndarray_values" -> "pandas.core.indexes.base.Int64Index.values" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__setitem__" -> "pandas.core.common.apply_if_callable" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__setitem__" -> "pandas.core.indexing.convert_to_index_sliceable" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__setitem__" -> "pandas.core.frame.DataFrame._set_item" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.convert_to_index_sliceable" -> "pandas.core.internals.managers.BlockManager.items" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexing.convert_to_index_sliceable" -> "pandas.core.indexes.base.Index.__contains__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._set_item" -> "pandas.core.frame.DataFrame._ensure_valid_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._set_item" -> "pandas.core.frame.DataFrame._sanitize_column" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._set_item" -> "pandas.core.generic.DataFrame._set_item" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._set_item" -> "pandas.core.frame.DataFrame.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._set_item" -> "pandas.core.generic.DataFrame._check_setitem_copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._ensure_valid_index" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.inference.is_sequence" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.cast.infer_dtype_from_scalar" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.cast.cast_scalar_to_array" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.cast.maybe_cast_to_datetime" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.indexes.base.Index.__contains__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "numpy.core._asarray.asarray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame._sanitize_column" -> "atleast_2d" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.cast.cast_scalar_to_array" -> "pandas.core.dtypes.cast.infer_dtype_from_scalar" [color = "#b2b2b2ff", label = "1"];
    "atleast_2d" -> "numpy.core.shape_base._atleast_2d_dispatcher" [color = "#b2b2b2ff", label = "1"];
    "atleast_2d" -> "numpy.core.shape_base.atleast_2d" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.shape_base.atleast_2d" -> "numpy.core._asarray.asanyarray" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame._set_item" -> "pandas.core.internals.managers.BlockManager.set" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame._set_item" -> "pandas.core.generic.DataFrame._clear_item_cache" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.managers.BlockManager.ndim" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.managers.BlockManager.shape" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.managers.BlockManager.items" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.indexes.base.Index.get_loc" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.blocks.ObjectBlock.should_store" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.managers.value_getitem" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.BlockManager.set" -> "pandas.core.internals.blocks.ObjectBlock.set" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock.should_store" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.frame.DataFrame.__len__" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat.concat" -> "pandas.core.reshape.concat._Concatenator.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat.concat" -> "pandas.core.reshape.concat._Concatenator.get_result" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.common.not_none" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.common.<genexpr>" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.generic.DataFrame._consolidate" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.generic.DataFrame.ndim" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.reshape.concat.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.generic._get_axis_number" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.__init__" -> "pandas.core.reshape.concat._Concatenator._get_new_axes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic.DataFrame._consolidate" -> "pandas.util._validators.validate_bool_kwarg" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic.DataFrame._consolidate" -> "pandas.core.generic.DataFrame._consolidate_inplace" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.generic.DataFrame.ndim" -> "pandas.core.internals.managers.BlockManager.ndim" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.reshape.concat.<listcomp>" -> "pandas.core.frame.DataFrame.shape" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame.shape" -> "pandas.core.indexes.base.Int64Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.frame.DataFrame.shape" -> "pandas.core.indexes.base.Index.__len__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.concat._Concatenator._get_new_axes" -> "pandas.core.reshape.concat._Concatenator._get_result_dim" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_new_axes" -> "pandas.core.reshape.concat._Concatenator.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_result_dim" -> "pandas.core.generic.DataFrame.ndim" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.<listcomp>" -> "pandas.core.reshape.concat._Concatenator._get_comb_axis" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.<listcomp>" -> "pandas.core.reshape.concat._Concatenator._get_concat_axis" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_comb_axis" -> "pandas.core.generic._get_block_manager_axis" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_comb_axis" -> "pandas.core.indexes.api.get_objs_combined_axis" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.get_objs_combined_axis" -> "pandas.core.indexes.api.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.get_objs_combined_axis" -> "pandas.core.indexes.api._get_combined_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.<listcomp>" -> "pandas.core.generic.DataFrame._get_axis" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.api._get_combined_index" -> "pandas.core.indexes.api._get_distinct_objs" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api._get_combined_index" -> "pandas.core.indexes.api.union_indexes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api._get_combined_index" -> "pandas.core.indexes.base.ensure_index" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.union_indexes" -> "pandas.core.indexes.api._sanitize_and_check" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.union_indexes" -> "pandas.core.indexes.base.Index.equals" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.union_indexes" -> "pandas.core.indexes.api.get_consensus_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.union_indexes" -> "pandas.core.indexes.base.Index.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api._sanitize_and_check" -> "pandas.core.indexes.api.<setcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.get_consensus_names" -> "pandas.core.indexes.api.<setcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.get_consensus_names" -> "pandas.core.indexes.base.Index.nlevels" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.api.<setcomp>" -> "pandas.core.indexes.base.Index._get_names" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.api.<setcomp>" -> "pandas.core.common.any_not_none" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Index._get_names" -> "pandas.core.indexes.base.Index.name" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.common.any_not_none" -> "pandas.core.common.<genexpr>" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.reshape.concat._Concatenator._get_concat_axis" -> "pandas.core.reshape.concat._Concatenator.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_concat_axis" -> "pandas.core.reshape.concat._concat_indexes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator._get_concat_axis" -> "pandas.core.reshape.concat._Concatenator._maybe_check_integrity" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._concat_indexes" -> "pandas.core.indexes.base.Int64Index.append" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.append" -> "pandas.core.indexes.base.<setcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.append" -> "pandas.core.indexes.base.Int64Index.name" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.append" -> "pandas.core.indexes.base.Int64Index._concat" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.<setcomp>" -> "pandas.core.indexes.base.Int64Index.name" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index._concat" -> "pandas.core.dtypes.concat.get_dtype_kinds" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._concat" -> "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_categorical_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_sparse" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.generic._check" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_datetime64tz_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_datetime64_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_timedelta64_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_object_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_bool_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.dtypes.concat.get_dtype_kinds" -> "pandas.core.dtypes.common.is_extension_array_dtype" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" -> "pandas.core.indexes.numeric.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" -> "concatenate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" -> "pandas.core.indexes.numeric.__new__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.Int64Index._concat_same_dtype" -> "pandas.core.indexes.base.Int64Index.rename" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.numeric.<listcomp>" -> "pandas.core.indexes.base.Int64Index._values" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index.rename" -> "pandas.core.indexes.base.Int64Index.set_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.set_names" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.indexes.base.Int64Index.set_names" -> "pandas.core.indexes.numeric.Int64Index._shallow_copy" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index.set_names" -> "pandas.core.indexes.base.Int64Index._set_names" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._set_names" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.indexes.base.Int64Index._set_names" -> "pandas.core.dtypes.inference.is_hashable" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.get_result" -> "pandas.core.indexes.base.Index.equals" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.reshape.concat._Concatenator.get_result" -> "pandas.core.internals.managers.concatenate_block_managers" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.get_result" -> "pandas.core.frame.DataFrame._constructor" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.get_result" -> "pandas.core.generic._from_axes" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.reshape.concat._Concatenator.get_result" -> "pandas.core.generic.DataFrame.__finalize__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.managers.<listcomp>" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.concat.combine_concat_plans" [color = "#b2b2b2ff", label = "3"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.concat.is_uniform_join_units" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.blocks.IntBlock.concat_same_type" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.blocks.ObjectBlock.concat_same_type" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.managers.concatenate_block_managers" -> "pandas.core.internals.managers.BlockManager.__init__" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" -> "pandas.core.internals.managers.BlockManager.shape" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" -> "pandas.core.internals.managers.BlockManager._is_single_block" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" -> "pandas.core.internals.blocks.IntBlock.mgr_locs" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" -> "pandas.core.internals.concat.JoinUnit.__init__" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.concat.get_mgr_concatenation_plan" -> "pandas.core.internals.blocks.ObjectBlock.mgr_locs" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.managers.BlockManager._is_single_block" -> "pandas.core.internals.managers.BlockManager.ndim" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.concat.combine_concat_plans" -> "pandas.core.internals.concat._next_or_none" [color = "#b2b2b2ff", label = "6"];
    "pandas.core.internals.concat.is_uniform_join_units" -> "pandas.core.internals.concat.<genexpr>" [color = "#b2b2b2ff", label = "18"];
    "pandas.core.internals.concat.<genexpr>" -> "pandas.core.internals.concat.JoinUnit.is_na" [color = "#b2b2b2ff", label = "4"];
    "pandas.core.internals.blocks.IntBlock.concat_same_type" -> "pandas.core.internals.blocks.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.IntBlock.concat_same_type" -> "concatenate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.IntBlock.concat_same_type" -> "pandas.core.internals.blocks.IntBlock.make_block_same_class" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.concat.JoinUnit.is_na" -> "pandas.core.dtypes.common.is_sparse" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.concat.JoinUnit.is_na" -> "pandas.core.dtypes.missing.isna" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.concat.JoinUnit.is_na" -> "numpy.core._methods._all" [color = "#b2b2b2ff", label = "2"];
    "pandas.core.internals.blocks.ObjectBlock.concat_same_type" -> "pandas.core.internals.blocks.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock.concat_same_type" -> "concatenate" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.internals.blocks.ObjectBlock.concat_same_type" -> "pandas.core.internals.blocks.ObjectBlock.make_block_same_class" [color = "#b2b2b2ff", label = "1"];
    "pandas.core.generic._from_axes" -> "pandas.core.frame.DataFrame.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.<genexpr>" [color = "#b2b2b2ff", label = "37"];
    "multiprocessing.context.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.context.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.context.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.ProcessError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.BufferTooShort" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.TimeoutError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.AuthenticationError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.BaseContext" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.Process" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.DefaultContext" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.<genexpr>" [color = "#b2b2b2ff", label = "37"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.ForkProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.SpawnProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.ForkServerProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.ForkContext" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.SpawnContext" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.ForkServerContext" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.<module>" -> "multiprocessing.context.DefaultContext.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "multiprocessing.process.<module>" -> "posixpath.abspath" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process.BaseProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process.AuthenticationString" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process._MainProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process._MainProcess.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "_weakrefset.WeakSet.__init__" [color = "#b2b2b2ff", label = "1"];
    "posixpath.abspath" -> "posixpath.isabs" [color = "#b2b2b2ff", label = "1"];
    "posixpath.abspath" -> "posixpath.normpath" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "multiprocessing.reduction.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "_lock_unlock_module" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "multiprocessing.reduction.ForkingPickler" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "multiprocessing.reduction._C" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "multiprocessing.reduction.register" [color = "#b2b2b2ff", label = "5"];
    "multiprocessing.reduction.<module>" -> "multiprocessing.reduction.AbstractReducer" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.reduction.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<genexpr>" -> "multiprocessing.context.DefaultContext.reducer" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.DefaultContext.Pool" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.DefaultContext.Pool" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.context.DefaultContext.Pool" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "multiprocessing.context.DefaultContext.Pool" -> "multiprocessing.context.DefaultContext.get_context" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.context.DefaultContext.Pool" -> "multiprocessing.pool.Pool.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.pool.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.RemoteTraceback" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.ExceptionWithTraceback" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.MaybeEncodingError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.Pool" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.ApplyResult" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.MapResult" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.IMapIterator" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.IMapUnorderedIterator" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.ThreadPool" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "multiprocessing.util.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "weakref.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.Finalize" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.ForkAwareThreadLock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.ForkAwareLocal" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.__init__" -> "multiprocessing.pool.Pool._setup_queues" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.__init__" -> "queue.Queue.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.__init__" -> "multiprocessing.pool.Pool._repopulate_pool" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.__init__" -> "threading.Thread.__init__" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.pool.Pool.__init__" -> "threading.Thread.daemon" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.pool.Pool.__init__" -> "threading.Thread.start" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.pool.Pool.__init__" -> "multiprocessing.util.Finalize.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool._setup_queues" -> "multiprocessing.context.ForkContext.SimpleQueue" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.context.ForkContext.SimpleQueue" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.context.ForkContext.SimpleQueue" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.context.ForkContext.SimpleQueue" -> "_handle_fromlist" [color = "#a5afb2ff", label = "2"];
    "multiprocessing.context.ForkContext.SimpleQueue" -> "multiprocessing.context.ForkContext.get_context" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.context.ForkContext.SimpleQueue" -> "multiprocessing.queues.SimpleQueue.__init__" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.queues.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "multiprocessing.queues.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.queues.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.queues.<module>" -> "multiprocessing.queues.Queue" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.queues.<module>" -> "multiprocessing.queues.JoinableQueue" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.queues.<module>" -> "multiprocessing.queues.SimpleQueue" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.connection.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "3"];
    "multiprocessing.connection.<module>" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection._ConnectionBase" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection.Connection" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection.Listener" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection.SocketListener" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection.ConnectionWrapper" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.connection.XmlListener" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.connection.<module>" -> "multiprocessing.reduction.register" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.queues.SimpleQueue.__init__" -> "multiprocessing.connection.Pipe" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.queues.SimpleQueue.__init__" -> "multiprocessing.context.ForkContext.Lock" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.connection.Pipe" -> "multiprocessing.connection.Connection.__init__" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.context.ForkContext.Lock" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.context.ForkContext.Lock" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.context.ForkContext.Lock" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "multiprocessing.context.ForkContext.Lock" -> "multiprocessing.context.ForkContext.get_context" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.context.ForkContext.Lock" -> "multiprocessing.synchronize.Lock.__init__" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.synchronize.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "4"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.SemLock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Semaphore" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.BoundedSemaphore" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Lock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.RLock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Condition" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Event" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Barrier" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.synchronize.Lock.__init__" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.context.ForkContext.get_start_method" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.synchronize._make_name" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.util.debug" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.synchronize.Lock._make_methods" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize.Lock.__init__" -> "multiprocessing.util.register_after_fork" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize._make_name" -> "multiprocessing.process.current_process" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.synchronize._make_name" -> "tempfile._RandomNameSequence.__next__" [color = "#b2b2b2ff", label = "4"];
    "tempfile._RandomNameSequence.__next__" -> "tempfile._RandomNameSequence.rng" [color = "#b2b2b2ff", label = "4"];
    "tempfile._RandomNameSequence.__next__" -> "tempfile.<listcomp>" [color = "#b2b2b2ff", label = "4"];
    "tempfile._RandomNameSequence.rng" -> "random.Random.__init__" [color = "#b2b2b2ff", label = "1"];
    "random.Random.__init__" -> "random.Random.seed" [color = "#b2b2b2ff", label = "1"];
    "tempfile.<listcomp>" -> "random.Random.choice" [color = "#b2b2b2ff", label = "32"];
    "random.Random.choice" -> "random.Random._randbelow" [color = "#b2b2b2ff", label = "32"];
    "multiprocessing.util.register_after_fork" -> "weakref.WeakValueDictionary.__setitem__" [color = "#b2b2b2ff", label = "4"];
    "weakref.WeakValueDictionary.__setitem__" -> "weakref.__new__" [color = "#b2b2b2ff", label = "4"];
    "weakref.WeakValueDictionary.__setitem__" -> "weakref.KeyedRef.__init__" [color = "#b2b2b2ff", label = "4"];
    "queue.Queue.__init__" -> "queue.Queue._init" [color = "#b2b2b2ff", label = "1"];
    "queue.Queue.__init__" -> "threading.Condition.__init__" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.pool.Pool._repopulate_pool" -> "multiprocessing.pool.Pool.Process" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.pool.Pool._repopulate_pool" -> "multiprocessing.process.ForkProcess.name" [color = "#b2b2b2ff", label = "80"];
    "multiprocessing.pool.Pool._repopulate_pool" -> "multiprocessing.process.ForkProcess.daemon" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.pool.Pool._repopulate_pool" -> "multiprocessing.process.ForkProcess.start" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.pool.Pool._repopulate_pool" -> "multiprocessing.util.debug" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.pool.Pool.Process" -> "multiprocessing.process.ForkProcess.__init__" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.process.ForkProcess.__init__" -> "multiprocessing.process.<genexpr>" [color = "#b2b2b2ff", label = "80"];
    "multiprocessing.process.ForkProcess.__init__" -> "_weakrefset.WeakSet.add" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.process.ForkProcess.start" -> "multiprocessing.process._cleanup" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.process.ForkProcess.start" -> "multiprocessing.context._Popen" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.context._Popen" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.context._Popen" -> "_find_and_load" [color = "#7b66b2ff", label = "1"];
    "multiprocessing.context._Popen" -> "_handle_fromlist" [color = "#a5afb2ff", label = "40"];
    "multiprocessing.context._Popen" -> "multiprocessing.popen_fork.Popen.__init__" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.popen_fork.<module>" -> "ModuleSpec.parent" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.popen_fork.<module>" -> "_handle_fromlist" [color = "#a5afb2ff", label = "1"];
    "multiprocessing.popen_fork.<module>" -> "multiprocessing.popen_fork.Popen" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.popen_fork.Popen.__init__" -> "multiprocessing.util._flush_std_streams" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.popen_fork.Popen.__init__" -> "multiprocessing.popen_fork.Popen._launch" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.popen_fork.Popen._launch" -> "multiprocessing.util.Finalize.__init__" [color = "#b2b2b2ff", label = "40"];
    "multiprocessing.process._cleanup" -> "multiprocessing.popen_fork.Popen.poll" [color = "#aeb2b2ff", label = "780"];
    "threading.Thread.__init__" -> "threading._newname" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.__init__" -> "threading.current_thread" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.__init__" -> "threading._MainThread.daemon" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.__init__" -> "threading.Event.__init__" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.__init__" -> "_weakrefset.WeakSet.add" [color = "#b2b2b2ff", label = "3"];
    "threading.Event.__init__" -> "threading.Condition.__init__" [color = "#b2b2b2ff", label = "4"];
    "threading.Thread.daemon" -> "threading.Event.is_set" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.start" -> "threading.Event.is_set" [color = "#b2b2b2ff", label = "3"];
    "threading.Thread.start" -> "threading.Event.wait" [color = "#964bb2ff", label = "3"];
    "threading.Event.wait" -> "threading.Condition.__enter__" [color = "#b2b2b2ff", label = "4"];
    "threading.Event.wait" -> "threading.Condition.wait" [color = "#964bb2ff", label = "4"];
    "threading.Event.wait" -> "threading.Condition.__exit__" [color = "#b2b2b2ff", label = "4"];
    "threading.Condition.wait" -> "threading.Condition._is_owned" [color = "#b2b2b2ff", label = "4"];
    "threading.Condition.wait" -> "threading.Condition._release_save" [color = "#b2b2b2ff", label = "4"];
    "threading.Condition.wait" -> "threading.Condition._acquire_restore" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.pool.Pool.map" -> "multiprocessing.pool.Pool._map_async" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.map" -> "multiprocessing.pool.MapResult.get" [color = "#964bb2ff", label = "1"];
    "multiprocessing.pool.Pool._map_async" -> "pandas.core.series.Series.__len__" [color = "#b2b2b2ff", label = "3"];
    "multiprocessing.pool.Pool._map_async" -> "multiprocessing.pool.MapResult.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool._map_async" -> "queue.Queue.put" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.MapResult.__init__" -> "multiprocessing.pool.MapResult.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.MapResult.__init__" -> "threading.Event.__init__" [color = "#b2b2b2ff", label = "1"];
    "queue.Queue.put" -> "threading.Condition.__enter__" [color = "#b2b2b2ff", label = "1"];
    "queue.Queue.put" -> "queue.Queue._put" [color = "#b2b2b2ff", label = "1"];
    "queue.Queue.put" -> "threading.Condition.notify" [color = "#b2b2b2ff", label = "1"];
    "queue.Queue.put" -> "threading.Condition.__exit__" [color = "#b2b2b2ff", label = "1"];
    "threading.Condition.notify" -> "threading.Condition._is_owned" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.MapResult.get" -> "multiprocessing.pool.MapResult.wait" [color = "#964bb2ff", label = "1"];
    "multiprocessing.pool.MapResult.get" -> "multiprocessing.pool.MapResult.ready" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.MapResult.wait" -> "threading.Event.wait" [color = "#964bb2ff", label = "1"];
    "multiprocessing.pool.MapResult.ready" -> "threading.Event.is_set" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.Pool.close" -> "multiprocessing.util.debug" [color = "#b2b2b2ff", label = "1"];

}
